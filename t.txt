    Finished release [optimized + debuginfo] target(s) in 0.06s
     Running `target_bacon/release/ppg2_iterations_with_fail`
[32mengine.rs:873[0m	0 | removed leaf ephemeral N0
[32mengine.rs:873[0m	0 | removed leaf ephemeral N4
[32mengine.rs:2091[0m	0 | Input to job N0 changed.
[32mlib.rs:228[0m	0 | 
[32mlib.rs:229[0m	0 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	0 | Input to job N3 changed.
[32mengine.rs:2104[0m	0 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	0 | 
[32mengine.rs:1020[0m	0 | Process signals, depth 0
[32mengine.rs:1348[0m	0 | Leaving process signals, 0
[32mengine.rs:2206[0m	0 | root node 'N3'
[32mengine.rs:2207[0m	0 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mlib.rs:228[0m	0 | 
[32mlib.rs:228[0m	0 | 
[32mlib.rs:229[0m	0 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	0 | 
[32mengine.rs:1020[0m	0 | Process signals, depth 0
[32mengine.rs:1348[0m	0 | Leaving process signals, 0
[32mengine.rs:2206[0m	0 | root node 'N1'
[32mengine.rs:2207[0m	0 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	0 | root node 'N2'
[32mengine.rs:2207[0m	0 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	0 | done adding root signals

[32mengine.rs:1019[0m	0 | 
[32mengine.rs:1020[0m	0 | Process signals, depth 0
[32mengine.rs:1026[0m	0 | 
[32mengine.rs:1027[0m	0 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	0 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	0 | 
[32mengine.rs:1027[0m	0 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	0 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	0 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1733[0m	0 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1338[0m	0 | New signals after process_signals - adding and processing
[32mengine.rs:2091[0m	0 | Input to job N3 changed.
[32mengine.rs:873[0m	0 | removed leaf ephemeral N3
[32mengine.rs:2213[0m	0 | done adding root signals

[32mlib.rs:229[0m	0 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:246[0m	0 | 
Jobs: N0(0): Output(FinishedSkipped)
N1(1): Ephemeral(ReadyButDelayed)
N2(2): Ephemeral(FinishedFailure)
N3(3): Always(FinishedUpstreamFailure)
N4(4): Output(FinishedUpstreamFailure)


Edges:
(N1(1)->N4(4): No
(N2(2)->N3(3): Yes
(N3(3)->N4(4): No


in code: 
g.add_node("0", JobKind::Output);
g.add_node("1", JobKind::Ephemeral);
g.add_node("2", JobKind::Ephemeral);
g.add_node("3", JobKind::Always);
g.add_node("4", JobKind::Output);
let edges = vec![
("4", "1"), 
("3", "2"), 
("4", "3"), 
];
for (a,b) in edges {
            if g.contains_node(a) && g.contains_node(b){
                g.depends_on(a,b);
            }
        }
        
[32mengine.rs:447[0m	0 | Unfinished: N1 Ephemeral(ReadyButDelayed)
[32mengine.rs:2096[0m	0 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mlib.rs:228[0m	0 | 
[32mengine.rs:873[0m	0 | removed leaf ephemeral N0
[32mlib.rs:228[0m	0 | 
[32mlib.rs:229[0m	0 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1340[0m	0 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	0 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	0 | 
[32mengine.rs:1020[0m	0 | Process signals, depth 1
[32mengine.rs:1026[0m	0 | 
[32mengine.rs:1027[0m	0 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	0 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	0 | 
[32mengine.rs:1027[0m	0 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	0 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	0 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	0 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	0 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	0 | 
[32mengine.rs:1020[0m	0 | Process signals, depth 2
[32mengine.rs:1026[0m	0 | 
[32mengine.rs:1027[0m	0 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	0 | Leaving process signals, 2
[32mengine.rs:1348[0m	0 | Leaving process signals, 1
[32mengine.rs:1348[0m	0 | Leaving process signals, 0
[32mlib.rs:251[0m	0 | Running N1
[32mengine.rs:891[0m	0 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	0 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	0 | 
[32mengine.rs:1020[0m	0 | Process signals, depth 0
[32mengine.rs:1026[0m	0 | 
[32mengine.rs:1027[0m	0 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	0 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	0 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	0 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	0 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	0 | 
[32mengine.rs:1020[0m	0 | Process signals, depth 1
[32mengine.rs:1026[0m	0 | 
[32mengine.rs:1027[0m	0 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	0 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	0 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	0 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	0 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 2
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	1 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	1 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	1 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 3
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	1 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	1 | Leaving process signals, 3
[32mengine.rs:1348[0m	1 | Leaving process signals, 2
[32mengine.rs:1348[0m	1 | Leaving process signals, 1
[32mengine.rs:1348[0m	1 | Leaving process signals, 0
[32mlib.rs:251[0m	1 | Running N3
[32mengine.rs:891[0m	1 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	1 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 0
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1227[0m	1 | 	Updating N3 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	1 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	1 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	1 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 1
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	1 | Leaving process signals, 1
[32mengine.rs:1348[0m	1 | Leaving process signals, 0
[32mlib.rs:228[0m	1 | 
[32mlib.rs:229[0m	1 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	1 | removed leaf ephemeral N4
[32mengine.rs:2091[0m	1 | Input to job N1 changed.
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 0
[32mengine.rs:1348[0m	1 | Leaving process signals, 0
[32mengine.rs:2206[0m	1 | root node 'N1'
[32mengine.rs:2207[0m	1 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2213[0m	1 | done adding root signals

[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 0
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	1 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1338[0m	1 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	1 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 1
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	1 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	1 | Leaving process signals, 1
[32mengine.rs:1348[0m	1 | Leaving process signals, 0
[32mlib.rs:251[0m	1 | Running N1
[32mengine.rs:891[0m	1 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	1 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:873[0m	0 | removed leaf ephemeral N4
[32mengine.rs:1019[0m	0 | 
[32mengine.rs:873[0m	0 | removed leaf ephemeral N0
[32mengine.rs:2141[0m	1 | output was missing N3
[32mengine.rs:2142[0m	1 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	1 | Input to job N1 changed.
[32mengine.rs:2096[0m	1 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	0 | Input to job N4 changed.
[32mengine.rs:2091[0m	0 | Input to job N1 changed.
[32mengine.rs:2091[0m	0 | Input to job N2 changed.
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 0
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	1 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	1 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	1 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	1 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 1
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	1 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:1183[0m	1 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	1 | New signals after process_signals - adding and processing
[32mlib.rs:229[0m	0 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:873[0m	0 | removed leaf ephemeral N3
[32mengine.rs:2096[0m	1 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	1 | Input to job N1 changed.
[32mengine.rs:2096[0m	1 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2177[0m	1 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 0
[32mengine.rs:1348[0m	1 | Leaving process signals, 0
[32mengine.rs:2206[0m	1 | root node 'N1'
[32mengine.rs:2207[0m	1 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	1 | root node 'N2'
[32mengine.rs:2207[0m	1 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	1 | done adding root signals

[32mengine.rs:1019[0m	1 | 
[32mengine.rs:1020[0m	1 | Process signals, depth 0
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	1 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	1 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	1 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	2 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	2 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	2 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	2 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 1
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	2 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	2 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	2 | Leaving process signals, 1
[32mengine.rs:1348[0m	2 | Leaving process signals, 0
[32mlib.rs:251[0m	2 | Running N1
[32mengine.rs:897[0m	2 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	2 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 0
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1231[0m	2 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	2 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	2 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	2 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	2 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	2 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 1
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	2 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	2 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1274[0m	2 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	2 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	2 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	2 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	2 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 2
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	2 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	2 | Leaving process signals, 2
[32mengine.rs:1348[0m	2 | Leaving process signals, 1
[32mengine.rs:1348[0m	2 | Leaving process signals, 0
[32mlib.rs:251[0m	2 | Running N2
[32mengine.rs:891[0m	2 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	2 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 0
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	2 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	2 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	2 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	2 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 1
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	2 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	2 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	2 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	2 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	2 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	2 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	2 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 2
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:2096[0m	1 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	1 | Input to job N1 changed.
[32mengine.rs:1020[0m	1 | Process signals, depth 0
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1798[0m	2 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1338[0m	2 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	2 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 1
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	2 | 	Updating N3 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	2 | Leaving process signals, 1
[32mengine.rs:1348[0m	2 | Leaving process signals, 0
[32mlib.rs:251[0m	2 | Running N3
[32mengine.rs:903[0m	2 | 	Updating N3 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:971[0m	2 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1340[0m	1 | 	 Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2091[0m	1 | Input to job N0 changed.
[32mengine.rs:1020[0m	1 | Process signals, depth 0
[32mengine.rs:1348[0m	2 | Leaving process signals, 0
[32mengine.rs:2206[0m	2 | root node 'N1'
[32mengine.rs:2207[0m	2 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	2 | done adding root signals

[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 0
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	2 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	2 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	2 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	2 | Process signals, depth 1
[32mengine.rs:1026[0m	2 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	3 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	3 | Leaving process signals, 1
[32mengine.rs:1348[0m	3 | Leaving process signals, 0
[32mlib.rs:251[0m	3 | Running N1
[32mengine.rs:897[0m	3 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1020[0m	2 | Process signals, depth 0
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 2
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	2 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1558[0m	3 | 			 had history - edge not invalidated
[32mengine.rs:1602[0m	3 | 		Edge not invalidated N2(2)->N3(3)
[32mengine.rs:1631[0m	3 | 		 not_done: 0, invalidated: false
[32mengine.rs:2091[0m	0 | Input to job N0 changed.
[32mengine.rs:1019[0m	0 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 0
[32mengine.rs:1348[0m	3 | Leaving process signals, 0
[32mengine.rs:2206[0m	3 | root node 'N0'
[32mengine.rs:2207[0m	3 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	3 | root node 'N1'
[32mengine.rs:2207[0m	3 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	3 | root node 'N2'
[32mengine.rs:2207[0m	3 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	3 | done adding root signals

[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 0
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	3 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	3 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	3 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	3 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1733[0m	3 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1338[0m	3 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	3 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	3 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	3 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 1
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	3 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	3 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	3 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	3 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	3 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	3 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 2
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	3 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	3 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	3 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	3 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	3 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	3 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	3 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 3
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	3 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1338[0m	3 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	3 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 4
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	3 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	3 | Leaving process signals, 4
[32mengine.rs:1348[0m	3 | Leaving process signals, 3
[32mengine.rs:1348[0m	3 | Leaving process signals, 2
[32mengine.rs:1348[0m	3 | Leaving process signals, 1
[32mengine.rs:1348[0m	3 | Leaving process signals, 0
[32mlib.rs:251[0m	3 | Running N3
[32mengine.rs:891[0m	3 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	3 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N3
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 0
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	3 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	3 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	3 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	3 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 1
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	3 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	3 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	3 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	3 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 2
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	3 | -> new Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1338[0m	3 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	3 | 	 Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 3
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobReadyToRun, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	3 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	3 | Leaving process signals, 3
[32mengine.rs:1348[0m	3 | Leaving process signals, 2
[32mengine.rs:1348[0m	3 | Leaving process signals, 1
[32mengine.rs:1348[0m	3 | Leaving process signals, 0
[32mlib.rs:251[0m	3 | Running N1
[32mengine.rs:891[0m	3 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	3 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	3 | 
[32mengine.rs:1020[0m	3 | Process signals, depth 0
[32mengine.rs:1026[0m	3 | 
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	3 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	3 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	3 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	4 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 1
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	4 | Leaving process signals, 1
[32mengine.rs:1348[0m	4 | Leaving process signals, 0
[32mlib.rs:251[0m	4 | Running N0
[32mengine.rs:897[0m	4 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	4 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 0
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1231[0m	4 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	4 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	4 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	4 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 1
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	4 | Leaving process signals, 1
[32mengine.rs:1348[0m	4 | Leaving process signals, 0
[32mlib.rs:251[0m	4 | Running N4
[32mengine.rs:891[0m	4 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	4 | -> new Signal { kind: JobFinishedSuccess, node_idx: 4 } N4
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 0
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 4 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	4 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	4 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	4 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	4 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 1
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	4 | Leaving process signals, 1
[32mengine.rs:1348[0m	4 | Leaving process signals, 0
[32mlib.rs:228[0m	4 | 
[32mlib.rs:229[0m	4 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	4 | Input to job N1 changed.
[32mengine.rs:2091[0m	4 | Input to job N2 changed.
[32mengine.rs:2096[0m	4 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 0
[32mengine.rs:1348[0m	4 | Leaving process signals, 0
[32mengine.rs:2206[0m	4 | root node 'N1'
[32mengine.rs:2207[0m	4 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	4 | root node 'N2'
[32mengine.rs:2207[0m	4 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	4 | done adding root signals

[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 0
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	4 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	4 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	4 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	4 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	4 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 1
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	4 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	4 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	4 | Leaving process signals, 1
[32mengine.rs:1348[0m	4 | Leaving process signals, 0
[32mlib.rs:251[0m	4 | Running N2
[32mengine.rs:897[0m	4 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	4 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 0
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Output(Running)
[32mengine.rs:1202[0m	4 | 	Updating N2 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	4 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	4 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	4 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 1
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Output(FinishedSuccess)
[32mengine.rs:2096[0m	1 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	4 | Input to job N2 changed.
[32mengine.rs:2091[0m	4 | Input to job N3 changed.
[32mengine.rs:2096[0m	4 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 0
[32mengine.rs:1348[0m	4 | Leaving process signals, 0
[32mengine.rs:2206[0m	4 | root node 'N1'
[32mengine.rs:2207[0m	4 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	4 | root node 'N2'
[32mengine.rs:2207[0m	4 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2206[0m	4 | root node 'N3'
[32mengine.rs:2207[0m	4 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:2213[0m	4 | done adding root signals

[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 0
[32mengine.rs:1026[0m	4 | 
[32mengine.rs:1027[0m	4 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	3 | Input to job N1 changed.
[32mengine.rs:971[0m	3 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1206[0m	4 | 	Updating N3 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1221[0m	4 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	4 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	4 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	4 | Process signals, depth 1
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1182[0m	5 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N4
[32mengine.rs:1183[0m	5 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	5 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	5 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N4
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 2
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	5 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N4
[32mengine.rs:1338[0m	5 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	5 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N4
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 3
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	5 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	5 | Leaving process signals, 3
[32mengine.rs:1348[0m	5 | Leaving process signals, 2
[32mengine.rs:1348[0m	5 | Leaving process signals, 1
[32mengine.rs:1348[0m	5 | Leaving process signals, 0
[32mlib.rs:251[0m	5 | Running N4
[32mengine.rs:891[0m	5 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	5 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N4
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 0
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	5 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	5 | -> new Signal { kind: JobDone, node_idx: 3 } N4
[32mengine.rs:1338[0m	5 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	5 | 	 Signal { kind: JobDone, node_idx: 3 } N4
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 1
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:2032[0m	5 | Job ready for cleanup NodeInfo { job_id: "N3", state: Ephemeral(FinishedSuccessNotReadyForCleanup), history_output: Some("history_N3"), last_considered_in_gen: 0 }
[32mengine.rs:2033[0m	5 | 	Updating N3 from Ephemeral(FinishedSuccessNotReadyForCleanup) to Ephemeral(FinishedSuccessReadyForCleanup)
[32mengine.rs:1348[0m	5 | Leaving process signals, 1
[32mengine.rs:1348[0m	5 | Leaving process signals, 0
[32mengine.rs:1006[0m	5 | -> new Signal { kind: JobCleanedUp, node_idx: 2 } N3
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 0
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobCleanedUp, node_idx: 2 } for N3. Current state: Ephemeral(FinishedSuccessReadyForCleanup)
[32mengine.rs:1320[0m	5 | 	Updating N3 from Ephemeral(FinishedSuccessReadyForCleanup) to Ephemeral(FinishedSuccessCleanedUp)
[32mengine.rs:1348[0m	5 | Leaving process signals, 0
[32mlib.rs:228[0m	5 | 
[32mlib.rs:229[0m	5 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	5 | removed leaf ephemeral N2
[32mengine.rs:873[0m	5 | removed leaf ephemeral N0
[32mengine.rs:2091[0m	5 | Input to job N3 changed.
[32mengine.rs:2104[0m	5 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:2091[0m	5 | Input to job N1 changed.
[32mengine.rs:2104[0m	5 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 0
[32mengine.rs:1348[0m	5 | Leaving process signals, 0
[32mengine.rs:2206[0m	5 | root node 'N1'
[32mengine.rs:2207[0m	5 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	5 | done adding root signals

[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 0
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1798[0m	5 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	5 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	5 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 1
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	5 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	5 | Leaving process signals, 1
[32mengine.rs:1348[0m	5 | Leaving process signals, 0
[32mlib.rs:251[0m	5 | Running N1
[32mengine.rs:903[0m	5 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:995[0m	5 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 0
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	5 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1248[0m	5 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	5 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	5 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	5 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	5 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 1
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	5 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	5 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1281[0m	5 | 	Updating N3 from Ephemeral(NotReady(Invalidated)) to Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	5 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1298[0m	5 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	5 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	5 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	5 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	5 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 2
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	5 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1182[0m	5 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	5 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	5 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	5 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	5 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	5 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	5 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	5 | 
[32mengine.rs:1020[0m	5 | Process signals, depth 3
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	5 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	5 | 
[32mengine.rs:1027[0m	5 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	5 | Leaving process signals, 3
[32mengine.rs:1348[0m	5 | Leaving process signals, 2
[32mengine.rs:1348[0m	5 | Leaving process signals, 1
[32mengine.rs:1348[0m	5 | Leaving process signals, 0
[32mlib.rs:228[0m	5 | 
[32mlib.rs:229[0m	5 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	5 | removed leaf ephemeral N0
[32mengine.rs:873[0m	6 | removed leaf ephemeral N2
[32mengine.rs:873[0m	6 | removed leaf ephemeral N3
[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 0
[32mengine.rs:1348[0m	6 | Leaving process signals, 0
[32mengine.rs:2213[0m	6 | done adding root signals

[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 0
[32mengine.rs:1348[0m	6 | Leaving process signals, 0
[32mlib.rs:228[0m	6 | 
[32mlib.rs:229[0m	6 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	6 | removed leaf ephemeral N2
[32mengine.rs:873[0m	6 | removed leaf ephemeral N0
[32mengine.rs:2177[0m	6 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:2091[0m	6 | Input to job N1 changed.
[32mengine.rs:2104[0m	6 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 0
[32mengine.rs:1348[0m	6 | Leaving process signals, 0
[32mengine.rs:2206[0m	6 | root node 'N1'
[32mengine.rs:2207[0m	6 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	6 | done adding root signals

[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 0
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1798[0m	6 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	6 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	6 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 1
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	6 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	6 | Leaving process signals, 1
[32mengine.rs:1348[0m	6 | Leaving process signals, 0
[32mlib.rs:251[0m	6 | Running N1
[32mengine.rs:903[0m	6 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:995[0m	6 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 0
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	6 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1248[0m	6 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	6 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	6 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	6 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	6 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 1
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	6 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	6 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1281[0m	6 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1019[0m	4 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 0
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	6 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	6 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	6 | New signals after process_signals - adding and processing
[32mengine.rs:1874[0m	3 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Validated))
[32mengine.rs:1182[0m	4 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1294[0m	6 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1298[0m	6 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	6 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	6 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	6 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	6 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 2
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	6 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 0
[32mengine.rs:1348[0m	6 | Leaving process signals, 0
[32mengine.rs:2206[0m	6 | root node 'N0'
[32mengine.rs:2207[0m	6 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	6 | root node 'N1'
[32mengine.rs:2207[0m	6 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	6 | done adding root signals

[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 0
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	6 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	6 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	6 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	6 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	6 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	6 | 
[32mengine.rs:1020[0m	6 | Process signals, depth 1
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	6 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	6 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	7 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	7 | Leaving process signals, 1
[32mengine.rs:1348[0m	7 | Leaving process signals, 0
[32mlib.rs:251[0m	7 | Running N1
[32mengine.rs:891[0m	7 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	7 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 0
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	7 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	7 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	7 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	7 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 1
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	7 | Leaving process signals, 1
[32mengine.rs:1348[0m	7 | Leaving process signals, 0
[32mlib.rs:251[0m	7 | Running N0
[32mengine.rs:891[0m	7 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	7 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 0
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	7 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	7 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	7 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	7 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 1
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	7 | Leaving process signals, 1
[32mengine.rs:1348[0m	7 | Leaving process signals, 0
[32mlib.rs:228[0m	7 | 
[32mlib.rs:229[0m	7 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	7 | Input to job N2 changed.
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 0
[32mengine.rs:1348[0m	7 | Leaving process signals, 0
[32mengine.rs:2206[0m	7 | root node 'N0'
[32mengine.rs:2207[0m	7 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	7 | root node 'N1'
[32mengine.rs:2207[0m	7 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	7 | root node 'N2'
[32mengine.rs:2207[0m	7 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	7 | done adding root signals

[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 0
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	7 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	7 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1881[0m	6 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	7 | Considering an already finished job -> no-op
[32mengine.rs:1338[0m	7 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	7 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 3
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Validated))
[32mengine.rs:1810[0m	7 | 	Updating N3 from Ephemeral(NotReady(Validated)) to Ephemeral(ReadyButDelayed)
[32mengine.rs:1816[0m	7 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1338[0m	7 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	7 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 4
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(ReadyButDelayed)
[32mengine.rs:1359[0m	7 | downstream required N4
[32mengine.rs:1850[0m	7 | 	A downstream was required
[32mengine.rs:1852[0m	7 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	7 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	7 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	7 | Process signals, depth 5
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	7 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Ephemeral(ReadyButDelayed)
[32mengine.rs:1074[0m	7 | 	Updating N3 from Ephemeral(ReadyButDelayed) to Ephemeral(ReadyToRun(Validated))
[32mengine.rs:1348[0m	7 | Leaving process signals, 5
[32mengine.rs:1348[0m	7 | Leaving process signals, 4
[32mengine.rs:1348[0m	7 | Leaving process signals, 3
[32mengine.rs:1348[0m	7 | Leaving process signals, 2
[32mengine.rs:1348[0m	7 | Leaving process signals, 1
[32mengine.rs:1348[0m	7 | Leaving process signals, 0
[32mlib.rs:251[0m	7 | Running N3
[32mengine.rs:903[0m	7 | 	Updating N3 from Ephemeral(ReadyToRun(Validated)) to Ephemeral(Running(Validated))
[32mengine.rs:971[0m	7 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N3
[32mengine.rs:1019[0m	7 | 
[32mengine.rs:1020[0m	8 | Process signals, depth 0
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N3. Current state: Ephemeral(Running(Validated))
[32mengine.rs:1206[0m	8 | 	Updating N3 from Ephemeral(Running(Validated)) to Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1221[0m	8 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	8 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	8 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	8 | 
[32mengine.rs:1020[0m	8 | Process signals, depth 1
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1182[0m	8 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	8 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	8 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	8 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	8 | 
[32mengine.rs:1020[0m	8 | Process signals, depth 2
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	8 | Considering an already finished job -> no-op
[32mengine.rs:1348[0m	8 | Leaving process signals, 2
[32mengine.rs:1348[0m	8 | Leaving process signals, 1
[32mengine.rs:1348[0m	8 | Leaving process signals, 0
[32mlib.rs:228[0m	8 | 
[32mlib.rs:229[0m	8 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	8 | removed leaf ephemeral N3
[32mengine.rs:2091[0m	8 | Input to job N2 changed.
[32mengine.rs:1019[0m	8 | 
[32mengine.rs:1020[0m	8 | Process signals, depth 0
[32mengine.rs:1348[0m	8 | Leaving process signals, 0
[32mengine.rs:2206[0m	8 | root node 'N2'
[32mengine.rs:2207[0m	8 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N2
[32mengine.rs:2213[0m	8 | done adding root signals

[32mengine.rs:1019[0m	8 | 
[32mengine.rs:1020[0m	8 | Process signals, depth 0
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	8 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1338[0m	8 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	8 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1019[0m	8 | 
[32mengine.rs:1020[0m	8 | Process signals, depth 1
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	8 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	8 | Leaving process signals, 1
[32mengine.rs:1348[0m	8 | Leaving process signals, 0
[32mlib.rs:251[0m	8 | Running N2
[32mengine.rs:891[0m	8 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	8 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N2
[32mengine.rs:1019[0m	8 | 
[32mengine.rs:1020[0m	8 | Process signals, depth 0
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	8 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	8 | -> new Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:1338[0m	8 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	8 | 	 Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:1019[0m	8 | 
[32mengine.rs:2096[0m	2 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1340[0m	6 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	8 | 
[32mengine.rs:1775[0m	4 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1027[0m	6 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1026[0m	7 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	8 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	8 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	8 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	8 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	8 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	8 | 
[32mengine.rs:1020[0m	8 | Process signals, depth 1
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	8 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	8 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	8 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	8 | Leaving process signals, 1
[32mengine.rs:1348[0m	8 | Leaving process signals, 0
[32mlib.rs:251[0m	8 | Running N0
[32mengine.rs:1026[0m	8 | 
[32mengine.rs:1182[0m	8 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:873[0m	1 | removed leaf ephemeral N4
[32mengine.rs:1027[0m	3 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	8 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1020[0m	8 | Process signals, depth 1
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	9 | Leaving process signals, 1
[32mengine.rs:1348[0m	9 | Leaving process signals, 0
[32mengine.rs:1020[0m	8 | Process signals, depth 1
[32mengine.rs:1183[0m	6 | reconsidering lead to no update, all current gen
[32mengine.rs:891[0m	8 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	8 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	9 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	9 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1338[0m	9 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	9 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	9 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1340[0m	9 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1019[0m	9 | 
[32mengine.rs:1020[0m	9 | Process signals, depth 1
[32mengine.rs:971[0m	9 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	9 | 
[32mengine.rs:1020[0m	9 | Process signals, depth 0
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1338[0m	9 | New signals after process_signals - adding and processing
[32mengine.rs:2091[0m	8 | Input to job N2 changed.
[32mengine.rs:1019[0m	9 | 
[32mengine.rs:1020[0m	9 | Process signals, depth 0
[32mengine.rs:1348[0m	9 | Leaving process signals, 0
[32mengine.rs:2206[0m	9 | root node 'N0'
[32mengine.rs:2207[0m	9 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	9 | root node 'N1'
[32mengine.rs:2207[0m	9 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	9 | root node 'N2'
[32mengine.rs:2207[0m	9 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	9 | done adding root signals

[32mengine.rs:1019[0m	9 | 
[32mengine.rs:1020[0m	9 | Process signals, depth 0
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1338[0m	9 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	9 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1019[0m	9 | 
[32mengine.rs:1020[0m	9 | Process signals, depth 2
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	9 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1338[0m	9 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	9 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1019[0m	9 | 
[32mengine.rs:1020[0m	9 | Process signals, depth 3
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	9 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	9 | Leaving process signals, 3
[32mengine.rs:1348[0m	9 | Leaving process signals, 2
[32mengine.rs:1348[0m	9 | Leaving process signals, 1
[32mengine.rs:1348[0m	9 | Leaving process signals, 0
[32mlib.rs:251[0m	9 | Running N1
[32mengine.rs:891[0m	9 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1183[0m	8 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	9 | 
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:873[0m	8 | removed leaf ephemeral N2
[32mengine.rs:873[0m	9 | removed leaf ephemeral N1
[32mengine.rs:2091[0m	9 | Input to job N0 changed.
[32mengine.rs:1019[0m	9 | 
[32mengine.rs:1020[0m	9 | Process signals, depth 0
[32mengine.rs:1348[0m	9 | Leaving process signals, 0
[32mengine.rs:2206[0m	9 | root node 'N0'
[32mengine.rs:2207[0m	9 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	9 | done adding root signals

[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	10 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	10 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	10 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 1
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	10 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	10 | Leaving process signals, 1
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mlib.rs:251[0m	10 | Running N0
[32mengine.rs:891[0m	10 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	10 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	10 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	10 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	10 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	10 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 1
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	10 | Leaving process signals, 1
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mlib.rs:228[0m	10 | 
[32mlib.rs:229[0m	10 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	10 | removed leaf ephemeral N3
[32mengine.rs:873[0m	10 | removed leaf ephemeral N4
[32mengine.rs:873[0m	10 | removed leaf ephemeral N2
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mengine.rs:2213[0m	10 | done adding root signals

[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mlib.rs:228[0m	10 | 
[32mlib.rs:229[0m	10 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	10 | removed leaf ephemeral N3
[32mengine.rs:873[0m	10 | removed leaf ephemeral N4
[32mengine.rs:873[0m	10 | removed leaf ephemeral N2
[32mengine.rs:873[0m	10 | removed leaf ephemeral N1
[32mengine.rs:2091[0m	10 | Input to job N0 changed.
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mengine.rs:2206[0m	10 | root node 'N0'
[32mengine.rs:2207[0m	10 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	10 | done adding root signals

[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	10 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	10 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	10 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 1
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	10 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	10 | Leaving process signals, 1
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mlib.rs:251[0m	10 | Running N0
[32mengine.rs:891[0m	10 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	10 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	10 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	10 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	10 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	10 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 1
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	10 | Leaving process signals, 1
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mlib.rs:228[0m	10 | 
[32mlib.rs:229[0m	10 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	10 | removed leaf ephemeral N3
[32mengine.rs:873[0m	10 | removed leaf ephemeral N2
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mengine.rs:2213[0m	10 | done adding root signals

[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mlib.rs:228[0m	10 | 
[32mlib.rs:229[0m	10 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	10 | removed leaf ephemeral N4
[32mengine.rs:873[0m	10 | removed leaf ephemeral N3
[32mengine.rs:873[0m	10 | removed leaf ephemeral N2
[32mengine.rs:873[0m	10 | removed leaf ephemeral N1
[32mengine.rs:2091[0m	10 | Input to job N0 changed.
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mengine.rs:2206[0m	10 | root node 'N0'
[32mengine.rs:2207[0m	10 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	10 | done adding root signals

[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	10 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	10 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	10 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 1
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	10 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	10 | Leaving process signals, 1
[32mengine.rs:1348[0m	10 | Leaving process signals, 0
[32mlib.rs:251[0m	10 | Running N0
[32mengine.rs:891[0m	10 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	10 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	10 | 
[32mengine.rs:1020[0m	10 | Process signals, depth 0
[32mengine.rs:1026[0m	10 | 
[32mengine.rs:1027[0m	10 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	11 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	11 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	11 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	11 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 1
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	11 | Leaving process signals, 1
[32mengine.rs:1348[0m	11 | Leaving process signals, 0
[32mlib.rs:228[0m	11 | 
[32mlib.rs:229[0m	11 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	11 | removed leaf ephemeral N4
[32mengine.rs:873[0m	11 | removed leaf ephemeral N2
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 0
[32mengine.rs:1348[0m	11 | Leaving process signals, 0
[32mengine.rs:2213[0m	11 | done adding root signals

[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 0
[32mengine.rs:1348[0m	11 | Leaving process signals, 0
[32mlib.rs:228[0m	11 | 
[32mlib.rs:229[0m	11 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	11 | removed leaf ephemeral N3
[32mengine.rs:873[0m	11 | removed leaf ephemeral N4
[32mengine.rs:873[0m	11 | removed leaf ephemeral N1
[32mengine.rs:873[0m	11 | removed leaf ephemeral N2
[32mengine.rs:2091[0m	11 | Input to job N0 changed.
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 0
[32mengine.rs:1348[0m	11 | Leaving process signals, 0
[32mengine.rs:2206[0m	11 | root node 'N0'
[32mengine.rs:2207[0m	11 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	11 | done adding root signals

[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 0
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	11 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	11 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	11 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 1
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	11 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	11 | Leaving process signals, 1
[32mengine.rs:1348[0m	11 | Leaving process signals, 0
[32mlib.rs:251[0m	11 | Running N0
[32mengine.rs:891[0m	11 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	11 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 0
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	11 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	11 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	11 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	11 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 1
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	11 | Leaving process signals, 1
[32mengine.rs:1348[0m	11 | Leaving process signals, 0
[32mlib.rs:228[0m	11 | 
[32mlib.rs:229[0m	11 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	11 | removed leaf ephemeral N2
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 0
[32mengine.rs:1348[0m	11 | Leaving process signals, 0
[32mengine.rs:1340[0m	9 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:2141[0m	2 | output was missing N4
[32mengine.rs:2142[0m	11 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2141[0m	11 | output was missing N3
[32mengine.rs:2142[0m	11 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 0
[32mengine.rs:1348[0m	11 | Leaving process signals, 0
[32mengine.rs:2206[0m	11 | root node 'N0'
[32mengine.rs:2207[0m	11 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	11 | root node 'N1'
[32mengine.rs:2207[0m	11 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	11 | root node 'N2'
[32mengine.rs:2207[0m	11 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	11 | done adding root signals

[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 0
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	11 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	11 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	11 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	11 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	11 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	11 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1733[0m	11 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1338[0m	11 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	11 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	11 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	11 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	11 | 
[32mengine.rs:1020[0m	11 | Process signals, depth 1
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	11 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	11 | 
[32mengine.rs:1027[0m	11 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	11 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	11 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	12 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	12 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	12 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	12 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	12 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 2
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	12 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	12 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	12 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	12 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	12 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	12 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	12 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 3
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	12 | -> new Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	12 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	12 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	12 | 	 Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1340[0m	12 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 4
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobReadyToRun, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	12 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	12 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	12 | Leaving process signals, 4
[32mengine.rs:1348[0m	12 | Leaving process signals, 3
[32mengine.rs:1348[0m	12 | Leaving process signals, 2
[32mengine.rs:1348[0m	12 | Leaving process signals, 1
[32mengine.rs:1348[0m	12 | Leaving process signals, 0
[32mlib.rs:251[0m	12 | Running N0
[32mengine.rs:891[0m	12 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	12 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 0
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	12 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	12 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	12 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	12 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 1
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	12 | Leaving process signals, 1
[32mengine.rs:1348[0m	12 | Leaving process signals, 0
[32mlib.rs:251[0m	12 | Running N4
[32mengine.rs:897[0m	12 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	12 | -> new Signal { kind: JobFinishedFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 0
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 4 } for N4. Current state: Output(Running)
[32mengine.rs:1231[0m	12 | 	Updating N4 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	12 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	12 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	12 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 1
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	12 | Leaving process signals, 1
[32mengine.rs:1348[0m	12 | Leaving process signals, 0
[32mlib.rs:251[0m	12 | Running N3
[32mengine.rs:897[0m	12 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	12 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 0
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Output(Running)
[32mengine.rs:1231[0m	12 | 	Updating N3 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	12 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	12 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	12 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	12 | 
[32mengine.rs:1020[0m	12 | Process signals, depth 1
[32mengine.rs:1026[0m	12 | 
[32mengine.rs:1027[0m	12 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	12 | Leaving process signals, 1
[32mengine.rs:1348[0m	12 | Leaving process signals, 0
[32mlib.rs:228[0m	13 | 
[32mlib.rs:229[0m	13 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2141[0m	13 | output was missing N4
[32mengine.rs:2142[0m	13 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	13 | Input to job N1 changed.
[32mengine.rs:2096[0m	13 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	13 | Input to job N3 changed.
[32mengine.rs:2096[0m	13 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	13 | 
[32mengine.rs:1020[0m	13 | Process signals, depth 0
[32mengine.rs:1348[0m	13 | Leaving process signals, 0
[32mengine.rs:2206[0m	13 | root node 'N1'
[32mengine.rs:2207[0m	13 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	13 | root node 'N3'
[32mengine.rs:2207[0m	13 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2213[0m	13 | done adding root signals

[32mengine.rs:1019[0m	13 | 
[32mengine.rs:1020[0m	13 | Process signals, depth 0
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	13 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	13 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1338[0m	13 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	13 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	13 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	13 | 
[32mengine.rs:1020[0m	13 | Process signals, depth 1
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	13 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	13 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	13 | Leaving process signals, 1
[32mengine.rs:1348[0m	13 | Leaving process signals, 0
[32mlib.rs:251[0m	13 | Running N3
[32mengine.rs:897[0m	13 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	13 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	13 | 
[32mengine.rs:1020[0m	13 | Process signals, depth 0
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Output(Running)
[32mengine.rs:1202[0m	13 | 	Updating N3 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	13 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1338[0m	13 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	13 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	13 | 
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1267[0m	9 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1019[0m	2 | 
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:2213[0m	11 | done adding root signals

[32mengine.rs:1019[0m	13 | 
[32mengine.rs:1020[0m	13 | Process signals, depth 0
[32mengine.rs:1348[0m	13 | Leaving process signals, 0
[32mengine.rs:1631[0m	9 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	13 | -> new Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1733[0m	13 | -> Not adding ConsiderJob for N0 - already had Signal { kind: JobFinishedSkip, node_idx: 0 }
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	13 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	13 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	13 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	13 | 	 Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1340[0m	13 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	13 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	13 | 
[32mengine.rs:1020[0m	13 | Process signals, depth 1
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	13 | 	Updating N0 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	13 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	13 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	13 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	13 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1338[0m	13 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	13 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	13 | 
[32mengine.rs:1020[0m	13 | Process signals, depth 2
[32mengine.rs:1026[0m	13 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	14 | Leaving process signals, 2
[32mengine.rs:1348[0m	14 | Leaving process signals, 1
[32mengine.rs:1348[0m	14 | Leaving process signals, 0
[32mengine.rs:1294[0m	13 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	14 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	14 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	14 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	14 | 
[32mengine.rs:1020[0m	14 | Process signals, depth 3
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	14 | Considering an already finished job -> no-op
[32mengine.rs:1027[0m	9 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1020[0m	13 | Process signals, depth 1
[32mengine.rs:1051[0m	13 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mlib.rs:251[0m	14 | Running N2
[32mengine.rs:891[0m	14 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	14 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	14 | 
[32mengine.rs:1020[0m	14 | Process signals, depth 0
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	14 | Leaving process signals, 3
[32mengine.rs:1348[0m	14 | Leaving process signals, 2
[32mengine.rs:1348[0m	14 | Leaving process signals, 1
[32mengine.rs:1348[0m	14 | Leaving process signals, 0
[32mlib.rs:228[0m	9 | 
[32mlib.rs:229[0m	14 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:971[0m	9 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:873[0m	14 | removed leaf ephemeral N0
[32mengine.rs:1227[0m	14 | 	Updating N2 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	14 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	14 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	14 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	14 | 
[32mengine.rs:1020[0m	14 | Process signals, depth 1
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1019[0m	11 | 
[32mlib.rs:228[0m	13 | 
[32mengine.rs:1019[0m	14 | 
[32mengine.rs:2141[0m	14 | output was missing N4
[32mengine.rs:2142[0m	14 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	14 | Input to job N1 changed.
[32mengine.rs:2096[0m	14 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1020[0m	13 | Process signals, depth 0
[32mengine.rs:1348[0m	14 | Leaving process signals, 0
[32mengine.rs:2206[0m	14 | root node 'N0'
[32mengine.rs:2207[0m	14 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	14 | root node 'N1'
[32mengine.rs:2207[0m	14 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	14 | root node 'N2'
[32mengine.rs:2207[0m	14 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	14 | done adding root signals

[32mengine.rs:1019[0m	14 | 
[32mengine.rs:1020[0m	14 | Process signals, depth 0
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	14 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	14 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	14 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	14 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	14 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	14 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1198[0m	13 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mlib.rs:228[0m	14 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedFailure)
[32mengine.rs:1020[0m	14 | Process signals, depth 3
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	14 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	14 | Leaving process signals, 3
[32mengine.rs:2177[0m	14 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:1027[0m	14 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	15 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	15 | 
[32mlib.rs:229[0m	14 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	15 | removed leaf ephemeral N2
[32mengine.rs:873[0m	15 | removed leaf ephemeral N0
[32mengine.rs:2091[0m	15 | Input to job N4 changed.
[32mengine.rs:1019[0m	15 | 
[32mengine.rs:1020[0m	15 | Process signals, depth 0
[32mengine.rs:1348[0m	15 | Leaving process signals, 0
[32mengine.rs:2206[0m	15 | root node 'N4'
[32mengine.rs:2207[0m	15 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:2213[0m	15 | done adding root signals

[32mengine.rs:1019[0m	15 | 
[32mengine.rs:1020[0m	15 | Process signals, depth 0
[32mengine.rs:1026[0m	15 | 
[32mengine.rs:1027[0m	15 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	15 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	15 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	15 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	15 | 
[32mengine.rs:1020[0m	15 | Process signals, depth 1
[32mengine.rs:1026[0m	15 | 
[32mengine.rs:1027[0m	15 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	15 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	15 | Leaving process signals, 1
[32mengine.rs:1348[0m	15 | Leaving process signals, 0
[32mlib.rs:251[0m	15 | Running N4
[32mengine.rs:891[0m	15 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	15 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:1019[0m	15 | 
[32mengine.rs:1020[0m	15 | Process signals, depth 0
[32mengine.rs:1026[0m	15 | 
[32mengine.rs:1027[0m	15 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	15 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	15 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	15 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	15 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	15 | 
[32mengine.rs:1020[0m	15 | Process signals, depth 1
[32mengine.rs:1026[0m	15 | 
[32mengine.rs:1027[0m	15 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	15 | Leaving process signals, 1
[32mengine.rs:1348[0m	15 | Leaving process signals, 0
[32mengine.rs:1348[0m	15 | Leaving process signals, 2
[32mengine.rs:1019[0m	15 | 
[32mengine.rs:1020[0m	15 | Process signals, depth 0
[32mengine.rs:1348[0m	15 | Leaving process signals, 0
[32mengine.rs:1027[0m	15 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	14 | Leaving process signals, 1
[32mengine.rs:1348[0m	15 | Leaving process signals, 0
[32mlib.rs:251[0m	15 | Running N1
[32mengine.rs:897[0m	15 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	15 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	15 | 
[32mengine.rs:1020[0m	15 | Process signals, depth 0
[32mengine.rs:1026[0m	15 | 
[32mengine.rs:1027[0m	15 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1231[0m	15 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	15 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	15 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	15 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	15 | 
[32mengine.rs:1020[0m	15 | Process signals, depth 1
[32mengine.rs:1026[0m	15 | 
[32mengine.rs:1027[0m	15 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	15 | Leaving process signals, 1
[32mengine.rs:1348[0m	15 | Leaving process signals, 0
[32mengine.rs:1348[0m	15 | Leaving process signals, 1
[32mengine.rs:1340[0m	14 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1221[0m	14 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:2206[0m	15 | root node 'N1'
[32mengine.rs:1051[0m	15 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mlib.rs:229[0m	14 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1020[0m	14 | Process signals, depth 0
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	16 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	16 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	16 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	16 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	16 | 
[32mengine.rs:1020[0m	16 | Process signals, depth 1
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	16 | Leaving process signals, 1
[32mengine.rs:1348[0m	16 | Leaving process signals, 0
[32mlib.rs:251[0m	16 | Running N3
[32mengine.rs:891[0m	16 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	16 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	16 | 
[32mengine.rs:1020[0m	16 | Process signals, depth 0
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	16 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	16 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	16 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	16 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	16 | 
[32mengine.rs:1020[0m	16 | Process signals, depth 1
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	16 | Leaving process signals, 1
[32mengine.rs:1348[0m	16 | Leaving process signals, 0
[32mlib.rs:228[0m	16 | 
[32mlib.rs:229[0m	16 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	16 | Input to job N0 changed.
[32mengine.rs:2096[0m	16 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	16 | 
[32mengine.rs:1020[0m	16 | Process signals, depth 0
[32mengine.rs:1348[0m	16 | Leaving process signals, 0
[32mengine.rs:2206[0m	16 | root node 'N0'
[32mengine.rs:2207[0m	16 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	16 | root node 'N1'
[32mengine.rs:2207[0m	16 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	16 | root node 'N2'
[32mengine.rs:2207[0m	16 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	16 | done adding root signals

[32mengine.rs:1019[0m	16 | 
[32mengine.rs:1020[0m	16 | Process signals, depth 0
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	16 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	16 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	16 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	16 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1733[0m	16 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1338[0m	16 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	16 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	16 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	16 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	16 | 
[32mengine.rs:1020[0m	16 | Process signals, depth 1
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	16 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	16 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	16 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	16 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	16 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	16 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	16 | 
[32mengine.rs:1020[0m	16 | Process signals, depth 2
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	16 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	16 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	16 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	16 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	16 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	16 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	16 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	16 | 
[32mengine.rs:1020[0m	16 | Process signals, depth 3
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	16 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1026[0m	16 | 
[32mengine.rs:1027[0m	16 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1338[0m	16 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	16 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 4
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	17 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	17 | Leaving process signals, 4
[32mengine.rs:1348[0m	17 | Leaving process signals, 3
[32mengine.rs:1348[0m	17 | Leaving process signals, 2
[32mengine.rs:1348[0m	17 | Leaving process signals, 1
[32mengine.rs:1348[0m	17 | Leaving process signals, 0
[32mlib.rs:251[0m	17 | Running N0
[32mengine.rs:897[0m	17 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	17 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 0
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1231[0m	17 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	17 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	17 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	17 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 1
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	17 | Leaving process signals, 1
[32mengine.rs:1348[0m	17 | Leaving process signals, 0
[32mlib.rs:251[0m	17 | Running N1
[32mengine.rs:891[0m	17 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	17 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 0
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	17 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	17 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	17 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	17 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 1
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	17 | Leaving process signals, 1
[32mengine.rs:1348[0m	17 | Leaving process signals, 0
[32mlib.rs:251[0m	17 | Running N3
[32mengine.rs:891[0m	17 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	17 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N3
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 0
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	17 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	17 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	17 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	17 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 1
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	17 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	17 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	17 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	17 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 2
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	17 | -> new Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1338[0m	17 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	17 | 	 Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 3
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobReadyToRun, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	17 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	17 | Leaving process signals, 3
[32mengine.rs:1348[0m	17 | Leaving process signals, 2
[32mengine.rs:1348[0m	17 | Leaving process signals, 1
[32mengine.rs:1348[0m	17 | Leaving process signals, 0
[32mlib.rs:251[0m	17 | Running N4
[32mengine.rs:891[0m	17 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	17 | -> new Signal { kind: JobFinishedFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 0
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 4 } for N4. Current state: Always(Running)
[32mengine.rs:1227[0m	17 | 	Updating N4 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	17 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	17 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	17 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	17 | 
[32mengine.rs:1020[0m	17 | Process signals, depth 1
[32mengine.rs:1026[0m	17 | 
[32mengine.rs:1027[0m	17 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	17 | Leaving process signals, 1
[32mengine.rs:1348[0m	17 | Leaving process signals, 0
[32mlib.rs:228[0m	17 | 
[32mlib.rs:229[0m	17 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	17 | Input to job N1 changed.
[32mengine.rs:2091[0m	17 | Input to job N2 changed.
[32mengine.rs:2096[0m	17 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 0
[32mengine.rs:1348[0m	18 | Leaving process signals, 0
[32mengine.rs:2206[0m	18 | root node 'N1'
[32mengine.rs:2207[0m	18 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	18 | root node 'N2'
[32mengine.rs:2207[0m	18 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	18 | done adding root signals

[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 0
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	18 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	18 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	18 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	18 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	18 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 1
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	18 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	18 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	18 | Leaving process signals, 1
[32mengine.rs:1348[0m	18 | Leaving process signals, 0
[32mlib.rs:251[0m	18 | Running N1
[32mengine.rs:891[0m	18 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	18 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 0
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	18 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	18 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	18 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	18 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 1
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	18 | Leaving process signals, 1
[32mengine.rs:1348[0m	18 | Leaving process signals, 0
[32mlib.rs:251[0m	18 | Running N2
[32mengine.rs:897[0m	18 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	18 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 0
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Output(Running)
[32mengine.rs:1202[0m	18 | 	Updating N2 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	18 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	18 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	18 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 1
[32mengine.rs:1026[0m	18 | 
[32mlib.rs:228[0m	15 | 
[32mlib.rs:228[0m	15 | 
[32mengine.rs:1348[0m	15 | Leaving process signals, 0
[32mengine.rs:1019[0m	15 | 
[32mengine.rs:2207[0m	15 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:1338[0m	15 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	18 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 1
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Output(FinishedSuccess)
[32mlib.rs:229[0m	18 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:229[0m	18 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	18 | removed leaf ephemeral N2
[32mengine.rs:873[0m	18 | removed leaf ephemeral N0
[32mengine.rs:2206[0m	18 | root node 'N2'
[32mengine.rs:2207[0m	18 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	18 | done adding root signals

[32mengine.rs:1019[0m	18 | 
[32mengine.rs:1020[0m	18 | Process signals, depth 0
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1182[0m	18 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mlib.rs:251[0m	18 | Running N3
[32mengine.rs:873[0m	18 | removed leaf ephemeral N4
[32mengine.rs:1020[0m	18 | Process signals, depth 1
[32mengine.rs:1026[0m	18 | 
[32mengine.rs:1348[0m	15 | Leaving process signals, 1
[32mengine.rs:873[0m	16 | removed leaf ephemeral N4
[32mengine.rs:1182[0m	14 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1026[0m	14 | 
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1183[0m	18 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	19 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	19 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 2
[32mengine.rs:1026[0m	19 | 
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	19 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	19 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	19 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 3
[32mengine.rs:1026[0m	19 | 
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	19 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	19 | Leaving process signals, 3
[32mengine.rs:1348[0m	19 | Leaving process signals, 2
[32mengine.rs:1348[0m	19 | Leaving process signals, 1
[32mengine.rs:1348[0m	19 | Leaving process signals, 0
[32mengine.rs:1348[0m	19 | Leaving process signals, 1
[32mengine.rs:1775[0m	19 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	19 | 
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	19 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	19 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	19 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	19 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 1
[32mengine.rs:1026[0m	19 | 
[32mengine.rs:1348[0m	19 | Leaving process signals, 0
[32mengine.rs:891[0m	18 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:2091[0m	18 | Input to job N0 changed.
[32mengine.rs:2091[0m	18 | Input to job N4 changed.
[32mengine.rs:1027[0m	18 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	18 | Leaving process signals, 0
[32mengine.rs:873[0m	18 | removed leaf ephemeral N3
[32mengine.rs:1183[0m	18 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	19 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	19 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 2
[32mengine.rs:1026[0m	19 | 
[32mengine.rs:2096[0m	19 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 0
[32mengine.rs:1348[0m	19 | Leaving process signals, 0
[32mengine.rs:2206[0m	19 | root node 'N0'
[32mengine.rs:2207[0m	19 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	19 | done adding root signals

[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 0
[32mengine.rs:1026[0m	19 | 
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2177[0m	19 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:1040[0m	19 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mlib.rs:251[0m	19 | Running N2
[32mengine.rs:873[0m	19 | removed leaf ephemeral N2
[32mengine.rs:873[0m	19 | removed leaf ephemeral N1
[32mengine.rs:2091[0m	19 | Input to job N0 changed.
[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 0
[32mengine.rs:1348[0m	19 | Leaving process signals, 0
[32mengine.rs:2206[0m	19 | root node 'N0'
[32mengine.rs:1775[0m	19 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:2091[0m	19 | Input to job N1 changed.
[32mengine.rs:2104[0m	19 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 0
[32mengine.rs:1348[0m	19 | Leaving process signals, 0
[32mengine.rs:2206[0m	19 | root node 'N1'
[32mengine.rs:2207[0m	19 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	19 | done adding root signals

[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 0
[32mengine.rs:1026[0m	19 | 
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:891[0m	19 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Output(FinishedSuccess)
[32mlib.rs:251[0m	19 | Running N4
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mlib.rs:251[0m	19 | Running N2
[32mengine.rs:971[0m	19 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	19 | 
[32mengine.rs:1020[0m	19 | Process signals, depth 0
[32mengine.rs:1026[0m	19 | 
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	20 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	20 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1338[0m	20 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 1
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	20 | Leaving process signals, 1
[32mengine.rs:1348[0m	20 | Leaving process signals, 0
[32mengine.rs:1798[0m	19 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	20 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 1
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	20 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	20 | Leaving process signals, 1
[32mengine.rs:1348[0m	20 | Leaving process signals, 0
[32mlib.rs:251[0m	20 | Running N1
[32mengine.rs:903[0m	20 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:1348[0m	19 | Leaving process signals, 1
[32mengine.rs:1348[0m	20 | Leaving process signals, 0
[32mlib.rs:251[0m	20 | Running N1
[32mengine.rs:897[0m	20 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1027[0m	19 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	20 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1338[0m	20 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 3
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	20 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	20 | Leaving process signals, 3
[32mengine.rs:1348[0m	20 | Leaving process signals, 2
[32mengine.rs:1348[0m	20 | Leaving process signals, 1
[32mengine.rs:1348[0m	20 | Leaving process signals, 0
[32mengine.rs:1026[0m	19 | 
[32mlib.rs:228[0m	20 | 
[32mlib.rs:229[0m	20 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:995[0m	20 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 0
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	20 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1248[0m	20 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	20 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	20 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 1
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	20 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	20 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1281[0m	20 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	20 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1298[0m	20 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	20 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	20 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 2
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	20 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1182[0m	20 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	20 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1338[0m	19 | New signals after process_signals - adding and processing
[32mlib.rs:251[0m	20 | Running N3
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:971[0m	19 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 0
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	20 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	20 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	20 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 1
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	20 | Leaving process signals, 1
[32mengine.rs:1348[0m	20 | Leaving process signals, 0
[32mlib.rs:251[0m	20 | Running N1
[32mengine.rs:897[0m	20 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	20 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	20 | 
[32mengine.rs:1020[0m	20 | Process signals, depth 0
[32mengine.rs:1026[0m	20 | 
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	20 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	20 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:891[0m	19 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:891[0m	19 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	20 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:2207[0m	19 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:1027[0m	20 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1340[0m	20 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 1
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	21 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	21 | Leaving process signals, 1
[32mengine.rs:1348[0m	21 | Leaving process signals, 0
[32mlib.rs:251[0m	21 | Running N0
[32mengine.rs:897[0m	21 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1267[0m	21 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:897[0m	20 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1040[0m	20 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1338[0m	20 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	21 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 1
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	21 | Leaving process signals, 1
[32mengine.rs:1348[0m	21 | Leaving process signals, 0
[32mlib.rs:251[0m	21 | Running N3
[32mengine.rs:897[0m	21 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	21 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 0
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Output(Running)
[32mengine.rs:1202[0m	21 | 	Updating N3 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	21 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	21 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	21 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 1
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	21 | Leaving process signals, 1
[32mengine.rs:1348[0m	21 | Leaving process signals, 0
[32mengine.rs:2213[0m	21 | done adding root signals

[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 0
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:873[0m	20 | removed leaf ephemeral N0
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	21 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	21 | Leaving process signals, 1
[32mengine.rs:1348[0m	21 | Leaving process signals, 0
[32mlib.rs:228[0m	21 | 
[32mlib.rs:229[0m	21 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:971[0m	20 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:995[0m	21 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 0
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	21 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	21 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	21 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	21 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 1
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1019[0m	21 | 
[32mlib.rs:228[0m	21 | 
[32mengine.rs:971[0m	21 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 0
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1202[0m	21 | 	Updating N0 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	21 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	21 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	21 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1020[0m	21 | Process signals, depth 0
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1227[0m	21 | 	Updating N2 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	21 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1251[0m	21 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	21 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	21 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	21 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 1
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedFailure)
[32mengine.rs:1182[0m	21 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	21 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	21 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	22 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1051[0m	19 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:873[0m	21 | removed leaf ephemeral N1
[32mengine.rs:1019[0m	21 | 
[32mengine.rs:1020[0m	21 | Process signals, depth 1
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	22 | Leaving process signals, 1
[32mengine.rs:1348[0m	22 | Leaving process signals, 0
[32mengine.rs:1027[0m	21 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:873[0m	21 | removed leaf ephemeral N4
[32mlib.rs:251[0m	21 | Running N1
[32mengine.rs:891[0m	22 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	22 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 0
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	22 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	22 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	22 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	22 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 1
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1020[0m	22 | Process signals, depth 0
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	22 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	22 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	22 | New signals after process_signals - adding and processing
[32mengine.rs:1681[0m	22 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:2091[0m	22 | Input to job N2 changed.
[32mengine.rs:2096[0m	22 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 0
[32mengine.rs:1348[0m	22 | Leaving process signals, 0
[32mengine.rs:2206[0m	22 | root node 'N1'
[32mengine.rs:2207[0m	22 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	22 | root node 'N2'
[32mengine.rs:2207[0m	22 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	22 | done adding root signals

[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 0
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:2091[0m	22 | Input to job N0 changed.
[32mengine.rs:1182[0m	22 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	22 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	22 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	22 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 2
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Unknown))
[32mengine.rs:1338[0m	22 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	22 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 1
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	22 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	22 | Leaving process signals, 1
[32mengine.rs:1348[0m	22 | Leaving process signals, 0
[32mlib.rs:251[0m	22 | Running N0
[32mengine.rs:1340[0m	22 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 1
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:2096[0m	22 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	22 | Input to job N3 changed.
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 0
[32mengine.rs:1348[0m	22 | Leaving process signals, 0
[32mengine.rs:2206[0m	22 | root node 'N0'
[32mengine.rs:2207[0m	22 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:891[0m	22 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1558[0m	22 | 			 had history - edge not invalidated
[32mengine.rs:1602[0m	22 | 		Edge not invalidated N1(1)->N4(4)
[32mengine.rs:1631[0m	22 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	22 | -> new Signal { kind: JobFinishedSkip, node_idx: 4 } N4
[32mengine.rs:1733[0m	22 | -> Not adding ConsiderJob for N4 - already had Signal { kind: JobFinishedSkip, node_idx: 4 }
[32mengine.rs:1338[0m	22 | New signals after process_signals - adding and processing
[32mlib.rs:229[0m	21 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1294[0m	21 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:971[0m	21 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mlib.rs:228[0m	22 | 
[32mlib.rs:229[0m	22 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:995[0m	22 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	22 | Process signals, depth 0
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1027[0m	22 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	22 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	22 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	23 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	23 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 1
[32mengine.rs:1026[0m	23 | 
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	23 | Leaving process signals, 1
[32mengine.rs:1348[0m	23 | Leaving process signals, 0
[32mengine.rs:1182[0m	22 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1183[0m	23 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	23 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	23 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 2
[32mengine.rs:1026[0m	23 | 
[32mengine.rs:873[0m	22 | removed leaf ephemeral N3
[32mengine.rs:873[0m	23 | removed leaf ephemeral N4
[32mengine.rs:1026[0m	22 | 
[32mengine.rs:1681[0m	22 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mlib.rs:228[0m	23 | 
[32mlib.rs:229[0m	23 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1340[0m	22 | 	 Signal { kind: JobFinishedSkip, node_idx: 4 } N4
[32mengine.rs:2091[0m	22 | Input to job N0 changed.
[32mengine.rs:1338[0m	22 | New signals after process_signals - adding and processing
[32mengine.rs:1019[0m	22 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 0
[32mengine.rs:1026[0m	23 | 
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Output(Running)
[32mengine.rs:1202[0m	23 | 	Updating N3 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	23 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	23 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	23 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 1
[32mengine.rs:1026[0m	23 | 
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	23 | Leaving process signals, 1
[32mengine.rs:1348[0m	23 | Leaving process signals, 0
[32mengine.rs:1294[0m	22 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:2091[0m	23 | Input to job N1 changed.
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	23 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	23 | Leaving process signals, 1
[32mengine.rs:1348[0m	23 | Leaving process signals, 0
[32mlib.rs:251[0m	23 | Running N2
[32mengine.rs:891[0m	23 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	23 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 0
[32mengine.rs:1026[0m	23 | 
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	23 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	23 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	23 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	23 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 1
[32mengine.rs:1026[0m	23 | 
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	23 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	23 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	23 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	23 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	23 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	23 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	23 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 2
[32mengine.rs:1026[0m	23 | 
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Output(NotReady(Invalidated))
[32mlib.rs:228[0m	23 | 
[32mlib.rs:229[0m	23 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2096[0m	23 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1026[0m	23 | 
[32mengine.rs:1348[0m	21 | Leaving process signals, 1
[32mengine.rs:873[0m	23 | removed leaf ephemeral N4
[32mengine.rs:873[0m	23 | removed leaf ephemeral N3
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 0
[32mengine.rs:1348[0m	23 | Leaving process signals, 0
[32mengine.rs:2213[0m	23 | done adding root signals

[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1020[0m	23 | Process signals, depth 0
[32mengine.rs:1348[0m	23 | Leaving process signals, 0
[32mlib.rs:228[0m	23 | 
[32mlib.rs:229[0m	23 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	23 | removed leaf ephemeral N3
[32mengine.rs:873[0m	23 | removed leaf ephemeral N4
[32mengine.rs:873[0m	23 | removed leaf ephemeral N1
[32mengine.rs:873[0m	23 | removed leaf ephemeral N2
[32mengine.rs:2206[0m	22 | root node 'N3'
[32mengine.rs:1564[0m	23 | 			 no history - edge invalidated
[32mengine.rs:1775[0m	23 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	23 | New signals after process_signals - adding and processing
[32mengine.rs:873[0m	23 | removed leaf ephemeral N0
[32mengine.rs:873[0m	23 | removed leaf ephemeral N4
[32mengine.rs:1027[0m	23 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	24 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	24 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	24 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	24 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 1
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	24 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	24 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	24 | Leaving process signals, 1
[32mengine.rs:1348[0m	24 | Leaving process signals, 0
[32mlib.rs:251[0m	24 | Running N2
[32mengine.rs:897[0m	24 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	24 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 0
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	24 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	24 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	24 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	24 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 1
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	24 | Leaving process signals, 1
[32mengine.rs:1348[0m	24 | Leaving process signals, 0
[32mlib.rs:251[0m	24 | Running N1
[32mengine.rs:891[0m	24 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	24 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 0
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	24 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	24 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	24 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	24 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 1
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	24 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	24 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	24 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	24 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 2
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	24 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	24 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	24 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 3
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	24 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	24 | Leaving process signals, 3
[32mengine.rs:1348[0m	24 | Leaving process signals, 2
[32mengine.rs:1348[0m	24 | Leaving process signals, 1
[32mengine.rs:1348[0m	24 | Leaving process signals, 0
[32mlib.rs:251[0m	24 | Running N3
[32mengine.rs:891[0m	24 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	24 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N3
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 0
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	24 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	24 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	24 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	24 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 1
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	24 | Leaving process signals, 1
[32mengine.rs:1348[0m	24 | Leaving process signals, 0
[32mlib.rs:228[0m	24 | 
[32mlib.rs:229[0m	24 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	24 | Input to job N1 changed.
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 0
[32mengine.rs:1348[0m	24 | Leaving process signals, 0
[32mengine.rs:2206[0m	24 | root node 'N1'
[32mengine.rs:2207[0m	24 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2213[0m	24 | done adding root signals

[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 0
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	24 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1338[0m	24 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	24 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 1
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	24 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	24 | Leaving process signals, 1
[32mengine.rs:1348[0m	24 | Leaving process signals, 0
[32mlib.rs:251[0m	24 | Running N1
[32mengine.rs:891[0m	24 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	24 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 0
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	24 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	24 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	24 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	24 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	24 | 
[32mengine.rs:1020[0m	24 | Process signals, depth 1
[32mengine.rs:1026[0m	24 | 
[32mengine.rs:1027[0m	24 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	24 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:1183[0m	25 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	25 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	25 | 	 Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 2
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	25 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1338[0m	25 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	25 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 3
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	25 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	25 | Leaving process signals, 3
[32mengine.rs:1348[0m	25 | Leaving process signals, 2
[32mengine.rs:1348[0m	25 | Leaving process signals, 1
[32mengine.rs:1348[0m	25 | Leaving process signals, 0
[32mlib.rs:251[0m	25 | Running N3
[32mengine.rs:891[0m	25 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	25 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 0
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	25 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	25 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1338[0m	25 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	25 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 1
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	25 | Leaving process signals, 1
[32mengine.rs:1348[0m	25 | Leaving process signals, 0
[32mlib.rs:228[0m	25 | 
[32mlib.rs:229[0m	25 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	25 | removed leaf ephemeral N0
[32mengine.rs:873[0m	25 | removed leaf ephemeral N4
[32mengine.rs:2091[0m	25 | Input to job N2 changed.
[32mengine.rs:2096[0m	25 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 0
[32mengine.rs:1348[0m	25 | Leaving process signals, 0
[32mengine.rs:2206[0m	25 | root node 'N1'
[32mengine.rs:2207[0m	25 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	25 | root node 'N2'
[32mengine.rs:2207[0m	25 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	25 | done adding root signals

[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 0
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	25 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	25 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	25 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	25 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	25 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 1
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	25 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	25 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	25 | Leaving process signals, 1
[32mengine.rs:1348[0m	25 | Leaving process signals, 0
[32mlib.rs:251[0m	25 | Running N1
[32mengine.rs:891[0m	25 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	25 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 0
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	25 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	25 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	25 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	25 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 1
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	25 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	25 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	25 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	25 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 2
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	25 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	25 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	25 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 3
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	25 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	25 | Leaving process signals, 3
[32mengine.rs:1348[0m	25 | Leaving process signals, 2
[32mengine.rs:1348[0m	25 | Leaving process signals, 1
[32mengine.rs:1348[0m	25 | Leaving process signals, 0
[32mlib.rs:251[0m	25 | Running N2
[32mengine.rs:897[0m	25 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	25 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 0
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	25 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	25 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	25 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	25 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 1
[32mengine.rs:1026[0m	25 | 
[32mengine.rs:1027[0m	25 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	25 | Leaving process signals, 1
[32mengine.rs:1348[0m	25 | Leaving process signals, 0
[32mlib.rs:251[0m	25 | Running N3
[32mengine.rs:891[0m	25 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	25 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N3
[32mengine.rs:1019[0m	25 | 
[32mengine.rs:1020[0m	25 | Process signals, depth 0
[32mengine.rs:1026[0m	26 | 
[32mengine.rs:1027[0m	26 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	26 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	26 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	26 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	26 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1020[0m	26 | Process signals, depth 1
[32mengine.rs:1026[0m	26 | 
[32mengine.rs:1027[0m	26 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	26 | Leaving process signals, 1
[32mengine.rs:1348[0m	26 | Leaving process signals, 0
[32mlib.rs:228[0m	26 | 
[32mlib.rs:229[0m	26 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	26 | removed leaf ephemeral N4
[32mengine.rs:2091[0m	26 | Input to job N1 changed.
[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1348[0m	23 | Leaving process signals, 0
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1019[0m	23 | 
[32mengine.rs:1340[0m	23 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:2091[0m	23 | Input to job N0 changed.
[32mengine.rs:2207[0m	23 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1596[0m	23 | 		Edge invalidated N2(2)-> N3(3)
[32mengine.rs:1338[0m	23 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	26 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	26 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1020[0m	26 | Process signals, depth 2
[32mengine.rs:1026[0m	26 | 
[32mengine.rs:1027[0m	26 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	26 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	26 | 
[32mengine.rs:1027[0m	26 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:2213[0m	26 | done adding root signals

[32mengine.rs:1631[0m	26 | 		 not_done: 0, invalidated: true
[32mengine.rs:1874[0m	26 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:2091[0m	23 | Input to job N2 changed.
[32mengine.rs:2091[0m	24 | Input to job N2 changed.
[32mengine.rs:1020[0m	26 | Process signals, depth 0
[32mlib.rs:228[0m	26 | 
[32mengine.rs:1020[0m	26 | Process signals, depth 3
[32mengine.rs:1026[0m	26 | 
[32mengine.rs:1020[0m	26 | Process signals, depth 0
[32mengine.rs:1348[0m	26 | Leaving process signals, 0
[32mengine.rs:2206[0m	26 | root node 'N0'
[32mengine.rs:2207[0m	26 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	26 | root node 'N1'
[32mengine.rs:2207[0m	26 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	26 | root node 'N2'
[32mengine.rs:2207[0m	26 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2206[0m	26 | root node 'N3'
[32mengine.rs:2207[0m	26 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:2213[0m	26 | done adding root signals

[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1020[0m	26 | Process signals, depth 0
[32mengine.rs:1026[0m	26 | 
[32mengine.rs:1027[0m	26 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	26 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	26 | 
[32mengine.rs:1027[0m	26 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	26 | 		 not_done: 0, invalidated: false
[32mengine.rs:1348[0m	26 | Leaving process signals, 0
[32mlib.rs:229[0m	26 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	26 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 4 } for N4. Current state: Output(NotReady(Unknown))
[32mengine.rs:1340[0m	26 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1348[0m	26 | Leaving process signals, 2
[32mengine.rs:1348[0m	26 | Leaving process signals, 1
[32mengine.rs:1348[0m	26 | Leaving process signals, 0
[32mlib.rs:251[0m	26 | Running N1
[32mengine.rs:1019[0m	26 | 
[32mengine.rs:2096[0m	26 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1020[0m	26 | Process signals, depth 0
[32mengine.rs:1348[0m	26 | Leaving process signals, 0
[32mengine.rs:2206[0m	26 | root node 'N1'
[32mengine.rs:2207[0m	26 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	26 | root node 'N2'
[32mengine.rs:2207[0m	26 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	26 | done adding root signals

[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1020[0m	26 | Process signals, depth 0
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	27 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	27 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	27 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	27 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	27 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	27 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	27 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	27 | Process signals, depth 1
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	27 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	27 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	27 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1340[0m	23 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1881[0m	26 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:891[0m	26 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1020[0m	26 | Process signals, depth 0
[32mengine.rs:1716[0m	26 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:2206[0m	26 | root node 'N1'
[32mengine.rs:1107[0m	26 | 	Updating N4 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:2091[0m	26 | Input to job N0 changed.
[32mengine.rs:1170[0m	27 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	27 | New signals after process_signals - adding and processing
[32mengine.rs:1338[0m	27 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	27 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	27 | Process signals, depth 2
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	27 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	27 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	27 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	27 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	27 | Process signals, depth 3
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1340[0m	27 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1020[0m	27 | Process signals, depth 0
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:971[0m	27 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	27 | Process signals, depth 0
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	27 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	27 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	27 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	27 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	27 | Process signals, depth 1
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	27 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	27 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	27 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	27 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	27 | Process signals, depth 2
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1020[0m	27 | Process signals, depth 3
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	27 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	27 | Leaving process signals, 3
[32mengine.rs:1348[0m	27 | Leaving process signals, 2
[32mengine.rs:1348[0m	27 | Leaving process signals, 1
[32mengine.rs:1348[0m	27 | Leaving process signals, 0
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(NotReady(Unknown))
[32mengine.rs:1558[0m	27 | 			 had history - edge not invalidated
[32mengine.rs:1602[0m	27 | 		Edge not invalidated N1(1)->N3(3)
[32mengine.rs:1631[0m	27 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	27 | -> new Signal { kind: JobFinishedSkip, node_idx: 3 } N3
[32mengine.rs:1733[0m	27 | -> Not adding ConsiderJob for N3 - already had Signal { kind: JobFinishedSkip, node_idx: 3 }
[32mengine.rs:1338[0m	27 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	27 | 	 Signal { kind: JobFinishedSkip, node_idx: 3 } N3
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	27 | Process signals, depth 4
[32mengine.rs:1026[0m	27 | 
[32mlib.rs:251[0m	27 | Running N4
[32mengine.rs:897[0m	27 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1681[0m	27 | -> new Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1338[0m	27 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	27 | 	 Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	27 | Process signals, depth 3
[32mengine.rs:1026[0m	27 | 
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: JobReadyToRun, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	28 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	28 | Leaving process signals, 3
[32mengine.rs:1348[0m	28 | Leaving process signals, 2
[32mengine.rs:1348[0m	28 | Leaving process signals, 1
[32mengine.rs:1348[0m	28 | Leaving process signals, 0
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1338[0m	28 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	28 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	28 | 
[32mengine.rs:1020[0m	28 | Process signals, depth 3
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 3 } for N3. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	28 | 	Updating N3 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	28 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	28 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	28 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	28 | 
[32mengine.rs:1020[0m	28 | Process signals, depth 5
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	28 | Leaving process signals, 5
[32mengine.rs:1348[0m	28 | Leaving process signals, 4
[32mengine.rs:1348[0m	28 | Leaving process signals, 3
[32mengine.rs:1348[0m	28 | Leaving process signals, 2
[32mengine.rs:1348[0m	28 | Leaving process signals, 1
[32mengine.rs:1348[0m	28 | Leaving process signals, 0
[32mlib.rs:251[0m	28 | Running N2
[32mengine.rs:897[0m	28 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	28 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	28 | 
[32mengine.rs:1020[0m	28 | Process signals, depth 0
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	28 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	28 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	28 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	28 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	28 | 
[32mengine.rs:1020[0m	28 | Process signals, depth 1
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	28 | Leaving process signals, 1
[32mengine.rs:1348[0m	28 | Leaving process signals, 0
[32mengine.rs:1020[0m	26 | Process signals, depth 0
[32mengine.rs:1798[0m	28 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	28 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	28 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	28 | 
[32mengine.rs:1020[0m	28 | Process signals, depth 4
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	28 | 	Updating N3 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	28 | Leaving process signals, 4
[32mengine.rs:1348[0m	28 | Leaving process signals, 3
[32mengine.rs:1348[0m	28 | Leaving process signals, 2
[32mengine.rs:1348[0m	28 | Leaving process signals, 1
[32mengine.rs:1348[0m	28 | Leaving process signals, 0
[32mlib.rs:251[0m	28 | Running N1
[32mengine.rs:897[0m	28 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	28 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	28 | 
[32mlib.rs:251[0m	28 | Running N4
[32mengine.rs:891[0m	28 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1020[0m	28 | Process signals, depth 0
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1019[0m	26 | 
[32mengine.rs:1020[0m	28 | Process signals, depth 3
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	28 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	28 | Leaving process signals, 3
[32mengine.rs:1348[0m	28 | Leaving process signals, 2
[32mengine.rs:1348[0m	28 | Leaving process signals, 1
[32mengine.rs:1348[0m	28 | Leaving process signals, 0
[32mengine.rs:1231[0m	28 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1348[0m	28 | Leaving process signals, 0
[32mlib.rs:228[0m	28 | 
[32mlib.rs:229[0m	28 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:971[0m	27 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:1019[0m	28 | 
[32mengine.rs:1020[0m	28 | Process signals, depth 0
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Output(Running)
[32mengine.rs:1202[0m	28 | 	Updating N4 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	28 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	28 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	28 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	28 | 
[32mengine.rs:1020[0m	28 | Process signals, depth 1
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:1027[0m	28 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	28 | Leaving process signals, 1
[32mengine.rs:1348[0m	28 | Leaving process signals, 0
[32mengine.rs:1733[0m	27 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:2207[0m	27 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2096[0m	27 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mlib.rs:228[0m	28 | 
[32mlib.rs:229[0m	28 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2206[0m	28 | root node 'N0'
[32mengine.rs:2207[0m	29 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	29 | done adding root signals

[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 0
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	29 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	29 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	29 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 1
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	29 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	29 | Leaving process signals, 1
[32mengine.rs:1348[0m	29 | Leaving process signals, 0
[32mlib.rs:251[0m	29 | Running N0
[32mengine.rs:891[0m	29 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	29 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 0
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	29 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	29 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	29 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	29 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 1
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	29 | Leaving process signals, 1
[32mengine.rs:1348[0m	29 | Leaving process signals, 0
[32mengine.rs:1019[0m	27 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 4
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	29 | Leaving process signals, 4
[32mengine.rs:1348[0m	29 | Leaving process signals, 3
[32mengine.rs:1348[0m	29 | Leaving process signals, 2
[32mengine.rs:1348[0m	29 | Leaving process signals, 1
[32mengine.rs:1348[0m	29 | Leaving process signals, 0
[32mlib.rs:251[0m	29 | Running N0
[32mengine.rs:891[0m	29 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	29 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 0
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	29 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	29 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	29 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	29 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 1
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	29 | Leaving process signals, 1
[32mengine.rs:1348[0m	29 | Leaving process signals, 0
[32mlib.rs:251[0m	29 | Running N2
[32mengine.rs:897[0m	29 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	29 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 0
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	29 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	29 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1251[0m	29 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	29 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	29 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	29 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 1
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	29 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	29 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	29 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	29 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	29 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	29 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	29 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 2
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	29 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	29 | 
[32mengine.rs:1027[0m	29 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	29 | Leaving process signals, 2
[32mengine.rs:1348[0m	29 | Leaving process signals, 1
[32mengine.rs:1348[0m	29 | Leaving process signals, 0
[32mlib.rs:228[0m	29 | 
[32mlib.rs:229[0m	29 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	29 | Input to job N0 changed.
[32mengine.rs:2091[0m	29 | Input to job N1 changed.
[32mengine.rs:2091[0m	29 | Input to job N3 changed.
[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	29 | Process signals, depth 0
[32mengine.rs:1348[0m	29 | Leaving process signals, 0
[32mengine.rs:2206[0m	29 | root node 'N0'
[32mengine.rs:2207[0m	29 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	29 | root node 'N1'
[32mengine.rs:2207[0m	29 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	29 | root node 'N3'
[32mengine.rs:2207[0m	29 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:2213[0m	29 | done adding root signals

[32mengine.rs:1019[0m	29 | 
[32mengine.rs:1020[0m	30 | Process signals, depth 0
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	30 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	30 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	30 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1338[0m	30 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1019[0m	30 | 
[32mengine.rs:1020[0m	30 | Process signals, depth 1
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	30 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	30 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	30 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	30 | Leaving process signals, 1
[32mengine.rs:1348[0m	30 | Leaving process signals, 0
[32mlib.rs:251[0m	30 | Running N0
[32mengine.rs:891[0m	30 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1026[0m	28 | 
[32mengine.rs:2213[0m	28 | done adding root signals

[32mengine.rs:1019[0m	30 | 
[32mengine.rs:1020[0m	30 | Process signals, depth 0
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	30 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1338[0m	30 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	27 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:995[0m	28 | -> new Signal { kind: JobFinishedFailure, node_idx: 4 } N4
[32mlib.rs:228[0m	28 | 
[32mengine.rs:971[0m	30 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	30 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	30 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	30 | -> new Signal { kind: JobFinishedSkip, node_idx: 3 } N3
[32mengine.rs:1733[0m	30 | -> Not adding ConsiderJob for N3 - already had Signal { kind: JobFinishedSkip, node_idx: 3 }
[32mengine.rs:1338[0m	30 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobFinishedSkip, node_idx: 3 } N3
[32mengine.rs:1019[0m	30 | 
[32mengine.rs:1020[0m	30 | Process signals, depth 1
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	30 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	30 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	30 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	30 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 3 } for N3. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	30 | 	Updating N3 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	30 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	30 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	30 | 
[32mengine.rs:1020[0m	30 | Process signals, depth 2
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	30 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	30 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	30 | -> Not adding ConsiderJob for N4 - already had Signal { kind: ConsiderJob, node_idx: 4 }
[32mengine.rs:1183[0m	30 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	30 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	30 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	30 | 
[32mengine.rs:1020[0m	30 | Process signals, depth 3
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	30 | Leaving process signals, 3
[32mengine.rs:1348[0m	30 | Leaving process signals, 2
[32mengine.rs:1348[0m	30 | Leaving process signals, 1
[32mengine.rs:1348[0m	30 | Leaving process signals, 0
[32mlib.rs:251[0m	30 | Running N2
[32mengine.rs:891[0m	30 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	30 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	30 | 
[32mengine.rs:1020[0m	30 | Process signals, depth 0
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	30 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	30 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	30 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	30 | 
[32mengine.rs:1020[0m	30 | Process signals, depth 1
[32mengine.rs:1026[0m	30 | 
[32mengine.rs:1027[0m	30 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	30 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	30 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	30 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	30 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 2
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	31 | -> new Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1338[0m	31 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	31 | 	 Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 3
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: JobReadyToRun, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	31 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	31 | Leaving process signals, 3
[32mengine.rs:1348[0m	31 | Leaving process signals, 2
[32mengine.rs:1348[0m	31 | Leaving process signals, 1
[32mengine.rs:1348[0m	31 | Leaving process signals, 0
[32mlib.rs:251[0m	31 | Running N0
[32mengine.rs:891[0m	31 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	31 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 0
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	31 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	31 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	31 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	31 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 1
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	31 | Leaving process signals, 1
[32mengine.rs:1348[0m	31 | Leaving process signals, 0
[32mlib.rs:251[0m	31 | Running N4
[32mengine.rs:891[0m	31 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	31 | -> new Signal { kind: JobFinishedFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 0
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 4 } for N4. Current state: Always(Running)
[32mengine.rs:1227[0m	31 | 	Updating N4 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	31 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	31 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	31 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 1
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	31 | Leaving process signals, 1
[32mengine.rs:1348[0m	31 | Leaving process signals, 0
[32mlib.rs:228[0m	31 | 
[32mlib.rs:229[0m	31 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	31 | Input to job N1 changed.
[32mengine.rs:2096[0m	31 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	28 | Input to job N4 changed.
[32mengine.rs:1248[0m	28 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:873[0m	28 | removed leaf ephemeral N0
[32mlib.rs:228[0m	29 | 
[32mengine.rs:873[0m	28 | removed leaf ephemeral N4
[32mengine.rs:873[0m	31 | removed leaf ephemeral N0
[32mengine.rs:2091[0m	31 | Input to job N1 changed.
[32mengine.rs:2096[0m	31 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 0
[32mengine.rs:1348[0m	31 | Leaving process signals, 0
[32mengine.rs:2206[0m	31 | root node 'N1'
[32mengine.rs:2207[0m	31 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	31 | done adding root signals

[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1251[0m	31 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	31 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	31 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	31 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 1
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mengine.rs:1019[0m	30 | 
[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 0
[32mengine.rs:1348[0m	31 | Leaving process signals, 0
[32mengine.rs:2206[0m	31 | root node 'N0'
[32mengine.rs:2207[0m	31 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	31 | root node 'N1'
[32mengine.rs:2207[0m	31 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	31 | root node 'N2'
[32mengine.rs:2207[0m	31 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	31 | done adding root signals

[32mengine.rs:1019[0m	31 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 0
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	31 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:1027[0m	31 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	27 | Leaving process signals, 0
[32mengine.rs:1775[0m	30 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	30 | 
[32mlib.rs:229[0m	30 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1182[0m	31 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1020[0m	31 | Process signals, depth 0
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	32 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	32 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	32 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	32 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1020[0m	32 | Process signals, depth 1
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	32 | Leaving process signals, 1
[32mengine.rs:1348[0m	32 | Leaving process signals, 0
[32mlib.rs:251[0m	32 | Running N1
[32mengine.rs:891[0m	32 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	32 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1020[0m	32 | Process signals, depth 0
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	32 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	32 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	32 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	32 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1020[0m	32 | Process signals, depth 1
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	32 | Leaving process signals, 1
[32mengine.rs:1348[0m	32 | Leaving process signals, 0
[32mlib.rs:251[0m	32 | Running N3
[32mengine.rs:891[0m	32 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	32 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1020[0m	32 | Process signals, depth 0
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	32 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	32 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	32 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	32 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1020[0m	32 | Process signals, depth 1
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	32 | Leaving process signals, 1
[32mengine.rs:1348[0m	32 | Leaving process signals, 0
[32mengine.rs:1681[0m	31 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:2206[0m	31 | root node 'N0'
[32mengine.rs:2207[0m	32 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	32 | root node 'N1'
[32mengine.rs:2207[0m	32 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	32 | root node 'N2'
[32mengine.rs:2207[0m	32 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	32 | done adding root signals

[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1020[0m	32 | Process signals, depth 0
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	32 | 		 not_done: 0, invalidated: false
[32mengine.rs:1020[0m	31 | Process signals, depth 0
[32mengine.rs:2091[0m	32 | Input to job N0 changed.
[32mengine.rs:1183[0m	32 | reconsidering lead to no update, all current gen
[32mengine.rs:2091[0m	31 | Input to job N2 changed.
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1020[0m	32 | Process signals, depth 0
[32mengine.rs:873[0m	31 | removed leaf ephemeral N2
[32mengine.rs:1340[0m	30 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mlib.rs:228[0m	32 | 
[32mlib.rs:229[0m	32 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1026[0m	31 | 
[32mengine.rs:2141[0m	32 | output was missing N4
[32mengine.rs:2142[0m	32 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	32 | Input to job N3 changed.
[32mengine.rs:2096[0m	32 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1020[0m	31 | Process signals, depth 0
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	32 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	32 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	32 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1020[0m	32 | Process signals, depth 1
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	32 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	32 | Leaving process signals, 1
[32mengine.rs:1348[0m	32 | Leaving process signals, 0
[32mlib.rs:251[0m	32 | Running N1
[32mengine.rs:897[0m	32 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1716[0m	32 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1026[0m	32 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 4 } for N4. Current state: Always(Running)
[32mengine.rs:1227[0m	33 | 	Updating N4 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	33 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	33 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 1
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	33 | Leaving process signals, 1
[32mengine.rs:1348[0m	33 | Leaving process signals, 0
[32mengine.rs:1733[0m	33 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1338[0m	33 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 1
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	33 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	33 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	33 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	33 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:2091[0m	32 | Input to job N2 changed.
[32mengine.rs:1027[0m	32 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	32 | Leaving process signals, 0
[32mengine.rs:2206[0m	33 | root node 'N1'
[32mengine.rs:2207[0m	33 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	33 | root node 'N2'
[32mengine.rs:2207[0m	33 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	33 | done adding root signals

[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 0
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	33 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	33 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	33 | New signals after process_signals - adding and processing
[32mengine.rs:1019[0m	32 | 
[32mengine.rs:971[0m	32 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 0
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	33 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1338[0m	33 | New signals after process_signals - adding and processing
[32mengine.rs:2096[0m	33 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 0
[32mengine.rs:1348[0m	33 | Leaving process signals, 0
[32mengine.rs:2206[0m	33 | root node 'N0'
[32mengine.rs:2207[0m	33 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	33 | root node 'N1'
[32mengine.rs:2207[0m	33 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	33 | root node 'N2'
[32mengine.rs:2207[0m	33 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	33 | done adding root signals

[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 0
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	33 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	33 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	33 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	33 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	33 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	33 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 1
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	33 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	33 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	33 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	33 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1338[0m	33 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 2
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	33 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	33 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	33 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	33 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	33 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	33 | 
[32mengine.rs:1020[0m	33 | Process signals, depth 3
[32mengine.rs:1026[0m	33 | 
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Unknown))
[32mengine.rs:1558[0m	34 | 			 had history - edge not invalidated
[32mengine.rs:1602[0m	34 | 		Edge not invalidated N1(1)->N4(4)
[32mengine.rs:1631[0m	34 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	34 | -> new Signal { kind: JobFinishedSkip, node_idx: 4 } N4
[32mengine.rs:1733[0m	34 | -> Not adding ConsiderJob for N4 - already had Signal { kind: JobFinishedSkip, node_idx: 4 }
[32mengine.rs:1338[0m	34 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	34 | 	 Signal { kind: JobFinishedSkip, node_idx: 4 } N4
[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	34 | Process signals, depth 4
[32mengine.rs:1026[0m	34 | 
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 4 } for N4. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	34 | 	Updating N4 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	34 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	34 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	34 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	34 | Process signals, depth 5
[32mengine.rs:1026[0m	34 | 
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	34 | Leaving process signals, 5
[32mengine.rs:1348[0m	34 | Leaving process signals, 4
[32mengine.rs:1348[0m	34 | Leaving process signals, 3
[32mengine.rs:1348[0m	34 | Leaving process signals, 2
[32mengine.rs:1348[0m	34 | Leaving process signals, 1
[32mengine.rs:1348[0m	34 | Leaving process signals, 0
[32mlib.rs:251[0m	34 | Running N0
[32mengine.rs:891[0m	34 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1020[0m	33 | Process signals, depth 1
[32mengine.rs:1631[0m	33 | 		 not_done: 0, invalidated: false
[32mengine.rs:1681[0m	33 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:2091[0m	32 | Input to job N3 changed.
[32mengine.rs:2091[0m	34 | Input to job N2 changed.
[32mengine.rs:2096[0m	34 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	34 | Process signals, depth 0
[32mengine.rs:1348[0m	34 | Leaving process signals, 0
[32mengine.rs:2206[0m	34 | root node 'N0'
[32mengine.rs:2207[0m	34 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	34 | root node 'N1'
[32mengine.rs:2207[0m	34 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	34 | root node 'N2'
[32mengine.rs:2207[0m	34 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	34 | done adding root signals

[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	34 | Process signals, depth 0
[32mengine.rs:1026[0m	34 | 
[32mlib.rs:229[0m	31 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1020[0m	33 | Process signals, depth 0
[32mengine.rs:1348[0m	34 | Leaving process signals, 0
[32mengine.rs:2213[0m	34 | done adding root signals

[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	34 | Process signals, depth 0
[32mengine.rs:1348[0m	34 | Leaving process signals, 0
[32mengine.rs:1221[0m	33 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	33 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	34 | Process signals, depth 2
[32mengine.rs:1026[0m	34 | 
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	34 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	34 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	34 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	34 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	34 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	34 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	34 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	34 | Process signals, depth 3
[32mengine.rs:1026[0m	34 | 
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	34 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1026[0m	34 | 
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1338[0m	34 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	34 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	34 | Process signals, depth 4
[32mengine.rs:1026[0m	34 | 
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	34 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	34 | Leaving process signals, 4
[32mengine.rs:1348[0m	34 | Leaving process signals, 3
[32mengine.rs:1348[0m	34 | Leaving process signals, 2
[32mengine.rs:1348[0m	34 | Leaving process signals, 1
[32mengine.rs:1348[0m	34 | Leaving process signals, 0
[32mlib.rs:251[0m	34 | Running N3
[32mengine.rs:891[0m	34 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mlib.rs:228[0m	34 | 
[32mlib.rs:229[0m	34 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1338[0m	34 | New signals after process_signals - adding and processing
[32mengine.rs:1274[0m	33 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:873[0m	34 | removed leaf ephemeral N3
[32mengine.rs:1340[0m	34 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:995[0m	34 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1026[0m	34 | 
[32mengine.rs:1716[0m	34 | -> new Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1733[0m	34 | -> Not adding ConsiderJob for N0 - already had Signal { kind: JobFinishedSkip, node_idx: 0 }
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	35 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	34 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 1
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	35 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	35 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	35 | Leaving process signals, 1
[32mengine.rs:1348[0m	35 | Leaving process signals, 0
[32mlib.rs:251[0m	35 | Running N2
[32mengine.rs:1019[0m	34 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 0
[32mengine.rs:1348[0m	35 | Leaving process signals, 0
[32mengine.rs:2213[0m	35 | done adding root signals

[32mengine.rs:1019[0m	35 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 0
[32mengine.rs:1348[0m	35 | Leaving process signals, 0
[32mengine.rs:873[0m	34 | removed leaf ephemeral N0
[32mengine.rs:1340[0m	34 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	35 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 1
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	35 | Leaving process signals, 1
[32mengine.rs:1348[0m	35 | Leaving process signals, 0
[32mengine.rs:1027[0m	34 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1338[0m	34 | New signals after process_signals - adding and processing
[32mlib.rs:228[0m	33 | 
[32mlib.rs:229[0m	35 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:228[0m	35 | 
[32mengine.rs:873[0m	35 | removed leaf ephemeral N2
[32mengine.rs:1294[0m	34 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	35 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	35 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	35 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	35 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 2
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	35 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	35 | Leaving process signals, 2
[32mengine.rs:1348[0m	35 | Leaving process signals, 1
[32mengine.rs:1348[0m	35 | Leaving process signals, 0
[32mengine.rs:1681[0m	35 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	35 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1019[0m	34 | 
[32mlib.rs:228[0m	35 | 
[32mlib.rs:229[0m	35 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1340[0m	35 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:995[0m	34 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	35 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 0
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1227[0m	35 | 	Updating N3 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	35 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1251[0m	35 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	35 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	35 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	35 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	35 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 1
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedFailure)
[32mengine.rs:1182[0m	35 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	35 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	35 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	35 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	35 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	35 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	35 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	35 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 2
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	35 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	35 | Leaving process signals, 2
[32mengine.rs:1348[0m	35 | Leaving process signals, 1
[32mengine.rs:1348[0m	35 | Leaving process signals, 0
[32mlib.rs:251[0m	35 | Running N0
[32mengine.rs:897[0m	35 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	35 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	35 | 
[32mengine.rs:1020[0m	35 | Process signals, depth 0
[32mengine.rs:1026[0m	35 | 
[32mengine.rs:1027[0m	35 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1231[0m	35 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	35 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	35 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	35 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 1
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	36 | Leaving process signals, 1
[32mengine.rs:1348[0m	36 | Leaving process signals, 0
[32mlib.rs:251[0m	36 | Running N1
[32mengine.rs:891[0m	36 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	36 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 0
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	36 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	36 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	36 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	36 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 1
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	36 | Leaving process signals, 1
[32mengine.rs:1348[0m	36 | Leaving process signals, 0
[32mlib.rs:229[0m	35 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:228[0m	36 | 
[32mlib.rs:229[0m	36 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:891[0m	35 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	36 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 0
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	36 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	36 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	36 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	36 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 1
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1681[0m	35 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1020[0m	35 | Process signals, depth 0
[32mengine.rs:1040[0m	35 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	36 | Leaving process signals, 1
[32mengine.rs:1348[0m	36 | Leaving process signals, 0
[32mlib.rs:251[0m	36 | Running N1
[32mengine.rs:891[0m	36 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:873[0m	36 | removed leaf ephemeral N3
[32mlib.rs:251[0m	35 | Running N3
[32mengine.rs:903[0m	36 | 	Updating N3 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:1340[0m	35 | 	 Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	36 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	36 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	36 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	36 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	36 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 1
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	36 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	36 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	36 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	36 | Leaving process signals, 1
[32mengine.rs:1348[0m	36 | Leaving process signals, 0
[32mlib.rs:251[0m	36 | Running N0
[32mengine.rs:891[0m	36 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1182[0m	36 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1183[0m	36 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	36 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	36 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 2
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:873[0m	36 | removed leaf ephemeral N4
[32mengine.rs:873[0m	36 | removed leaf ephemeral N2
[32mengine.rs:873[0m	36 | removed leaf ephemeral N1
[32mengine.rs:1340[0m	36 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	36 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 1
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	36 | 	Updating N0 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	36 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	36 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	36 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1338[0m	36 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	36 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	36 | 
[32mengine.rs:1020[0m	36 | Process signals, depth 2
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:2091[0m	36 | Input to job N1 changed.
[32mengine.rs:2091[0m	37 | Input to job N2 changed.
[32mengine.rs:2096[0m	37 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 0
[32mengine.rs:1348[0m	37 | Leaving process signals, 0
[32mengine.rs:2206[0m	37 | root node 'N1'
[32mengine.rs:2207[0m	37 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	37 | root node 'N2'
[32mengine.rs:2207[0m	37 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	37 | done adding root signals

[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 0
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	37 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1340[0m	35 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:2091[0m	35 | Input to job N0 changed.
[32mengine.rs:2177[0m	35 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:971[0m	36 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1027[0m	36 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	37 | Leaving process signals, 2
[32mengine.rs:1348[0m	37 | Leaving process signals, 1
[32mengine.rs:1348[0m	37 | Leaving process signals, 0
[32mengine.rs:971[0m	36 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1026[0m	36 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:873[0m	35 | removed leaf ephemeral N4
[32mengine.rs:873[0m	37 | removed leaf ephemeral N0
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:2091[0m	37 | Input to job N2 changed.
[32mengine.rs:2091[0m	37 | Input to job N4 changed.
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 0
[32mengine.rs:1348[0m	37 | Leaving process signals, 0
[32mengine.rs:2206[0m	37 | root node 'N0'
[32mengine.rs:2207[0m	37 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	37 | root node 'N2'
[32mengine.rs:2207[0m	37 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2206[0m	37 | root node 'N4'
[32mengine.rs:2207[0m	37 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N4
[32mengine.rs:2213[0m	37 | done adding root signals

[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 0
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	37 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	37 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	37 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N4
[32mengine.rs:1338[0m	37 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	37 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	37 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1340[0m	37 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N4
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 1
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	37 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	37 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	37 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	37 | Leaving process signals, 1
[32mengine.rs:1348[0m	37 | Leaving process signals, 0
[32mlib.rs:251[0m	37 | Running N2
[32mengine.rs:891[0m	37 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	37 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 0
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:2141[0m	37 | output was missing N3
[32mengine.rs:2142[0m	37 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	37 | Input to job N1 changed.
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1348[0m	36 | Leaving process signals, 2
[32mengine.rs:971[0m	36 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N3
[32mengine.rs:2091[0m	36 | Input to job N0 changed.
[32mlib.rs:251[0m	37 | Running N1
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 0
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	37 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	37 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	37 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	37 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 1
[32mengine.rs:1026[0m	37 | 
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	37 | Leaving process signals, 1
[32mengine.rs:1348[0m	37 | Leaving process signals, 0
[32mlib.rs:251[0m	37 | Running N1
[32mengine.rs:891[0m	37 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	37 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 0
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	38 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	38 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	38 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	38 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 1
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	38 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	38 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	38 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	38 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 2
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	38 | -> new Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1338[0m	38 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	38 | 	 Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 3
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobReadyToRun, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	38 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	38 | Leaving process signals, 3
[32mengine.rs:1348[0m	38 | Leaving process signals, 2
[32mengine.rs:1348[0m	38 | Leaving process signals, 1
[32mengine.rs:1348[0m	38 | Leaving process signals, 0
[32mlib.rs:251[0m	38 | Running N2
[32mengine.rs:897[0m	38 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1020[0m	37 | Process signals, depth 0
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 0
[32mengine.rs:1348[0m	38 | Leaving process signals, 0
[32mengine.rs:2206[0m	38 | root node 'N0'
[32mengine.rs:2207[0m	38 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	38 | done adding root signals

[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 0
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1348[0m	37 | Leaving process signals, 1
[32mengine.rs:1348[0m	38 | Leaving process signals, 0
[32mlib.rs:251[0m	38 | Running N1
[32mengine.rs:897[0m	38 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	38 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 0
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1020[0m	37 | Process signals, depth 1
[32mengine.rs:2104[0m	37 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 0
[32mengine.rs:1348[0m	38 | Leaving process signals, 0
[32mengine.rs:2206[0m	38 | root node 'N1'
[32mengine.rs:2207[0m	38 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	38 | done adding root signals

[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 0
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:995[0m	38 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 0
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	38 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	38 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1251[0m	38 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	38 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	38 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	38 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 1
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	38 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	38 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	38 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	38 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	38 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	38 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	38 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 2
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	38 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	38 | Leaving process signals, 2
[32mengine.rs:1348[0m	38 | Leaving process signals, 1
[32mengine.rs:1348[0m	38 | Leaving process signals, 0
[32mlib.rs:251[0m	38 | Running N4
[32mengine.rs:897[0m	38 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	38 | -> new Signal { kind: JobFinishedFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 0
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 4 } for N4. Current state: Output(Running)
[32mengine.rs:1231[0m	38 | 	Updating N4 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	38 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	38 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	38 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	38 | 
[32mengine.rs:1020[0m	38 | Process signals, depth 1
[32mengine.rs:1026[0m	38 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	39 | Leaving process signals, 1
[32mengine.rs:1348[0m	39 | Leaving process signals, 0
[32mengine.rs:1198[0m	37 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	39 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	39 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	39 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 1
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	39 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1183[0m	39 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	39 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	39 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 2
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	39 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1338[0m	39 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	39 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 3
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	39 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	39 | Leaving process signals, 3
[32mengine.rs:1348[0m	39 | Leaving process signals, 2
[32mengine.rs:1348[0m	39 | Leaving process signals, 1
[32mengine.rs:1348[0m	39 | Leaving process signals, 0
[32mlib.rs:251[0m	39 | Running N0
[32mengine.rs:891[0m	39 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	39 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 0
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	39 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	39 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	39 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	39 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 1
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	39 | Leaving process signals, 1
[32mengine.rs:1348[0m	39 | Leaving process signals, 0
[32mlib.rs:251[0m	39 | Running N4
[32mengine.rs:891[0m	39 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	39 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N4
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 0
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	39 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	39 | -> new Signal { kind: JobDone, node_idx: 3 } N4
[32mengine.rs:1338[0m	39 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	39 | 	 Signal { kind: JobDone, node_idx: 3 } N4
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 1
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	39 | Leaving process signals, 1
[32mengine.rs:1348[0m	39 | Leaving process signals, 0
[32mlib.rs:251[0m	39 | Running N3
[32mengine.rs:891[0m	39 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1019[0m	37 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 0
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1227[0m	37 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1027[0m	37 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	39 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	39 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	39 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	39 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 1
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	39 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	39 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	39 | Leaving process signals, 1
[32mengine.rs:1348[0m	39 | Leaving process signals, 0
[32mlib.rs:251[0m	39 | Running N1
[32mengine.rs:891[0m	39 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	39 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 0
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	39 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	39 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	39 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	39 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 1
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	39 | Leaving process signals, 1
[32mengine.rs:1348[0m	39 | Leaving process signals, 0
[32mlib.rs:251[0m	39 | Running N2
[32mengine.rs:897[0m	39 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	39 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 0
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Output(Running)
[32mengine.rs:1202[0m	39 | 	Updating N2 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	39 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	39 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	39 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	39 | 
[32mengine.rs:1020[0m	39 | Process signals, depth 1
[32mengine.rs:1026[0m	39 | 
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	39 | Leaving process signals, 1
[32mengine.rs:1348[0m	40 | Leaving process signals, 0
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:971[0m	39 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1020[0m	40 | Process signals, depth 0
[32mengine.rs:1026[0m	40 | 
[32mengine.rs:1027[0m	40 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	40 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	40 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	40 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	40 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1020[0m	40 | Process signals, depth 1
[32mengine.rs:1026[0m	40 | 
[32mengine.rs:1027[0m	40 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	40 | Leaving process signals, 1
[32mengine.rs:1348[0m	40 | Leaving process signals, 0
[32mengine.rs:1248[0m	39 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	40 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	40 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1020[0m	40 | Process signals, depth 1
[32mengine.rs:1026[0m	40 | 
[32mengine.rs:1051[0m	40 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1681[0m	40 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	40 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	40 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1020[0m	40 | Process signals, depth 1
[32mengine.rs:1026[0m	40 | 
[32mengine.rs:1027[0m	40 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	40 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1798[0m	38 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mlib.rs:228[0m	40 | 
[32mlib.rs:229[0m	40 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1026[0m	40 | 
[32mengine.rs:2091[0m	40 | Input to job N0 changed.
[32mengine.rs:2096[0m	40 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1027[0m	39 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N3. Current state: Ephemeral(Running(Invalidated))
[32mlib.rs:228[0m	40 | 
[32mlib.rs:229[0m	40 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	38 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:2091[0m	37 | Input to job N2 changed.
[32mengine.rs:1348[0m	40 | Leaving process signals, 1
[32mengine.rs:1338[0m	40 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	40 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1027[0m	40 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	40 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	40 | Leaving process signals, 1
[32mengine.rs:1348[0m	40 | Leaving process signals, 0
[32mlib.rs:251[0m	40 | Running N3
[32mengine.rs:891[0m	40 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:2091[0m	40 | Input to job N4 changed.
[32mengine.rs:2091[0m	40 | Input to job N1 changed.
[32mengine.rs:2096[0m	40 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1020[0m	40 | Process signals, depth 0
[32mengine.rs:1348[0m	40 | Leaving process signals, 0
[32mengine.rs:2206[0m	40 | root node 'N1'
[32mengine.rs:1198[0m	38 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:897[0m	37 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1206[0m	40 | 	Updating N3 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1221[0m	40 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	40 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	40 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1020[0m	40 | Process signals, depth 1
[32mengine.rs:971[0m	40 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1020[0m	40 | Process signals, depth 0
[32mengine.rs:1026[0m	40 | 
[32mengine.rs:1027[0m	40 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	40 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:2207[0m	40 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	40 | root node 'N2'
[32mengine.rs:2207[0m	40 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	40 | done adding root signals

[32mengine.rs:1019[0m	40 | 
[32mlib.rs:228[0m	39 | 
[32mengine.rs:1026[0m	40 | 
[32mengine.rs:1027[0m	40 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1019[0m	40 | 
[32mengine.rs:1348[0m	40 | Leaving process signals, 0
[32mlib.rs:251[0m	40 | Running N0
[32mengine.rs:1348[0m	40 | Leaving process signals, 1
[32mengine.rs:1348[0m	40 | Leaving process signals, 0
[32mlib.rs:251[0m	40 | Running N2
[32mengine.rs:897[0m	40 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1020[0m	40 | Process signals, depth 0
[32mengine.rs:1020[0m	40 | Process signals, depth 0
[32mengine.rs:1026[0m	40 | 
[32mengine.rs:1027[0m	40 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	41 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	41 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	41 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	41 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	41 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	41 | 
[32mlib.rs:229[0m	40 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1202[0m	40 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1182[0m	40 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1020[0m	40 | Process signals, depth 0
[32mengine.rs:1348[0m	41 | Leaving process signals, 0
[32mengine.rs:2206[0m	41 | root node 'N0'
[32mengine.rs:2207[0m	41 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	41 | root node 'N1'
[32mengine.rs:2207[0m	41 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	41 | root node 'N2'
[32mengine.rs:2207[0m	41 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	41 | done adding root signals

[32mengine.rs:1019[0m	41 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 0
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	41 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	41 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	41 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	41 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	41 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 1
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	41 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	41 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	41 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	41 | Leaving process signals, 1
[32mengine.rs:1348[0m	41 | Leaving process signals, 0
[32mlib.rs:251[0m	41 | Running N0
[32mengine.rs:891[0m	41 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	41 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	41 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 0
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	41 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	41 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	41 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	41 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 1
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	41 | Leaving process signals, 1
[32mengine.rs:1348[0m	41 | Leaving process signals, 0
[32mlib.rs:251[0m	41 | Running N1
[32mengine.rs:891[0m	41 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	41 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	41 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 0
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1227[0m	41 | 	Updating N1 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	41 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	41 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	41 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	41 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 1
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedFailure)
[32mengine.rs:1182[0m	41 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	41 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	41 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	41 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	41 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	41 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	41 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	41 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 2
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	41 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	41 | Leaving process signals, 2
[32mengine.rs:1348[0m	41 | Leaving process signals, 1
[32mengine.rs:1348[0m	41 | Leaving process signals, 0
[32mlib.rs:251[0m	41 | Running N2
[32mengine.rs:891[0m	41 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:891[0m	40 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1221[0m	40 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1221[0m	40 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:995[0m	40 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	41 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 0
[32mengine.rs:1026[0m	41 | 
[32mengine.rs:1027[0m	41 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1231[0m	41 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	42 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	40 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:971[0m	41 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:995[0m	41 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1338[0m	41 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	42 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:995[0m	40 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 0
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	42 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1338[0m	42 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	42 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 1
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	42 | Leaving process signals, 1
[32mengine.rs:1348[0m	42 | Leaving process signals, 0
[32mlib.rs:251[0m	42 | Running N2
[32mengine.rs:891[0m	42 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	42 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 0
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1227[0m	42 | 	Updating N2 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	42 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	42 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	42 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 1
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	42 | Leaving process signals, 1
[32mengine.rs:1348[0m	42 | Leaving process signals, 0
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1338[0m	41 | New signals after process_signals - adding and processing
[32mengine.rs:1020[0m	42 | Process signals, depth 1
[32mengine.rs:1348[0m	40 | Leaving process signals, 0
[32mengine.rs:2206[0m	42 | root node 'N0'
[32mengine.rs:2207[0m	42 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	42 | root node 'N1'
[32mengine.rs:2207[0m	42 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	42 | root node 'N2'
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 1
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mlib.rs:228[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 0
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	42 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	42 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	42 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	42 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 1
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	42 | Leaving process signals, 1
[32mengine.rs:1348[0m	42 | Leaving process signals, 0
[32mengine.rs:1183[0m	41 | reconsidering lead to no update, all current gen
[32mengine.rs:1248[0m	42 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:2207[0m	42 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 0
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	42 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	42 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	42 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	42 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 1
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1063[0m	42 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mlib.rs:229[0m	42 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1340[0m	42 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1020[0m	41 | Process signals, depth 1
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	42 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	42 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:2213[0m	42 | done adding root signals

[32mengine.rs:1182[0m	42 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	42 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	42 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	42 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 2
[32mengine.rs:1026[0m	42 | 
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1338[0m	42 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	42 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1020[0m	42 | Process signals, depth 2
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	43 | Considering an already finished job -> no-op
[32mengine.rs:1348[0m	43 | Leaving process signals, 2
[32mengine.rs:1348[0m	43 | Leaving process signals, 1
[32mengine.rs:1348[0m	43 | Leaving process signals, 0
[32mlib.rs:228[0m	42 | 
[32mengine.rs:1681[0m	42 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	43 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	43 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 3
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	43 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	43 | Leaving process signals, 3
[32mengine.rs:2091[0m	41 | Input to job N0 changed.
[32mengine.rs:1221[0m	41 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mlib.rs:229[0m	43 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:228[0m	43 | 
[32mlib.rs:229[0m	43 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	43 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1338[0m	43 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	43 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 2
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	43 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	43 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	43 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	43 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 3
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1027[0m	42 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	43 | Leaving process signals, 2
[32mengine.rs:1348[0m	43 | Leaving process signals, 1
[32mengine.rs:1348[0m	43 | Leaving process signals, 0
[32mlib.rs:251[0m	43 | Running N3
[32mengine.rs:891[0m	43 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:2141[0m	43 | output was missing N4
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:1348[0m	42 | Leaving process signals, 1
[32mengine.rs:1348[0m	43 | Leaving process signals, 0
[32mlib.rs:251[0m	43 | Running N1
[32mengine.rs:1775[0m	43 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	43 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	43 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 4
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:971[0m	43 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N3
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 0
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	43 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	43 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	43 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	43 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 1
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	43 | Leaving process signals, 1
[32mengine.rs:1348[0m	43 | Leaving process signals, 0
[32mengine.rs:2091[0m	42 | Input to job N0 changed.
[32mengine.rs:1019[0m	42 | 
[32mengine.rs:903[0m	43 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:995[0m	43 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 0
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	43 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1020[0m	43 | Process signals, depth 0
[32mlib.rs:228[0m	43 | 
[32mlib.rs:229[0m	43 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1020[0m	43 | Process signals, depth 1
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	43 | Leaving process signals, 1
[32mengine.rs:1348[0m	43 | Leaving process signals, 0
[32mengine.rs:1251[0m	42 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	43 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	43 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	43 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 1
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	43 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	43 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1274[0m	43 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	43 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	43 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	43 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	43 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	43 | 
[32mengine.rs:1020[0m	43 | Process signals, depth 2
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	43 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	43 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	43 | Leaving process signals, 2
[32mengine.rs:1348[0m	44 | Leaving process signals, 1
[32mengine.rs:1348[0m	44 | Leaving process signals, 0
[32mengine.rs:1026[0m	43 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	44 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	44 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	44 | 
[32mlib.rs:228[0m	43 | 
[32mengine.rs:1248[0m	43 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:2142[0m	43 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	44 | Input to job N2 changed.
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 0
[32mengine.rs:1348[0m	44 | Leaving process signals, 0
[32mengine.rs:2206[0m	44 | root node 'N2'
[32mengine.rs:2207[0m	44 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N2
[32mengine.rs:2213[0m	44 | done adding root signals

[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 0
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1251[0m	44 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	44 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	44 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	44 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 1
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	44 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	44 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1281[0m	44 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	44 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1298[0m	44 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	44 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	44 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1348[0m	43 | Leaving process signals, 1
[32mengine.rs:2141[0m	43 | output was missing N4
[32mengine.rs:1338[0m	43 | New signals after process_signals - adding and processing
[32mengine.rs:873[0m	43 | removed leaf ephemeral N4
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	44 | 		 not_done: 0, invalidated: false
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1051[0m	43 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mlib.rs:228[0m	44 | 
[32mengine.rs:2096[0m	43 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	43 | Input to job N0 changed.
[32mengine.rs:1340[0m	44 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1348[0m	44 | Leaving process signals, 0
[32mlib.rs:251[0m	44 | Running N0
[32mengine.rs:897[0m	44 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	44 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 0
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1202[0m	44 | 	Updating N0 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	44 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	44 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	44 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 1
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	44 | Leaving process signals, 1
[32mengine.rs:1348[0m	44 | Leaving process signals, 0
[32mengine.rs:1348[0m	44 | Leaving process signals, 4
[32mengine.rs:1348[0m	44 | Leaving process signals, 3
[32mengine.rs:1348[0m	44 | Leaving process signals, 2
[32mengine.rs:1348[0m	44 | Leaving process signals, 1
[32mengine.rs:1348[0m	44 | Leaving process signals, 0
[32mlib.rs:251[0m	44 | Running N2
[32mengine.rs:897[0m	44 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	44 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 0
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	44 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	44 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	44 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	44 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 1
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	44 | Leaving process signals, 1
[32mengine.rs:1348[0m	44 | Leaving process signals, 0
[32mlib.rs:251[0m	44 | Running N3
[32mengine.rs:897[0m	44 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	44 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 0
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Output(Running)
[32mengine.rs:1231[0m	44 | 	Updating N3 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	44 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	44 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	44 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:1020[0m	44 | Process signals, depth 1
[32mengine.rs:1026[0m	44 | 
[32mengine.rs:1027[0m	44 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	44 | Leaving process signals, 1
[32mengine.rs:1348[0m	44 | Leaving process signals, 0
[32mlib.rs:228[0m	44 | 
[32mlib.rs:228[0m	44 | 
[32mlib.rs:229[0m	44 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	44 | Input to job N2 changed.
[32mengine.rs:1340[0m	44 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	45 | Process signals, depth 2
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	45 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mlib.rs:229[0m	44 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:873[0m	45 | removed leaf ephemeral N0
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	45 | Process signals, depth 0
[32mengine.rs:1348[0m	45 | Leaving process signals, 0
[32mengine.rs:2206[0m	45 | root node 'N0'
[32mlib.rs:229[0m	44 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1716[0m	44 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:873[0m	45 | removed leaf ephemeral N0
[32mlib.rs:229[0m	44 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1182[0m	45 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:2091[0m	45 | Input to job N1 changed.
[32mengine.rs:1020[0m	45 | Process signals, depth 0
[32mengine.rs:2091[0m	45 | Input to job N1 changed.
[32mengine.rs:2096[0m	45 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1340[0m	44 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:2207[0m	45 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:1681[0m	44 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1338[0m	45 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	45 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	45 | Process signals, depth 1
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	45 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	45 | Leaving process signals, 1
[32mengine.rs:1348[0m	45 | Leaving process signals, 0
[32mlib.rs:251[0m	45 | Running N2
[32mengine.rs:891[0m	45 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1733[0m	45 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:873[0m	45 | removed leaf ephemeral N4
[32mengine.rs:1183[0m	45 | reconsidering lead to no update, all current gen
[32mengine.rs:2141[0m	45 | output was missing N4
[32mengine.rs:2096[0m	45 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	45 | Leaving process signals, 0
[32mengine.rs:2206[0m	45 | root node 'N0'
[32mengine.rs:2207[0m	45 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	45 | done adding root signals

[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	45 | Process signals, depth 1
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:2142[0m	45 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	45 | Input to job N1 changed.
[32mengine.rs:2104[0m	45 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:2091[0m	45 | Input to job N3 changed.
[32mengine.rs:2091[0m	45 | Input to job N2 changed.
[32mengine.rs:2104[0m	45 | 	Updating N2 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	45 | Process signals, depth 0
[32mengine.rs:1348[0m	45 | Leaving process signals, 0
[32mengine.rs:2206[0m	45 | root node 'N0'
[32mengine.rs:2207[0m	45 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	45 | root node 'N1'
[32mengine.rs:2207[0m	45 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	45 | root node 'N2'
[32mengine.rs:2207[0m	45 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	45 | done adding root signals

[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	45 | Process signals, depth 0
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	45 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	45 | -> new Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1733[0m	45 | -> Not adding ConsiderJob for N0 - already had Signal { kind: JobFinishedSkip, node_idx: 0 }
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1798[0m	45 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1798[0m	45 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	45 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	45 | 	 Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1340[0m	45 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	45 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1182[0m	45 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1183[0m	45 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	45 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	45 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	45 | Process signals, depth 2
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	45 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	45 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	45 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	45 | Process signals, depth 3
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:2142[0m	44 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1020[0m	45 | Process signals, depth 0
[32mengine.rs:1348[0m	45 | Leaving process signals, 0
[32mengine.rs:1020[0m	45 | Process signals, depth 0
[32mengine.rs:2206[0m	45 | root node 'N2'
[32mengine.rs:971[0m	45 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N2
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 0
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	46 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	46 | -> new Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:1338[0m	46 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	46 | 	 Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 1
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	46 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N4
[32mengine.rs:1183[0m	46 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	46 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	46 | 	 Signal { kind: ConsiderJob, node_idx: 1 } N4
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 2
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	46 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1338[0m	46 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	46 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 3
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:2091[0m	45 | Input to job N3 changed.
[32mengine.rs:2096[0m	46 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 0
[32mengine.rs:1348[0m	46 | Leaving process signals, 0
[32mengine.rs:2206[0m	46 | root node 'N1'
[32mengine.rs:2207[0m	45 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:1338[0m	45 | New signals after process_signals - adding and processing
[32mengine.rs:2091[0m	45 | Input to job N2 changed.
[32mengine.rs:1019[0m	45 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 1
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:2091[0m	45 | Input to job N1 changed.
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 0
[32mengine.rs:1348[0m	46 | Leaving process signals, 0
[32mengine.rs:2206[0m	46 | root node 'N0'
[32mengine.rs:2207[0m	46 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	46 | root node 'N1'
[32mengine.rs:2207[0m	46 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	46 | done adding root signals

[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 0
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	46 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	46 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	46 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	46 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	46 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 1
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	46 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	46 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	46 | Leaving process signals, 1
[32mengine.rs:1348[0m	46 | Leaving process signals, 0
[32mlib.rs:251[0m	46 | Running N0
[32mengine.rs:891[0m	46 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	46 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 0
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	46 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	46 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	46 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	46 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 1
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	46 | Leaving process signals, 1
[32mengine.rs:1348[0m	46 | Leaving process signals, 0
[32mlib.rs:251[0m	46 | Running N1
[32mengine.rs:891[0m	46 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	46 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 0
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	46 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	46 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	46 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	46 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 1
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	46 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1183[0m	46 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	46 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	46 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	46 | 
[32mengine.rs:1020[0m	46 | Process signals, depth 2
[32mengine.rs:1026[0m	46 | 
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	46 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	47 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	47 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 3
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	47 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	47 | Leaving process signals, 3
[32mengine.rs:1348[0m	47 | Leaving process signals, 2
[32mengine.rs:1348[0m	47 | Leaving process signals, 1
[32mengine.rs:1348[0m	47 | Leaving process signals, 0
[32mlib.rs:251[0m	47 | Running N4
[32mengine.rs:897[0m	47 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	47 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 0
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Output(Running)
[32mengine.rs:1202[0m	47 | 	Updating N4 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	47 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	47 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	47 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 1
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	47 | Leaving process signals, 1
[32mengine.rs:1348[0m	47 | Leaving process signals, 0
[32mengine.rs:1027[0m	45 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1027[0m	46 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1040[0m	46 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	47 | Leaving process signals, 3
[32mengine.rs:1348[0m	47 | Leaving process signals, 2
[32mengine.rs:1348[0m	47 | Leaving process signals, 1
[32mengine.rs:1348[0m	47 | Leaving process signals, 0
[32mengine.rs:2213[0m	46 | done adding root signals

[32mengine.rs:1340[0m	46 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:2096[0m	46 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mlib.rs:228[0m	47 | 
[32mlib.rs:229[0m	47 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1051[0m	47 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:2091[0m	47 | Input to job N2 changed.
[32mengine.rs:1019[0m	44 | 
[32mengine.rs:2206[0m	45 | root node 'N1'
[32mengine.rs:2207[0m	47 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	47 | done adding root signals

[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 0
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	47 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	47 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	47 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 1
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2096[0m	47 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 0
[32mengine.rs:1348[0m	47 | Leaving process signals, 0
[32mengine.rs:2206[0m	47 | root node 'N0'
[32mengine.rs:2207[0m	47 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	47 | root node 'N1'
[32mengine.rs:2207[0m	47 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	47 | root node 'N2'
[32mengine.rs:2207[0m	47 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	47 | done adding root signals

[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 0
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	47 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	47 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	47 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	47 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	47 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	47 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	47 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 1
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	47 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	47 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	47 | 
[32mengine.rs:1027[0m	47 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	47 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	47 | Leaving process signals, 1
[32mengine.rs:1348[0m	48 | Leaving process signals, 0
[32mlib.rs:251[0m	48 | Running N0
[32mengine.rs:891[0m	48 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	48 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 0
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	48 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	48 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	48 | New signals after process_signals - adding and processing
[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 0
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	48 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	48 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	48 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	48 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	48 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 1
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	48 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	48 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	48 | Leaving process signals, 1
[32mengine.rs:1348[0m	48 | Leaving process signals, 0
[32mlib.rs:251[0m	47 | Running N4
[32mengine.rs:1340[0m	48 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 1
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	48 | Leaving process signals, 1
[32mengine.rs:1348[0m	48 | Leaving process signals, 0
[32mlib.rs:251[0m	48 | Running N1
[32mengine.rs:891[0m	48 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	48 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 0
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	48 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	48 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	48 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	48 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 1
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:891[0m	48 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1340[0m	47 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	47 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 0
[32mengine.rs:1348[0m	48 | Leaving process signals, 0
[32mengine.rs:2206[0m	48 | root node 'N1'
[32mengine.rs:2207[0m	48 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	48 | root node 'N2'
[32mengine.rs:2207[0m	48 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	48 | done adding root signals

[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 0
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	48 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	48 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	48 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	48 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	48 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 1
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	48 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	48 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	48 | Leaving process signals, 1
[32mengine.rs:1348[0m	48 | Leaving process signals, 0
[32mlib.rs:251[0m	48 | Running N2
[32mengine.rs:897[0m	48 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1182[0m	48 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	48 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	48 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	48 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 2
[32mengine.rs:1026[0m	48 | 
[32mengine.rs:1020[0m	47 | Process signals, depth 0
[32mengine.rs:1348[0m	48 | Leaving process signals, 0
[32mengine.rs:2213[0m	48 | done adding root signals

[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	48 | Process signals, depth 0
[32mengine.rs:1348[0m	48 | Leaving process signals, 0
[32mengine.rs:1340[0m	48 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1267[0m	47 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	47 | Leaving process signals, 3
[32mengine.rs:1348[0m	49 | Leaving process signals, 2
[32mengine.rs:1348[0m	49 | Leaving process signals, 1
[32mengine.rs:1348[0m	49 | Leaving process signals, 0
[32mengine.rs:1026[0m	45 | 
[32mengine.rs:2207[0m	46 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	49 | root node 'N3'
[32mengine.rs:2207[0m	49 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2213[0m	49 | done adding root signals

[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 0
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	49 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	49 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1338[0m	49 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	49 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:995[0m	48 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mlib.rs:228[0m	48 | 
[32mlib.rs:229[0m	49 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1294[0m	49 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	49 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	49 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	49 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 3
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1340[0m	49 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 1
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 0
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	49 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	49 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	49 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	49 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 1
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	49 | Leaving process signals, 1
[32mengine.rs:1348[0m	49 | Leaving process signals, 0
[32mlib.rs:251[0m	49 | Running N1
[32mengine.rs:891[0m	49 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	48 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Unknown))
[32mlib.rs:251[0m	49 | Running N4
[32mengine.rs:897[0m	49 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	49 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N4
[32mlib.rs:251[0m	48 | Running N0
[32mengine.rs:891[0m	49 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	48 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1019[0m	48 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 1
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1051[0m	47 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	49 | Leaving process signals, 1
[32mengine.rs:1348[0m	49 | Leaving process signals, 0
[32mlib.rs:251[0m	49 | Running N1
[32mengine.rs:897[0m	49 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	49 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	49 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	49 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:971[0m	49 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1558[0m	49 | 			 had history - edge not invalidated
[32mengine.rs:1602[0m	49 | 		Edge not invalidated N1(1)->N4(4)
[32mengine.rs:1631[0m	49 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	49 | -> new Signal { kind: JobFinishedSkip, node_idx: 4 } N4
[32mengine.rs:1733[0m	49 | -> Not adding ConsiderJob for N4 - already had Signal { kind: JobFinishedSkip, node_idx: 4 }
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 0
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	49 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	49 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	49 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	49 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 1
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	49 | Leaving process signals, 1
[32mengine.rs:1348[0m	49 | Leaving process signals, 0
[32mengine.rs:1107[0m	47 | 	Updating N0 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	49 | Leaving process signals, 1
[32mengine.rs:1348[0m	49 | Leaving process signals, 0
[32mlib.rs:251[0m	49 | Running N1
[32mengine.rs:897[0m	49 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	49 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	49 | Process signals, depth 0
[32mengine.rs:1026[0m	49 | 
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	49 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	49 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	50 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 1
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	50 | Leaving process signals, 1
[32mengine.rs:1348[0m	50 | Leaving process signals, 0
[32mlib.rs:251[0m	50 | Running N3
[32mengine.rs:897[0m	50 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	50 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 0
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:971[0m	49 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 0
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	50 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	50 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	50 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 1
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	50 | Leaving process signals, 1
[32mengine.rs:1348[0m	50 | Leaving process signals, 0
[32mengine.rs:873[0m	49 | removed leaf ephemeral N3
[32mlib.rs:228[0m	49 | 
[32mengine.rs:1170[0m	49 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1051[0m	49 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	50 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	50 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	50 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	50 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 2
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1019[0m	49 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 0
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	50 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	50 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	50 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 1
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	50 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	50 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	50 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 2
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	50 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	50 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 3
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	50 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	50 | Leaving process signals, 3
[32mengine.rs:1348[0m	50 | Leaving process signals, 2
[32mengine.rs:1348[0m	50 | Leaving process signals, 1
[32mengine.rs:1348[0m	50 | Leaving process signals, 0
[32mlib.rs:251[0m	50 | Running N3
[32mengine.rs:891[0m	50 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	50 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 0
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1227[0m	50 | 	Updating N3 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	50 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	50 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 1
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	50 | Leaving process signals, 1
[32mengine.rs:1348[0m	50 | Leaving process signals, 0
[32mengine.rs:971[0m	49 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1338[0m	49 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: JobFinishedSkip, node_idx: 4 } N4
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	50 | Process signals, depth 3
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 4 } for N4. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	50 | 	Updating N4 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	50 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	50 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	50 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 4
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	51 | Leaving process signals, 4
[32mengine.rs:1348[0m	51 | Leaving process signals, 3
[32mengine.rs:1348[0m	51 | Leaving process signals, 2
[32mengine.rs:1348[0m	51 | Leaving process signals, 1
[32mengine.rs:1348[0m	51 | Leaving process signals, 0
[32mlib.rs:251[0m	51 | Running N2
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1020[0m	50 | Process signals, depth 0
[32mlib.rs:228[0m	50 | 
[32mengine.rs:1019[0m	50 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 0
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	51 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mlib.rs:228[0m	50 | 
[32mengine.rs:873[0m	50 | removed leaf ephemeral N4
[32mengine.rs:873[0m	51 | removed leaf ephemeral N1
[32mengine.rs:873[0m	51 | removed leaf ephemeral N2
[32mengine.rs:2091[0m	51 | Input to job N0 changed.
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 0
[32mengine.rs:1348[0m	51 | Leaving process signals, 0
[32mengine.rs:2206[0m	51 | root node 'N0'
[32mengine.rs:2207[0m	51 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	51 | done adding root signals

[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 0
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	51 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	51 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	51 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 1
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	51 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	51 | Leaving process signals, 1
[32mengine.rs:1348[0m	51 | Leaving process signals, 0
[32mlib.rs:251[0m	51 | Running N0
[32mengine.rs:891[0m	51 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	51 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 0
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	51 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	51 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	51 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	51 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 1
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	51 | Leaving process signals, 1
[32mengine.rs:1348[0m	51 | Leaving process signals, 0
[32mengine.rs:1775[0m	51 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	51 | 
[32mlib.rs:229[0m	51 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	49 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1221[0m	51 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	51 | New signals after process_signals - adding and processing
[32mlib.rs:229[0m	50 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1026[0m	50 | 
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:897[0m	51 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1027[0m	50 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Output(Running)
[32mlib.rs:228[0m	51 | 
[32mengine.rs:1338[0m	51 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	51 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 1
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	51 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	51 | Leaving process signals, 1
[32mengine.rs:1348[0m	51 | Leaving process signals, 0
[32mengine.rs:995[0m	51 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1202[0m	51 | 	Updating N3 from Output(Running) to Output(FinishedSuccess)
[32mlib.rs:229[0m	51 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 0
[32mengine.rs:1348[0m	51 | Leaving process signals, 0
[32mengine.rs:2213[0m	51 | done adding root signals

[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 0
[32mengine.rs:1348[0m	51 | Leaving process signals, 0
[32mlib.rs:228[0m	51 | 
[32mlib.rs:229[0m	51 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 0
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	51 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	51 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1251[0m	51 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	51 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	51 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	51 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	51 | 
[32mengine.rs:1020[0m	51 | Process signals, depth 1
[32mengine.rs:1026[0m	51 | 
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	52 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	52 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1340[0m	51 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:2091[0m	51 | Input to job N0 changed.
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	52 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	52 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	52 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	52 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	52 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	52 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	52 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	52 | 
[32mengine.rs:1020[0m	52 | Process signals, depth 3
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	52 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1338[0m	52 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	52 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	52 | 
[32mengine.rs:1020[0m	52 | Process signals, depth 4
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	52 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	52 | Leaving process signals, 4
[32mengine.rs:1348[0m	52 | Leaving process signals, 3
[32mengine.rs:1348[0m	52 | Leaving process signals, 2
[32mengine.rs:1348[0m	52 | Leaving process signals, 1
[32mengine.rs:1348[0m	52 | Leaving process signals, 0
[32mlib.rs:251[0m	52 | Running N3
[32mengine.rs:1027[0m	51 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N4. Current state: Output(Running)
[32mengine.rs:2091[0m	51 | Input to job N1 changed.
[32mengine.rs:1348[0m	51 | Leaving process signals, 3
[32mlib.rs:229[0m	51 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	52 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	52 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1063[0m	51 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mlib.rs:251[0m	51 | Running N0
[32mengine.rs:873[0m	51 | removed leaf ephemeral N3
[32mengine.rs:1221[0m	51 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1338[0m	52 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	52 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	52 | 
[32mengine.rs:1020[0m	52 | Process signals, depth 1
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	52 | Leaving process signals, 1
[32mengine.rs:1348[0m	52 | Leaving process signals, 0
[32mengine.rs:1338[0m	52 | New signals after process_signals - adding and processing
[32mlib.rs:228[0m	52 | 
[32mlib.rs:229[0m	52 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	52 | removed leaf ephemeral N4
[32mengine.rs:873[0m	52 | removed leaf ephemeral N2
[32mengine.rs:873[0m	52 | removed leaf ephemeral N1
[32mengine.rs:2091[0m	52 | Input to job N0 changed.
[32mengine.rs:1019[0m	52 | 
[32mengine.rs:1020[0m	52 | Process signals, depth 0
[32mengine.rs:1348[0m	52 | Leaving process signals, 0
[32mengine.rs:2206[0m	52 | root node 'N0'
[32mengine.rs:2207[0m	52 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1340[0m	52 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	52 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	52 | 
[32mengine.rs:1020[0m	52 | Process signals, depth 2
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	52 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1019[0m	52 | 
[32mengine.rs:2091[0m	52 | Input to job N4 changed.
[32mengine.rs:2213[0m	52 | done adding root signals

[32mengine.rs:1019[0m	52 | 
[32mengine.rs:1020[0m	52 | Process signals, depth 0
[32mengine.rs:1026[0m	52 | 
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	52 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	52 | 
[32mengine.rs:1020[0m	52 | Process signals, depth 0
[32mengine.rs:1348[0m	52 | Leaving process signals, 0
[32mengine.rs:2206[0m	52 | root node 'N1'
[32mengine.rs:2207[0m	52 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2213[0m	52 | done adding root signals

[32mengine.rs:1019[0m	52 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 0
[32mengine.rs:891[0m	52 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:2091[0m	52 | Input to job N0 changed.
[32mengine.rs:2141[0m	53 | output was missing N4
[32mengine.rs:2142[0m	53 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	53 | Input to job N3 changed.
[32mengine.rs:2096[0m	53 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	53 | Input to job N2 changed.
[32mengine.rs:2096[0m	53 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 0
[32mengine.rs:1348[0m	53 | Leaving process signals, 0
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	53 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1338[0m	53 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	53 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 1
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	53 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:897[0m	52 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:2206[0m	53 | root node 'N0'
[32mengine.rs:2207[0m	53 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	53 | root node 'N1'
[32mengine.rs:2207[0m	53 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	53 | root node 'N2'
[32mengine.rs:2207[0m	53 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	53 | done adding root signals

[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 0
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	53 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	53 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	53 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	53 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	52 | Input to job N3 changed.
[32mengine.rs:1348[0m	53 | Leaving process signals, 1
[32mengine.rs:1063[0m	53 | 	Updating N2 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:971[0m	53 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 0
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1202[0m	53 | 	Updating N0 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1027[0m	52 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1020[0m	52 | Process signals, depth 1
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	53 | Leaving process signals, 1
[32mengine.rs:1348[0m	53 | Leaving process signals, 0
[32mlib.rs:251[0m	53 | Running N2
[32mengine.rs:891[0m	53 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1338[0m	52 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	53 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 1
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	53 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	53 | Leaving process signals, 1
[32mengine.rs:1348[0m	53 | Leaving process signals, 0
[32mlib.rs:251[0m	53 | Running N0
[32mengine.rs:891[0m	53 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	53 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 0
[32mengine.rs:1221[0m	53 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	53 | New signals after process_signals - adding and processing
[32mengine.rs:1348[0m	53 | Leaving process signals, 2
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	53 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	53 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	53 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	53 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 1
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1340[0m	53 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 1
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	53 | Leaving process signals, 1
[32mengine.rs:1348[0m	53 | Leaving process signals, 0
[32mengine.rs:1202[0m	52 | 	Updating N4 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:995[0m	53 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	53 | 
[32mengine.rs:1020[0m	53 | Process signals, depth 0
[32mengine.rs:1026[0m	53 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	54 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	54 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	54 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	54 | 
[32mengine.rs:1020[0m	54 | Process signals, depth 1
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	54 | Leaving process signals, 1
[32mengine.rs:1348[0m	54 | Leaving process signals, 0
[32mengine.rs:1348[0m	53 | Leaving process signals, 1
[32mengine.rs:1775[0m	53 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	54 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	53 | New signals after process_signals - adding and processing
[32mengine.rs:995[0m	53 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	54 | 
[32mengine.rs:1020[0m	54 | Process signals, depth 0
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1227[0m	54 | 	Updating N3 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	54 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1251[0m	54 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	54 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	54 | 
[32mengine.rs:1020[0m	54 | Process signals, depth 1
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedFailure)
[32mengine.rs:1221[0m	53 | -> new Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1348[0m	52 | Leaving process signals, 2
[32mengine.rs:873[0m	52 | removed leaf ephemeral N4
[32mengine.rs:873[0m	54 | removed leaf ephemeral N0
[32mlib.rs:228[0m	54 | 
[32mlib.rs:229[0m	54 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2096[0m	53 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	54 | 
[32mengine.rs:1020[0m	54 | Process signals, depth 0
[32mengine.rs:1348[0m	54 | Leaving process signals, 0
[32mengine.rs:2206[0m	54 | root node 'N0'
[32mengine.rs:2207[0m	54 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	54 | root node 'N1'
[32mengine.rs:2207[0m	54 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	54 | root node 'N2'
[32mengine.rs:2207[0m	54 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2206[0m	54 | root node 'N3'
[32mengine.rs:2207[0m	54 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:2213[0m	54 | done adding root signals

[32mengine.rs:1019[0m	54 | 
[32mengine.rs:1020[0m	54 | Process signals, depth 0
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mlib.rs:228[0m	53 | 
[32mlib.rs:229[0m	54 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1338[0m	54 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1019[0m	54 | 
[32mengine.rs:1020[0m	54 | Process signals, depth 1
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N4. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	54 | Leaving process signals, 1
[32mengine.rs:1348[0m	54 | Leaving process signals, 0
[32mengine.rs:1348[0m	53 | Leaving process signals, 0
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	54 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	54 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	54 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	54 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	54 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	54 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	54 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	54 | 
[32mengine.rs:1020[0m	54 | Process signals, depth 1
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	54 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	54 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	54 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	54 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	54 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mlib.rs:228[0m	54 | 
[32mlib.rs:229[0m	54 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1340[0m	54 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	54 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 1
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	55 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:873[0m	54 | removed leaf ephemeral N4
[32mengine.rs:1026[0m	54 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	55 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1338[0m	55 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	55 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 2
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	55 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	55 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	55 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	55 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 3
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	55 | Leaving process signals, 3
[32mengine.rs:1348[0m	55 | Leaving process signals, 2
[32mengine.rs:1348[0m	55 | Leaving process signals, 1
[32mengine.rs:1348[0m	55 | Leaving process signals, 0
[32mlib.rs:251[0m	55 | Running N2
[32mengine.rs:891[0m	55 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	55 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 0
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	55 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	55 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	55 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	55 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 1
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	55 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	55 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	55 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	55 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 2
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	55 | Leaving process signals, 2
[32mengine.rs:1348[0m	55 | Leaving process signals, 1
[32mengine.rs:1348[0m	55 | Leaving process signals, 0
[32mlib.rs:251[0m	55 | Running N0
[32mengine.rs:891[0m	55 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	55 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 0
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1348[0m	54 | Leaving process signals, 0
[32mengine.rs:1107[0m	55 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:873[0m	55 | removed leaf ephemeral N3
[32mlib.rs:251[0m	54 | Running N1
[32mengine.rs:891[0m	55 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	55 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 0
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	55 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	55 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	55 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	55 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 1
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	55 | Leaving process signals, 1
[32mengine.rs:1348[0m	55 | Leaving process signals, 0
[32mengine.rs:1027[0m	53 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:2141[0m	54 | output was missing N3
[32mengine.rs:2142[0m	55 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	55 | Input to job N2 changed.
[32mengine.rs:2096[0m	55 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 0
[32mengine.rs:1348[0m	55 | Leaving process signals, 0
[32mengine.rs:1019[0m	54 | 
[32mengine.rs:873[0m	54 | removed leaf ephemeral N3
[32mengine.rs:1348[0m	54 | Leaving process signals, 1
[32mengine.rs:1348[0m	55 | Leaving process signals, 0
[32mengine.rs:1182[0m	55 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1183[0m	55 | reconsidering lead to no update, all current gen
[32mlib.rs:228[0m	55 | 
[32mlib.rs:229[0m	55 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	55 | removed leaf ephemeral N2
[32mengine.rs:873[0m	55 | removed leaf ephemeral N1
[32mengine.rs:2091[0m	55 | Input to job N0 changed.
[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 0
[32mengine.rs:1348[0m	55 | Leaving process signals, 0
[32mengine.rs:2206[0m	55 | root node 'N0'
[32mengine.rs:2207[0m	55 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	55 | done adding root signals

[32mengine.rs:1019[0m	55 | 
[32mengine.rs:1020[0m	55 | Process signals, depth 0
[32mengine.rs:1026[0m	55 | 
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	55 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	55 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	55 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 1
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1170[0m	55 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mlib.rs:228[0m	55 | 
[32mlib.rs:229[0m	56 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	54 | removed leaf ephemeral N0
[32mengine.rs:2091[0m	56 | Input to job N4 changed.
[32mengine.rs:2096[0m	56 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	56 | Input to job N1 changed.
[32mengine.rs:2096[0m	56 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2177[0m	56 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 0
[32mengine.rs:1338[0m	55 | New signals after process_signals - adding and processing
[32mengine.rs:1040[0m	56 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	56 | Leaving process signals, 1
[32mengine.rs:1348[0m	56 | Leaving process signals, 0
[32mlib.rs:251[0m	56 | Running N0
[32mengine.rs:891[0m	56 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	56 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 0
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	56 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	56 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	56 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	56 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 1
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	56 | Leaving process signals, 1
[32mengine.rs:1348[0m	56 | Leaving process signals, 0
[32mengine.rs:873[0m	55 | removed leaf ephemeral N4
[32mengine.rs:1027[0m	55 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	56 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	56 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	56 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	56 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 1
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	56 | Leaving process signals, 1
[32mengine.rs:1348[0m	56 | Leaving process signals, 0
[32mlib.rs:251[0m	56 | Running N3
[32mengine.rs:897[0m	56 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	56 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 0
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Output(Running)
[32mengine.rs:1231[0m	56 | 	Updating N3 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	56 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1251[0m	56 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	56 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	56 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	56 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 1
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	56 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	56 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	56 | 
[32mlib.rs:228[0m	55 | 
[32mlib.rs:228[0m	56 | 
[32mlib.rs:229[0m	56 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1348[0m	56 | Leaving process signals, 0
[32mengine.rs:1340[0m	56 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 2
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	56 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1338[0m	56 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	56 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1019[0m	56 | 
[32mengine.rs:1020[0m	56 | Process signals, depth 3
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	56 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	56 | Leaving process signals, 3
[32mengine.rs:1348[0m	56 | Leaving process signals, 2
[32mengine.rs:1348[0m	56 | Leaving process signals, 1
[32mengine.rs:1348[0m	56 | Leaving process signals, 0
[32mengine.rs:1020[0m	55 | Process signals, depth 2
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	56 | Leaving process signals, 2
[32mengine.rs:1348[0m	56 | Leaving process signals, 1
[32mengine.rs:1348[0m	56 | Leaving process signals, 0
[32mlib.rs:251[0m	56 | Running N1
[32mengine.rs:903[0m	56 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:2091[0m	56 | Input to job N0 changed.
[32mengine.rs:2206[0m	55 | root node 'N1'
[32mengine.rs:1182[0m	54 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	57 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	57 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	57 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	57 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	57 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:873[0m	55 | removed leaf ephemeral N0
[32mengine.rs:971[0m	57 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 0
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:2207[0m	57 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mlib.rs:251[0m	56 | Running N3
[32mengine.rs:1027[0m	56 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mlib.rs:229[0m	56 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	56 | Input to job N1 changed.
[32mengine.rs:873[0m	56 | removed leaf ephemeral N4
[32mengine.rs:2206[0m	56 | root node 'N1'
[32mengine.rs:1026[0m	56 | 
[32mengine.rs:1340[0m	57 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:2091[0m	57 | Input to job N3 changed.
[32mengine.rs:2104[0m	57 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 0
[32mengine.rs:1348[0m	57 | Leaving process signals, 0
[32mengine.rs:2206[0m	57 | root node 'N3'
[32mengine.rs:2207[0m	57 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2213[0m	57 | done adding root signals

[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 0
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:2207[0m	57 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	57 | root node 'N2'
[32mengine.rs:2207[0m	57 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	57 | done adding root signals

[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 0
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	57 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	57 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	57 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	57 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 2
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:891[0m	57 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1267[0m	57 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:873[0m	57 | removed leaf ephemeral N0
[32mengine.rs:873[0m	57 | removed leaf ephemeral N4
[32mengine.rs:873[0m	57 | removed leaf ephemeral N3
[32mengine.rs:873[0m	57 | removed leaf ephemeral N2
[32mengine.rs:873[0m	57 | removed leaf ephemeral N1
[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 0
[32mengine.rs:1348[0m	57 | Leaving process signals, 0
[32mengine.rs:2206[0m	57 | root node 'N0'
[32mengine.rs:2207[0m	57 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	57 | done adding root signals

[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 0
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	57 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	57 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	57 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 1
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:971[0m	57 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1294[0m	57 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	57 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	57 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	57 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	57 | Process signals, depth 2
[32mengine.rs:1026[0m	57 | 
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	58 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	58 | Leaving process signals, 2
[32mengine.rs:1348[0m	58 | Leaving process signals, 1
[32mengine.rs:1348[0m	58 | Leaving process signals, 0
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1340[0m	57 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	58 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 1
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1027[0m	57 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1040[0m	57 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	58 | Leaving process signals, 1
[32mengine.rs:1348[0m	58 | Leaving process signals, 0
[32mengine.rs:2091[0m	57 | Input to job N2 changed.
[32mlib.rs:228[0m	58 | 
[32mlib.rs:229[0m	58 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1798[0m	58 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1051[0m	58 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1338[0m	58 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	58 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	58 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 2
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1019[0m	57 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 0
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	58 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	58 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	58 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	58 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	58 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 1
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:2096[0m	57 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mlib.rs:251[0m	58 | Running N0
[32mengine.rs:2096[0m	58 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	58 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 0
[32mengine.rs:1338[0m	58 | New signals after process_signals - adding and processing
[32mengine.rs:1206[0m	57 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:2206[0m	57 | root node 'N2'
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1675[0m	58 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1182[0m	58 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:2091[0m	58 | Input to job N2 changed.
[32mengine.rs:1019[0m	58 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 0
[32mengine.rs:1348[0m	58 | Leaving process signals, 0
[32mengine.rs:2206[0m	58 | root node 'N0'
[32mengine.rs:2207[0m	58 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	58 | root node 'N1'
[32mengine.rs:2207[0m	58 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:1051[0m	58 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:891[0m	58 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1183[0m	58 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	58 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	58 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	58 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 3
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2206[0m	58 | root node 'N2'
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1348[0m	58 | Leaving process signals, 1
[32mengine.rs:1348[0m	58 | Leaving process signals, 0
[32mengine.rs:971[0m	58 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	58 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 0
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	58 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	58 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	58 | New signals after process_signals - adding and processing
[32mengine.rs:2207[0m	58 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	58 | done adding root signals

[32mengine.rs:1019[0m	58 | 
[32mengine.rs:1020[0m	58 | Process signals, depth 0
[32mengine.rs:1026[0m	58 | 
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	59 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	59 | -> new Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1733[0m	59 | -> Not adding ConsiderJob for N0 - already had Signal { kind: JobFinishedSkip, node_idx: 0 }
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1027[0m	59 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	59 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1027[0m	59 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	59 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	59 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	59 | 	 Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1340[0m	59 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	59 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	59 | Process signals, depth 1
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1340[0m	58 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1027[0m	58 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	58 | Leaving process signals, 2
[32mengine.rs:1348[0m	59 | Leaving process signals, 1
[32mengine.rs:1348[0m	59 | Leaving process signals, 0
[32mlib.rs:251[0m	59 | Running N0
[32mengine.rs:897[0m	59 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	59 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	59 | Process signals, depth 0
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1027[0m	59 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1231[0m	59 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	59 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	59 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	59 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	59 | Process signals, depth 1
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1027[0m	59 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	59 | Leaving process signals, 1
[32mengine.rs:1348[0m	59 | Leaving process signals, 0
[32mlib.rs:251[0m	59 | Running N1
[32mengine.rs:891[0m	59 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	59 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	59 | Process signals, depth 0
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1027[0m	59 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	59 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mlib.rs:228[0m	58 | 
[32mengine.rs:2091[0m	58 | Input to job N1 changed.
[32mengine.rs:1348[0m	58 | Leaving process signals, 0
[32mengine.rs:2206[0m	59 | root node 'N1'
[32mengine.rs:1340[0m	58 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	59 | Process signals, depth 1
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1027[0m	59 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	59 | 	Updating N3 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1040[0m	59 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1221[0m	59 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mlib.rs:229[0m	59 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2096[0m	59 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	57 | Input to job N1 changed.
[32mengine.rs:2091[0m	59 | Input to job N1 changed.
[32mengine.rs:1221[0m	58 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	59 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	59 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	59 | Process signals, depth 1
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1348[0m	59 | Leaving process signals, 1
[32mengine.rs:1338[0m	59 | New signals after process_signals - adding and processing
[32mengine.rs:2091[0m	59 | Input to job N2 changed.
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	59 | Process signals, depth 0
[32mengine.rs:1348[0m	59 | Leaving process signals, 0
[32mengine.rs:2206[0m	59 | root node 'N1'
[32mengine.rs:2207[0m	59 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	59 | root node 'N2'
[32mengine.rs:2207[0m	59 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	59 | done adding root signals

[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	59 | Process signals, depth 0
[32mengine.rs:1348[0m	59 | Leaving process signals, 0
[32mengine.rs:2207[0m	59 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	60 | root node 'N2'
[32mengine.rs:2207[0m	60 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	60 | done adding root signals

[32mengine.rs:1019[0m	60 | 
[32mengine.rs:1020[0m	60 | Process signals, depth 0
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1027[0m	59 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1026[0m	59 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	60 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	60 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	60 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	60 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	60 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	60 | 
[32mengine.rs:1020[0m	60 | Process signals, depth 1
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1348[0m	60 | Leaving process signals, 1
[32mengine.rs:1348[0m	60 | Leaving process signals, 0
[32mlib.rs:251[0m	60 | Running N1
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	60 | Process signals, depth 0
[32mengine.rs:1348[0m	60 | Leaving process signals, 0
[32mengine.rs:2206[0m	60 | root node 'N0'
[32mengine.rs:2207[0m	60 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	60 | root node 'N1'
[32mengine.rs:2207[0m	60 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	60 | done adding root signals

[32mengine.rs:1019[0m	60 | 
[32mengine.rs:1020[0m	60 | Process signals, depth 0
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	60 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	60 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	60 | New signals after process_signals - adding and processing
[32mengine.rs:1348[0m	59 | Leaving process signals, 1
[32mengine.rs:1340[0m	60 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	60 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	60 | 
[32mengine.rs:1020[0m	60 | Process signals, depth 1
[32mlib.rs:228[0m	60 | 
[32mlib.rs:229[0m	60 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	59 | 
[32mengine.rs:1020[0m	60 | Process signals, depth 0
[32mengine.rs:1348[0m	60 | Leaving process signals, 0
[32mengine.rs:2206[0m	60 | root node 'N0'
[32mengine.rs:1020[0m	59 | Process signals, depth 1
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1348[0m	60 | Leaving process signals, 0
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	60 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	60 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	60 | Leaving process signals, 1
[32mengine.rs:1348[0m	60 | Leaving process signals, 0
[32mlib.rs:251[0m	60 | Running N2
[32mengine.rs:891[0m	60 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1681[0m	60 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	60 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	60 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	60 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	60 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	60 | 
[32mengine.rs:1020[0m	60 | Process signals, depth 1
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	60 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1182[0m	60 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	60 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	60 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	60 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	60 | 
[32mengine.rs:1020[0m	60 | Process signals, depth 2
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	60 | Leaving process signals, 2
[32mengine.rs:1348[0m	60 | Leaving process signals, 1
[32mengine.rs:1348[0m	60 | Leaving process signals, 0
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mlib.rs:251[0m	60 | Running N3
[32mengine.rs:1340[0m	59 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	60 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	60 | 
[32mengine.rs:1027[0m	60 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	61 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	61 | Leaving process signals, 1
[32mengine.rs:1348[0m	61 | Leaving process signals, 0
[32mlib.rs:251[0m	61 | Running N0
[32mengine.rs:891[0m	61 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:903[0m	60 | 	Updating N3 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:971[0m	61 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 0
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:2207[0m	58 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:1775[0m	58 | -> new Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1338[0m	61 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	61 | 	 Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 4
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:971[0m	61 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 0
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	61 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	61 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	61 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	61 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 1
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	61 | Leaving process signals, 1
[32mengine.rs:1348[0m	61 | Leaving process signals, 0
[32mlib.rs:251[0m	61 | Running N1
[32mengine.rs:891[0m	61 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	61 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 0
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	61 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	61 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	61 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	61 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:2213[0m	61 | done adding root signals

[32mengine.rs:1027[0m	59 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:2207[0m	60 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	61 | root node 'N1'
[32mlib.rs:251[0m	60 | Running N2
[32mengine.rs:1051[0m	60 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	61 | Leaving process signals, 1
[32mengine.rs:1348[0m	61 | Leaving process signals, 0
[32mlib.rs:251[0m	61 | Running N1
[32mengine.rs:891[0m	61 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1020[0m	61 | Process signals, depth 1
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	61 | Leaving process signals, 1
[32mengine.rs:1348[0m	61 | Leaving process signals, 0
[32mengine.rs:903[0m	61 | 	Updating N2 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobReadyToRun, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	60 | 
[32mengine.rs:897[0m	60 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:873[0m	60 | removed leaf ephemeral N3
[32mengine.rs:971[0m	61 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 0
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	61 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	61 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:995[0m	61 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1051[0m	61 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1020[0m	61 | Process signals, depth 1
[32mengine.rs:995[0m	61 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 0
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1107[0m	61 | 	Updating N0 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	61 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	61 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	61 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1338[0m	61 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	61 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 2
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	61 | Leaving process signals, 2
[32mengine.rs:1348[0m	61 | Leaving process signals, 1
[32mengine.rs:1348[0m	61 | Leaving process signals, 0
[32mlib.rs:251[0m	61 | Running N1
[32mengine.rs:897[0m	61 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	61 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1020[0m	61 | Process signals, depth 0
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1231[0m	62 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	62 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mlib.rs:228[0m	61 | 
[32mengine.rs:1338[0m	61 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	62 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 1
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	62 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	62 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	62 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	62 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 2
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	62 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	62 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	62 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 3
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	62 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	62 | Leaving process signals, 3
[32mengine.rs:1348[0m	62 | Leaving process signals, 2
[32mengine.rs:1348[0m	62 | Leaving process signals, 1
[32mengine.rs:1348[0m	62 | Leaving process signals, 0
[32mlib.rs:251[0m	62 | Running N2
[32mengine.rs:897[0m	62 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	62 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 0
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	62 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	62 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	62 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	62 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 1
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:971[0m	60 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:2207[0m	61 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	62 | root node 'N2'
[32mengine.rs:2207[0m	62 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	62 | done adding root signals

[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 0
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	62 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	62 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	62 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	62 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	62 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	62 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	62 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 1
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	62 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	62 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	62 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	62 | Leaving process signals, 1
[32mengine.rs:1348[0m	62 | Leaving process signals, 0
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 0
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	62 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	62 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	62 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	62 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 1
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	62 | Leaving process signals, 1
[32mengine.rs:1348[0m	62 | Leaving process signals, 0
[32mlib.rs:251[0m	62 | Running N1
[32mengine.rs:897[0m	62 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	62 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1020[0m	62 | Process signals, depth 0
[32mengine.rs:1026[0m	62 | 
[32mengine.rs:1027[0m	62 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	62 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	62 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	62 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	62 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mlib.rs:251[0m	62 | Running N1
[32mlib.rs:229[0m	62 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	61 | 
[32mengine.rs:2141[0m	63 | output was missing N4
[32mengine.rs:2142[0m	63 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:873[0m	61 | removed leaf ephemeral N1
[32mengine.rs:1206[0m	61 | 	Updating N3 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1027[0m	61 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1020[0m	61 | Process signals, depth 0
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1251[0m	62 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:891[0m	63 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	63 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	63 | 
[32mengine.rs:1020[0m	63 | Process signals, depth 0
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1227[0m	63 | 	Updating N1 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	63 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	63 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	63 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	63 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	63 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	63 | 
[32mengine.rs:1020[0m	63 | Process signals, depth 1
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedFailure)
[32mengine.rs:1182[0m	63 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	63 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	63 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	63 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	63 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	63 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	63 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	63 | 
[32mengine.rs:1020[0m	63 | Process signals, depth 2
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	63 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1348[0m	62 | Leaving process signals, 1
[32mengine.rs:1019[0m	62 | 
[32mengine.rs:1631[0m	63 | 		 not_done: 0, invalidated: false
[32mengine.rs:1338[0m	63 | New signals after process_signals - adding and processing
[32mengine.rs:1348[0m	61 | Leaving process signals, 4
[32mengine.rs:1020[0m	63 | Process signals, depth 0
[32mengine.rs:1026[0m	61 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	63 | Leaving process signals, 1
[32mengine.rs:1221[0m	63 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1231[0m	63 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	63 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	63 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	63 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	63 | 
[32mengine.rs:1020[0m	63 | Process signals, depth 1
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1340[0m	63 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1348[0m	63 | Leaving process signals, 3
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	63 | 	Updating N2 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1248[0m	63 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	63 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	63 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	63 | 
[32mengine.rs:1020[0m	63 | Process signals, depth 1
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mengine.rs:1340[0m	63 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	63 | 
[32mengine.rs:1020[0m	63 | Process signals, depth 1
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	63 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	63 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1274[0m	63 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	63 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	63 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	63 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	63 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	63 | 
[32mengine.rs:1020[0m	63 | Process signals, depth 2
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	63 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	63 | 
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	63 | Leaving process signals, 2
[32mengine.rs:1348[0m	63 | Leaving process signals, 1
[32mengine.rs:1348[0m	63 | Leaving process signals, 0
[32mlib.rs:251[0m	63 | Running N2
[32mengine.rs:891[0m	63 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1348[0m	63 | Leaving process signals, 0
[32mengine.rs:1251[0m	63 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	64 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	64 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	64 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	64 | Process signals, depth 1
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	64 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	64 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	64 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	64 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mlib.rs:228[0m	64 | 
[32mlib.rs:229[0m	64 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1348[0m	63 | Leaving process signals, 0
[32mengine.rs:1020[0m	63 | Process signals, depth 1
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	64 | Leaving process signals, 1
[32mengine.rs:1348[0m	64 | Leaving process signals, 0
[32mengine.rs:2091[0m	63 | Input to job N2 changed.
[32mengine.rs:873[0m	63 | removed leaf ephemeral N2
[32mengine.rs:971[0m	64 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1298[0m	64 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	64 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	64 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	64 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	64 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	64 | Process signals, depth 2
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	64 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1182[0m	64 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	64 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1716[0m	63 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	64 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	64 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	64 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	64 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	64 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	64 | Process signals, depth 1
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1348[0m	63 | Leaving process signals, 1
[32mengine.rs:1348[0m	63 | Leaving process signals, 2
[32mengine.rs:1348[0m	64 | Leaving process signals, 1
[32mengine.rs:1348[0m	64 | Leaving process signals, 0
[32mengine.rs:2091[0m	64 | Input to job N0 changed.
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	64 | Process signals, depth 0
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1107[0m	64 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	64 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	64 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1338[0m	64 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	64 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	64 | Process signals, depth 2
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1274[0m	64 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	64 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	64 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	64 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	64 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	64 | Process signals, depth 3
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	64 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	64 | Leaving process signals, 0
[32mengine.rs:1182[0m	64 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1183[0m	64 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	64 | New signals after process_signals - adding and processing
[32mlib.rs:251[0m	64 | Running N0
[32mengine.rs:1340[0m	64 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	64 | Process signals, depth 2
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	64 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mlib.rs:251[0m	64 | Running N3
[32mengine.rs:1198[0m	64 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1182[0m	64 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	64 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	64 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	64 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	64 | Process signals, depth 3
[32mengine.rs:1026[0m	64 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	65 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	65 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	65 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 4
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	65 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	65 | Leaving process signals, 4
[32mengine.rs:1348[0m	65 | Leaving process signals, 3
[32mengine.rs:1348[0m	65 | Leaving process signals, 2
[32mengine.rs:1348[0m	65 | Leaving process signals, 1
[32mengine.rs:1348[0m	65 | Leaving process signals, 0
[32mlib.rs:251[0m	65 | Running N3
[32mengine.rs:897[0m	65 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	65 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 0
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Output(Running)
[32mengine.rs:1231[0m	65 | 	Updating N3 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	65 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	65 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	65 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 1
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:891[0m	64 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1221[0m	64 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:2040[0m	64 | Job ready for cleanup NodeInfo { job_id: "N1", state: Ephemeral(FinishedSuccessNotReadyForCleanup), history_output: Some("history_N1"), last_considered_in_gen: 0 }, but downstreams failed -> no cleanup
[32mlib.rs:251[0m	64 | Running N2
[32mlib.rs:228[0m	64 | 
[32mengine.rs:2096[0m	64 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:891[0m	64 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1019[0m	64 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 0
[32mengine.rs:1348[0m	65 | Leaving process signals, 0
[32mengine.rs:2206[0m	65 | root node 'N0'
[32mengine.rs:2207[0m	65 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	65 | done adding root signals

[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 0
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:995[0m	65 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 0
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	65 | Leaving process signals, 1
[32mengine.rs:1348[0m	65 | Leaving process signals, 0
[32mengine.rs:995[0m	65 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	65 | New signals after process_signals - adding and processing
[32mengine.rs:2044[0m	65 | 	Updating N1 from Ephemeral(FinishedSuccessNotReadyForCleanup) to Ephemeral(FinishedSuccessSkipCleanup)
[32mengine.rs:891[0m	65 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	65 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 0
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1227[0m	65 | 	Updating N2 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	65 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	65 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	65 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 1
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	65 | Leaving process signals, 1
[32mengine.rs:1348[0m	65 | Leaving process signals, 0
[32mengine.rs:2091[0m	64 | Input to job N1 changed.
[32mengine.rs:1681[0m	64 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	65 | New signals after process_signals - adding and processing
[32mlib.rs:251[0m	65 | Running N2
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1340[0m	65 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 1
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	65 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	65 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	65 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	65 | reconsidering lead to no update, all current gen
[32mengine.rs:1340[0m	65 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 3
[32mengine.rs:1026[0m	65 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	65 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	65 | Leaving process signals, 3
[32mengine.rs:1348[0m	65 | Leaving process signals, 2
[32mengine.rs:1348[0m	65 | Leaving process signals, 1
[32mengine.rs:2091[0m	65 | Input to job N3 changed.
[32mengine.rs:1019[0m	65 | 
[32mengine.rs:1020[0m	65 | Process signals, depth 0
[32mengine.rs:1348[0m	66 | Leaving process signals, 0
[32mengine.rs:2206[0m	66 | root node 'N1'
[32mengine.rs:2207[0m	66 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	66 | root node 'N3'
[32mengine.rs:2207[0m	66 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2213[0m	66 | done adding root signals

[32mengine.rs:1019[0m	66 | 
[32mengine.rs:1020[0m	66 | Process signals, depth 0
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1027[0m	65 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1338[0m	65 | New signals after process_signals - adding and processing
[32mengine.rs:897[0m	65 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1020[0m	65 | Process signals, depth 0
[32mengine.rs:1026[0m	66 | 
[32mlib.rs:229[0m	65 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1681[0m	65 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1020[0m	65 | Process signals, depth 0
[32mengine.rs:1348[0m	66 | Leaving process signals, 0
[32mengine.rs:2206[0m	66 | root node 'N0'
[32mengine.rs:2207[0m	66 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	66 | root node 'N1'
[32mengine.rs:2207[0m	66 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	66 | root node 'N2'
[32mengine.rs:2207[0m	66 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	66 | done adding root signals

[32mengine.rs:1019[0m	66 | 
[32mengine.rs:1020[0m	66 | Process signals, depth 0
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	66 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	66 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	66 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	66 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	66 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	66 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	66 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	66 | 
[32mengine.rs:1020[0m	66 | Process signals, depth 1
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	66 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1338[0m	66 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	63 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mlib.rs:228[0m	65 | 
[32mengine.rs:1348[0m	65 | Leaving process signals, 0
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1227[0m	66 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1340[0m	66 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:995[0m	66 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1348[0m	65 | Leaving process signals, 3
[32mengine.rs:1348[0m	66 | Leaving process signals, 2
[32mengine.rs:1348[0m	66 | Leaving process signals, 1
[32mengine.rs:1348[0m	66 | Leaving process signals, 0
[32mengine.rs:1340[0m	66 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mlib.rs:228[0m	66 | 
[32mlib.rs:229[0m	66 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:251[0m	66 | Running N4
[32mengine.rs:1681[0m	66 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1340[0m	66 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	66 | 
[32mengine.rs:1020[0m	66 | Process signals, depth 2
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1019[0m	66 | 
[32mengine.rs:1348[0m	66 | Leaving process signals, 2
[32mengine.rs:1348[0m	66 | Leaving process signals, 1
[32mengine.rs:1348[0m	66 | Leaving process signals, 0
[32mlib.rs:251[0m	66 | Running N0
[32mengine.rs:891[0m	66 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	66 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	66 | 
[32mengine.rs:1020[0m	66 | Process signals, depth 0
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	66 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	66 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	66 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	66 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	66 | 
[32mengine.rs:1020[0m	66 | Process signals, depth 1
[32mengine.rs:1026[0m	66 | 
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	66 | Leaving process signals, 1
[32mengine.rs:1348[0m	66 | Leaving process signals, 0
[32mlib.rs:251[0m	66 | Running N2
[32mengine.rs:891[0m	66 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1020[0m	66 | Process signals, depth 1
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	67 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	67 | Leaving process signals, 1
[32mengine.rs:1348[0m	67 | Leaving process signals, 0
[32mlib.rs:251[0m	67 | Running N0
[32mengine.rs:891[0m	67 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:2091[0m	66 | Input to job N0 changed.
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	67 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	67 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	67 | Leaving process signals, 1
[32mengine.rs:1348[0m	67 | Leaving process signals, 0
[32mlib.rs:251[0m	67 | Running N2
[32mengine.rs:897[0m	67 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:971[0m	67 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:2091[0m	67 | Input to job N3 changed.
[32mengine.rs:2096[0m	67 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 0
[32mengine.rs:1348[0m	67 | Leaving process signals, 0
[32mengine.rs:2206[0m	67 | root node 'N0'
[32mengine.rs:2207[0m	67 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	67 | root node 'N1'
[32mengine.rs:2207[0m	67 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	67 | root node 'N2'
[32mengine.rs:2207[0m	67 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2206[0m	67 | root node 'N3'
[32mengine.rs:2207[0m	67 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:2213[0m	67 | done adding root signals

[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 0
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	67 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1227[0m	67 | 	Updating N3 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 0
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	67 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	67 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	67 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	67 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 1
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1248[0m	67 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	67 | New signals after process_signals - adding and processing
[32mengine.rs:971[0m	66 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 0
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	67 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	67 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	67 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	67 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 1
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	67 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	67 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	67 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	67 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 2
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	67 | Leaving process signals, 1
[32mengine.rs:1348[0m	67 | Leaving process signals, 0
[32mlib.rs:229[0m	66 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	66 | Input to job N0 changed.
[32mengine.rs:891[0m	66 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1248[0m	66 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1027[0m	66 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1019[0m	66 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 0
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	67 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	67 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	67 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	67 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 1
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	67 | Leaving process signals, 1
[32mengine.rs:1348[0m	67 | Leaving process signals, 0
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1564[0m	66 | 			 no history - edge invalidated
[32mengine.rs:1340[0m	67 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	67 | 
[32mengine.rs:1020[0m	67 | Process signals, depth 1
[32mengine.rs:1026[0m	67 | 
[32mengine.rs:1027[0m	67 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	67 | Leaving process signals, 1
[32mengine.rs:1348[0m	67 | Leaving process signals, 0
[32mengine.rs:995[0m	67 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 0
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1596[0m	67 | 		Edge invalidated N2(2)-> N3(3)
[32mengine.rs:1631[0m	68 | 		 not_done: 0, invalidated: true
[32mengine.rs:1874[0m	68 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1881[0m	68 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	68 | Considering an already finished job -> no-op
[32mengine.rs:1338[0m	68 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	68 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 3
[32mengine.rs:1026[0m	68 | 
[32mlib.rs:228[0m	67 | 
[32mengine.rs:873[0m	67 | removed leaf ephemeral N3
[32mengine.rs:873[0m	68 | removed leaf ephemeral N4
[32mengine.rs:971[0m	67 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 0
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1631[0m	67 | 		 not_done: 0, invalidated: false
[32mlib.rs:228[0m	68 | 
[32mlib.rs:229[0m	68 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1681[0m	67 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	68 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	68 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1251[0m	68 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	68 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	68 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	68 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 1
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	68 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	68 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	68 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	68 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	68 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	68 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	68 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 2
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	68 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	68 | Leaving process signals, 2
[32mengine.rs:1348[0m	68 | Leaving process signals, 1
[32mengine.rs:1348[0m	68 | Leaving process signals, 0
[32mlib.rs:251[0m	68 | Running N0
[32mengine.rs:891[0m	68 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:873[0m	68 | removed leaf ephemeral N4
[32mengine.rs:1338[0m	68 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mlib.rs:229[0m	68 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2096[0m	67 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	68 | Input to job N1 changed.
[32mengine.rs:1338[0m	67 | New signals after process_signals - adding and processing
[32mengine.rs:1681[0m	67 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1338[0m	68 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	68 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	68 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 1
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	68 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:2096[0m	68 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	68 | Input to job N2 changed.
[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 0
[32mengine.rs:1348[0m	68 | Leaving process signals, 0
[32mengine.rs:2206[0m	68 | root node 'N1'
[32mengine.rs:2207[0m	68 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	68 | root node 'N2'
[32mengine.rs:2207[0m	68 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	68 | done adding root signals

[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 0
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	68 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	68 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	68 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	68 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	68 | 
[32mengine.rs:1020[0m	68 | Process signals, depth 1
[32mengine.rs:1026[0m	68 | 
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	69 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	69 | Leaving process signals, 1
[32mengine.rs:1348[0m	69 | Leaving process signals, 0
[32mlib.rs:251[0m	69 | Running N3
[32mengine.rs:891[0m	69 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	69 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 0
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	69 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	69 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1338[0m	69 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	69 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 1
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	69 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1183[0m	69 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	69 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	69 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 2
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	69 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	69 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	69 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 3
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	69 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	69 | Leaving process signals, 3
[32mengine.rs:1348[0m	69 | Leaving process signals, 2
[32mengine.rs:1348[0m	69 | Leaving process signals, 1
[32mengine.rs:1348[0m	69 | Leaving process signals, 0
[32mlib.rs:251[0m	69 | Running N1
[32mengine.rs:891[0m	69 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	69 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 0
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	69 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	69 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	69 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	69 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 1
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	69 | Leaving process signals, 1
[32mengine.rs:1348[0m	69 | Leaving process signals, 0
[32mlib.rs:251[0m	69 | Running N4
[32mengine.rs:891[0m	69 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	69 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 0
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	69 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	69 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	69 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	69 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 1
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	69 | Leaving process signals, 1
[32mengine.rs:1348[0m	69 | Leaving process signals, 0
[32mengine.rs:2091[0m	68 | Input to job N2 changed.
[32mengine.rs:1340[0m	68 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1798[0m	68 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	69 | New signals after process_signals - adding and processing
[32mengine.rs:2141[0m	68 | output was missing N4
[32mengine.rs:2032[0m	68 | Job ready for cleanup NodeInfo { job_id: "N3", state: Ephemeral(FinishedSuccessNotReadyForCleanup), history_output: Some("history_N3"), last_considered_in_gen: 0 }
[32mengine.rs:1340[0m	68 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 1
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mlib.rs:228[0m	69 | 
[32mlib.rs:229[0m	69 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 3
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:2142[0m	69 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	69 | Input to job N1 changed.
[32mengine.rs:2104[0m	69 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	69 | 
[32mlib.rs:228[0m	67 | 
[32mlib.rs:229[0m	69 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1348[0m	69 | Leaving process signals, 1
[32mengine.rs:1348[0m	69 | Leaving process signals, 0
[32mlib.rs:251[0m	69 | Running N2
[32mengine.rs:897[0m	69 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1340[0m	69 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	69 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	69 | Leaving process signals, 3
[32mengine.rs:1348[0m	69 | Leaving process signals, 2
[32mengine.rs:1348[0m	69 | Leaving process signals, 1
[32mengine.rs:1348[0m	69 | Leaving process signals, 0
[32mlib.rs:251[0m	69 | Running N3
[32mengine.rs:891[0m	69 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	69 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N3
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	69 | Process signals, depth 0
[32mengine.rs:1026[0m	69 | 
[32mengine.rs:1027[0m	69 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	69 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	70 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	70 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	70 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 1
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	70 | Leaving process signals, 1
[32mengine.rs:1348[0m	70 | Leaving process signals, 0
[32mengine.rs:2033[0m	69 | 	Updating N3 from Ephemeral(FinishedSuccessNotReadyForCleanup) to Ephemeral(FinishedSuccessReadyForCleanup)
[32mlib.rs:228[0m	70 | 
[32mlib.rs:229[0m	70 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1020[0m	69 | Process signals, depth 0
[32mengine.rs:1348[0m	70 | Leaving process signals, 0
[32mengine.rs:2206[0m	70 | root node 'N0'
[32mengine.rs:2207[0m	70 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	70 | root node 'N1'
[32mengine.rs:2207[0m	70 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	70 | done adding root signals

[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 0
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	70 | Input to job N0 changed.
[32mengine.rs:971[0m	68 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 0
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	70 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	70 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	70 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	70 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 1
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	70 | Leaving process signals, 1
[32mengine.rs:1348[0m	70 | Leaving process signals, 0
[32mlib.rs:251[0m	70 | Running N1
[32mengine.rs:891[0m	70 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1019[0m	69 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 4
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	70 | 	Updating N3 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	70 | Leaving process signals, 4
[32mengine.rs:1348[0m	70 | Leaving process signals, 3
[32mengine.rs:1348[0m	70 | Leaving process signals, 2
[32mengine.rs:1348[0m	70 | Leaving process signals, 1
[32mengine.rs:1348[0m	70 | Leaving process signals, 0
[32mlib.rs:251[0m	70 | Running N3
[32mengine.rs:971[0m	70 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 0
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	70 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	70 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	70 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	70 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 1
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	70 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	70 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	70 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	70 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 2
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:873[0m	68 | removed leaf ephemeral N4
[32mengine.rs:995[0m	69 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 0
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	70 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	70 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:873[0m	69 | removed leaf ephemeral N0
[32mengine.rs:873[0m	70 | removed leaf ephemeral N4
[32mengine.rs:2091[0m	69 | Input to job N0 changed.
[32mengine.rs:2096[0m	70 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:873[0m	70 | removed leaf ephemeral N3
[32mengine.rs:903[0m	70 | 	Updating N3 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:1027[0m	68 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	70 | Leaving process signals, 1
[32mengine.rs:1348[0m	70 | Leaving process signals, 0
[32mengine.rs:1775[0m	70 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1798[0m	70 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	70 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	70 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	70 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	70 | 
[32mengine.rs:1020[0m	70 | Process signals, depth 1
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	70 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	70 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	70 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	70 | Leaving process signals, 1
[32mengine.rs:1348[0m	70 | Leaving process signals, 0
[32mlib.rs:251[0m	70 | Running N0
[32mengine.rs:897[0m	71 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	70 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 0
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	71 | 	Updating N3 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1248[0m	71 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1251[0m	71 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	71 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 1
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	71 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	71 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	71 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	71 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	71 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 2
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	71 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	71 | Leaving process signals, 2
[32mengine.rs:1348[0m	71 | Leaving process signals, 1
[32mengine.rs:1348[0m	71 | Leaving process signals, 0
[32mengine.rs:971[0m	71 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 0
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1202[0m	71 | 	Updating N0 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	71 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	71 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 1
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	71 | Leaving process signals, 1
[32mengine.rs:1348[0m	71 | Leaving process signals, 0
[32mengine.rs:2091[0m	70 | Input to job N2 changed.
[32mengine.rs:1251[0m	70 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	71 | New signals after process_signals - adding and processing
[32mengine.rs:2091[0m	70 | Input to job N3 changed.
[32mengine.rs:2096[0m	71 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	71 | Input to job N2 changed.
[32mengine.rs:2096[0m	71 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 0
[32mengine.rs:1348[0m	71 | Leaving process signals, 0
[32mengine.rs:2206[0m	71 | root node 'N3'
[32mengine.rs:2207[0m	71 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:2206[0m	71 | root node 'N2'
[32mengine.rs:2207[0m	71 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	71 | done adding root signals

[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 0
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1775[0m	70 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	71 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	71 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 1
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	71 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	71 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	71 | Leaving process signals, 1
[32mengine.rs:1348[0m	71 | Leaving process signals, 0
[32mlib.rs:251[0m	71 | Running N1
[32mengine.rs:897[0m	71 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	71 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 0
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	71 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	71 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	71 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 1
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	71 | Leaving process signals, 1
[32mengine.rs:1348[0m	71 | Leaving process signals, 0
[32mlib.rs:251[0m	71 | Running N2
[32mengine.rs:891[0m	71 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	71 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 0
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	71 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	71 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	71 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	71 | 
[32mengine.rs:1020[0m	71 | Process signals, depth 1
[32mengine.rs:1026[0m	71 | 
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	72 | Leaving process signals, 1
[32mengine.rs:1348[0m	72 | Leaving process signals, 0
[32mengine.rs:1340[0m	71 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 1
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	72 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	72 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1274[0m	72 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mlib.rs:228[0m	72 | 
[32mlib.rs:229[0m	72 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	70 | Input to job N4 changed.
[32mengine.rs:2091[0m	72 | Input to job N3 changed.
[32mengine.rs:2091[0m	72 | Input to job N2 changed.
[32mengine.rs:2096[0m	72 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 0
[32mengine.rs:1348[0m	72 | Leaving process signals, 0
[32mengine.rs:2206[0m	72 | root node 'N0'
[32mengine.rs:2207[0m	72 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	72 | root node 'N1'
[32mengine.rs:2207[0m	72 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	72 | root node 'N2'
[32mengine.rs:2207[0m	72 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	72 | done adding root signals

[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 0
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	72 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	72 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	72 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	72 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 1
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	72 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	72 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	72 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	72 | Leaving process signals, 1
[32mengine.rs:1348[0m	72 | Leaving process signals, 0
[32mlib.rs:251[0m	72 | Running N0
[32mengine.rs:897[0m	72 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:873[0m	72 | removed leaf ephemeral N3
[32mengine.rs:873[0m	72 | removed leaf ephemeral N4
[32mengine.rs:1027[0m	71 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	72 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	72 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	72 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 1
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:2091[0m	72 | Input to job N0 changed.
[32mengine.rs:2096[0m	72 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 0
[32mengine.rs:1348[0m	72 | Leaving process signals, 0
[32mengine.rs:2206[0m	72 | root node 'N0'
[32mengine.rs:2207[0m	72 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	72 | root node 'N1'
[32mengine.rs:2207[0m	72 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	72 | root node 'N2'
[32mengine.rs:2207[0m	72 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	72 | done adding root signals

[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 0
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	72 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	72 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	72 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	72 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	72 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	72 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 1
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	72 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	72 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	72 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	72 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1338[0m	72 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	72 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	72 | Process signals, depth 2
[32mengine.rs:1026[0m	72 | 
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	72 | Leaving process signals, 2
[32mengine.rs:1348[0m	72 | Leaving process signals, 1
[32mengine.rs:1348[0m	72 | Leaving process signals, 0
[32mlib.rs:251[0m	72 | Running N0
[32mengine.rs:897[0m	72 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	72 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	72 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 0
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1231[0m	73 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	73 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	73 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	73 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 1
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	73 | Leaving process signals, 1
[32mengine.rs:1027[0m	72 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Output(NotReady(Invalidated))
[32mlib.rs:228[0m	71 | 
[32mengine.rs:1716[0m	68 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	73 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:2091[0m	71 | Input to job N4 changed.
[32mengine.rs:2096[0m	69 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	73 | Input to job N3 changed.
[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 0
[32mengine.rs:1348[0m	73 | Leaving process signals, 0
[32mengine.rs:2206[0m	73 | root node 'N2'
[32mengine.rs:2207[0m	73 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N2
[32mengine.rs:2206[0m	73 | root node 'N3'
[32mengine.rs:2207[0m	73 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2213[0m	73 | done adding root signals

[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 0
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	73 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	73 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1338[0m	73 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	73 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1340[0m	73 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 1
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	73 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	73 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	73 | Leaving process signals, 1
[32mengine.rs:1348[0m	73 | Leaving process signals, 0
[32mlib.rs:251[0m	73 | Running N3
[32mengine.rs:891[0m	73 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 0
[32mengine.rs:1348[0m	73 | Leaving process signals, 0
[32mengine.rs:2206[0m	73 | root node 'N0'
[32mengine.rs:2207[0m	73 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	73 | root node 'N2'
[32mengine.rs:2207[0m	73 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2206[0m	73 | root node 'N4'
[32mengine.rs:2207[0m	73 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:2213[0m	73 | done adding root signals

[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 0
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	73 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	73 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	73 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	73 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	73 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	73 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1340[0m	73 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 1
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	73 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	73 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	73 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	73 | Leaving process signals, 1
[32mengine.rs:1348[0m	73 | Leaving process signals, 0
[32mlib.rs:251[0m	73 | Running N2
[32mengine.rs:891[0m	73 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mlib.rs:229[0m	73 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1006[0m	70 | -> new Signal { kind: JobCleanedUp, node_idx: 1 } N3
[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 0
[32mlib.rs:251[0m	71 | Running N1
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:971[0m	73 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 0
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	73 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	73 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1338[0m	73 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	73 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	73 | 
[32mengine.rs:1020[0m	73 | Process signals, depth 1
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:1027[0m	73 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	73 | Leaving process signals, 1
[32mengine.rs:1348[0m	73 | Leaving process signals, 0
[32mlib.rs:251[0m	73 | Running N2
[32mengine.rs:897[0m	73 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	73 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N2
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 0
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N2. Current state: Output(Running)
[32mengine.rs:1202[0m	74 | 	Updating N2 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	74 | -> new Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:1338[0m	74 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 1
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N2. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	74 | Leaving process signals, 1
[32mengine.rs:1348[0m	74 | Leaving process signals, 0
[32mlib.rs:228[0m	74 | 
[32mlib.rs:229[0m	74 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	74 | removed leaf ephemeral N0
[32mengine.rs:873[0m	74 | removed leaf ephemeral N4
[32mengine.rs:2091[0m	74 | Input to job N3 changed.
[32mengine.rs:2091[0m	74 | Input to job N1 changed.
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 0
[32mengine.rs:1348[0m	74 | Leaving process signals, 0
[32mengine.rs:2206[0m	74 | root node 'N1'
[32mengine.rs:2207[0m	74 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	74 | root node 'N2'
[32mengine.rs:2207[0m	74 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	74 | done adding root signals

[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 0
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	74 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	74 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	74 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1733[0m	74 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1338[0m	74 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 1
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	74 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	74 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	74 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	74 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 2
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	74 | Leaving process signals, 2
[32mengine.rs:1348[0m	74 | Leaving process signals, 1
[32mengine.rs:1348[0m	74 | Leaving process signals, 0
[32mlib.rs:251[0m	74 | Running N1
[32mengine.rs:891[0m	74 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	74 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 0
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1227[0m	74 | 	Updating N1 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	74 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	74 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	74 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 1
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedFailure)
[32mengine.rs:1182[0m	74 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	74 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	74 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	74 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	74 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	74 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 2
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	74 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	74 | Leaving process signals, 2
[32mengine.rs:1348[0m	74 | Leaving process signals, 1
[32mengine.rs:1348[0m	74 | Leaving process signals, 0
[32mengine.rs:1026[0m	73 | 
[32mengine.rs:903[0m	73 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:1681[0m	73 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	74 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	74 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1340[0m	74 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	74 | 
[32mengine.rs:1020[0m	74 | Process signals, depth 1
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	74 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	74 | 
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	75 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	75 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	75 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	75 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1338[0m	75 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	75 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1020[0m	75 | Process signals, depth 2
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	75 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	75 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	75 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	75 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1020[0m	75 | Process signals, depth 3
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	75 | Leaving process signals, 3
[32mengine.rs:1348[0m	75 | Leaving process signals, 2
[32mengine.rs:1348[0m	75 | Leaving process signals, 1
[32mengine.rs:1348[0m	75 | Leaving process signals, 0
[32mlib.rs:251[0m	75 | Running N0
[32mengine.rs:891[0m	75 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	75 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1020[0m	75 | Process signals, depth 0
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1227[0m	75 | 	Updating N0 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	75 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	75 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	75 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1020[0m	75 | Process signals, depth 1
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedFailure)
[32mengine.rs:1348[0m	75 | Leaving process signals, 1
[32mengine.rs:1348[0m	75 | Leaving process signals, 0
[32mlib.rs:251[0m	75 | Running N2
[32mengine.rs:971[0m	74 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1027[0m	70 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:995[0m	72 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1020[0m	75 | Process signals, depth 0
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1051[0m	73 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	73 | Input to job N2 changed.
[32mengine.rs:1027[0m	74 | 	Handling Signal { kind: JobCleanedUp, node_idx: 1 } for N3. Current state: Ephemeral(FinishedSuccessReadyForCleanup)
[32mengine.rs:1320[0m	75 | 	Updating N3 from Ephemeral(FinishedSuccessReadyForCleanup) to Ephemeral(FinishedSuccessCleanedUp)
[32mengine.rs:1294[0m	72 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	75 | New signals after process_signals - adding and processing
[32mengine.rs:1020[0m	75 | Process signals, depth 0
[32mengine.rs:873[0m	70 | removed leaf ephemeral N1
[32mengine.rs:1348[0m	73 | Leaving process signals, 0
[32mlib.rs:251[0m	75 | Running N2
[32mengine.rs:891[0m	75 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1051[0m	75 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mlib.rs:228[0m	74 | 
[32mlib.rs:229[0m	75 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:891[0m	75 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1348[0m	75 | Leaving process signals, 0
[32mengine.rs:1340[0m	75 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	75 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1020[0m	75 | Process signals, depth 2
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	75 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:2091[0m	75 | Input to job N2 changed.
[32mengine.rs:2096[0m	75 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	75 | Input to job N3 changed.
[32mengine.rs:971[0m	75 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mlib.rs:228[0m	75 | 
[32mlib.rs:229[0m	75 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1026[0m	75 | 
[32mengine.rs:873[0m	76 | removed leaf ephemeral N2
[32mengine.rs:873[0m	75 | removed leaf ephemeral N2
[32mengine.rs:971[0m	73 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	76 | 
[32mengine.rs:1348[0m	75 | Leaving process signals, 1
[32mengine.rs:1348[0m	76 | Leaving process signals, 0
[32mlib.rs:251[0m	76 | Running N3
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1020[0m	76 | Process signals, depth 0
[32mengine.rs:1348[0m	76 | Leaving process signals, 0
[32mengine.rs:2206[0m	76 | root node 'N2'
[32mengine.rs:2207[0m	76 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N2
[32mengine.rs:2206[0m	76 | root node 'N3'
[32mengine.rs:2207[0m	76 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2213[0m	76 | done adding root signals

[32mengine.rs:1019[0m	76 | 
[32mengine.rs:1020[0m	76 | Process signals, depth 0
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1027[0m	76 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	76 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1027[0m	76 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1020[0m	75 | Process signals, depth 0
[32mengine.rs:1019[0m	75 | 
[32mengine.rs:1775[0m	75 | -> new Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1027[0m	76 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1027[0m	75 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1231[0m	76 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	76 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	76 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	76 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	76 | 
[32mengine.rs:1681[0m	76 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:897[0m	76 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	76 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	76 | 
[32mengine.rs:1020[0m	76 | Process signals, depth 0
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1027[0m	76 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Output(Running)
[32mengine.rs:1202[0m	76 | 	Updating N3 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	76 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	76 | New signals after process_signals - adding and processing
[32mengine.rs:1338[0m	76 | New signals after process_signals - adding and processing
[32mengine.rs:873[0m	76 | removed leaf ephemeral N0
[32mengine.rs:1019[0m	76 | 
[32mengine.rs:971[0m	75 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	76 | 
[32mengine.rs:1020[0m	76 | Process signals, depth 0
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1338[0m	76 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	76 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1340[0m	76 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	76 | 
[32mengine.rs:1020[0m	76 | Process signals, depth 1
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1340[0m	76 | 	 Signal { kind: JobReadyToRun, node_idx: 4 } N4
[32mengine.rs:1020[0m	76 | Process signals, depth 0
[32mengine.rs:1348[0m	76 | Leaving process signals, 0
[32mengine.rs:2206[0m	76 | root node 'N0'
[32mengine.rs:2207[0m	76 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	76 | done adding root signals

[32mengine.rs:1019[0m	76 | 
[32mengine.rs:1020[0m	76 | Process signals, depth 0
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1027[0m	76 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	76 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	76 | New signals after process_signals - adding and processing
[32mengine.rs:1019[0m	76 | 
[32mengine.rs:1020[0m	76 | Process signals, depth 0
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1027[0m	76 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1027[0m	76 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	76 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	76 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1020[0m	76 | Process signals, depth 0
[32mengine.rs:1206[0m	76 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:2091[0m	76 | Input to job N3 changed.
[32mengine.rs:1027[0m	76 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	76 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1020[0m	76 | Process signals, depth 3
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobReadyToRun, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	77 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	76 | Leaving process signals, 0
[32mengine.rs:1338[0m	76 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	77 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	77 | 
[32mengine.rs:1020[0m	77 | Process signals, depth 1
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:2104[0m	76 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:2091[0m	77 | Input to job N1 changed.
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1348[0m	75 | Leaving process signals, 2
[32mengine.rs:1020[0m	76 | Process signals, depth 1
[32mengine.rs:1198[0m	76 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	77 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	77 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	77 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	77 | 
[32mengine.rs:1026[0m	76 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	77 | Leaving process signals, 1
[32mengine.rs:1348[0m	77 | Leaving process signals, 0
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	77 | Leaving process signals, 1
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	77 | Leaving process signals, 1
[32mengine.rs:1348[0m	77 | Leaving process signals, 0
[32mlib.rs:251[0m	77 | Running N1
[32mengine.rs:891[0m	77 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	77 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	77 | 
[32mengine.rs:1020[0m	77 | Process signals, depth 0
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1348[0m	77 | Leaving process signals, 0
[32mlib.rs:251[0m	77 | Running N4
[32mengine.rs:2206[0m	77 | root node 'N2'
[32mengine.rs:2207[0m	77 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N2
[32mengine.rs:2213[0m	77 | done adding root signals

[32mengine.rs:1019[0m	77 | 
[32mengine.rs:1020[0m	77 | Process signals, depth 0
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	77 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1338[0m	77 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	77 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N2
[32mengine.rs:1019[0m	77 | 
[32mengine.rs:1020[0m	77 | Process signals, depth 1
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	77 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	77 | Leaving process signals, 1
[32mengine.rs:1348[0m	77 | Leaving process signals, 0
[32mengine.rs:1221[0m	76 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	77 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	77 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	77 | 
[32mengine.rs:1020[0m	77 | Process signals, depth 1
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1182[0m	77 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1183[0m	77 | reconsidering lead to no update, all current gen
[32mengine.rs:1340[0m	76 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1020[0m	77 | Process signals, depth 1
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	77 | Leaving process signals, 1
[32mengine.rs:1348[0m	77 | Leaving process signals, 0
[32mlib.rs:228[0m	77 | 
[32mlib.rs:229[0m	77 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1198[0m	77 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	77 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	77 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	77 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	77 | 
[32mengine.rs:1020[0m	77 | Process signals, depth 1
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	77 | Leaving process signals, 1
[32mengine.rs:1348[0m	77 | Leaving process signals, 0
[32mlib.rs:251[0m	77 | Running N2
[32mengine.rs:1040[0m	77 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:873[0m	77 | removed leaf ephemeral N3
[32mengine.rs:1348[0m	77 | Leaving process signals, 3
[32mengine.rs:897[0m	77 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1338[0m	77 | New signals after process_signals - adding and processing
[32mengine.rs:1019[0m	77 | 
[32mengine.rs:1020[0m	77 | Process signals, depth 1
[32mengine.rs:1026[0m	77 | 
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	77 | Leaving process signals, 1
[32mengine.rs:1348[0m	77 | Leaving process signals, 0
[32mengine.rs:897[0m	77 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1348[0m	77 | Leaving process signals, 1
[32mengine.rs:2091[0m	77 | Input to job N1 changed.
[32mengine.rs:1348[0m	77 | Leaving process signals, 2
[32mengine.rs:1348[0m	78 | Leaving process signals, 1
[32mengine.rs:1348[0m	78 | Leaving process signals, 0
[32mlib.rs:251[0m	77 | Running N2
[32mengine.rs:1027[0m	77 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:891[0m	78 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:2104[0m	77 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mlib.rs:251[0m	77 | Running N4
[32mlib.rs:251[0m	78 | Running N2
[32mengine.rs:995[0m	78 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 0
[32mengine.rs:1026[0m	78 | 
[32mengine.rs:1340[0m	77 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 2
[32mengine.rs:1026[0m	78 | 
[32mengine.rs:1027[0m	78 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:891[0m	78 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:897[0m	78 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1348[0m	78 | Leaving process signals, 0
[32mengine.rs:2096[0m	78 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	78 | Input to job N2 changed.
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 0
[32mengine.rs:1348[0m	78 | Leaving process signals, 0
[32mengine.rs:2206[0m	78 | root node 'N1'
[32mengine.rs:2207[0m	78 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	78 | root node 'N2'
[32mengine.rs:1020[0m	78 | Process signals, depth 0
[32mengine.rs:971[0m	78 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 0
[32mengine.rs:1026[0m	78 | 
[32mengine.rs:1027[0m	78 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Always(Running)
[32mengine.rs:1027[0m	78 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mlib.rs:251[0m	78 | Running N4
[32mengine.rs:1340[0m	76 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 1
[32mengine.rs:1026[0m	78 | 
[32mengine.rs:1027[0m	78 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	78 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	78 | Leaving process signals, 1
[32mengine.rs:1348[0m	78 | Leaving process signals, 0
[32mlib.rs:251[0m	78 | Running N0
[32mengine.rs:891[0m	78 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	78 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1198[0m	78 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	78 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	78 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	78 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 1
[32mengine.rs:1026[0m	78 | 
[32mengine.rs:1027[0m	78 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	78 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	78 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	78 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	78 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 2
[32mengine.rs:1026[0m	78 | 
[32mengine.rs:1027[0m	78 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	78 | Leaving process signals, 2
[32mengine.rs:1348[0m	78 | Leaving process signals, 1
[32mengine.rs:1348[0m	78 | Leaving process signals, 0
[32mlib.rs:251[0m	78 | Running N3
[32mengine.rs:897[0m	78 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:897[0m	78 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	78 | -> new Signal { kind: JobFinishedFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 0
[32mengine.rs:1026[0m	78 | 
[32mengine.rs:1027[0m	78 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 4 } for N4. Current state: Output(Running)
[32mengine.rs:1348[0m	78 | Leaving process signals, 0
[32mengine.rs:971[0m	78 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mlib.rs:251[0m	78 | Running N3
[32mengine.rs:995[0m	77 | -> new Signal { kind: JobFinishedFailure, node_idx: 4 } N4
[32mengine.rs:1198[0m	78 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	78 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	78 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	78 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	78 | Process signals, depth 1
[32mengine.rs:2207[0m	78 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	78 | done adding root signals

[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 0
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	79 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	79 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	79 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	79 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	79 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 1
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	79 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	79 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	79 | Leaving process signals, 1
[32mengine.rs:1348[0m	79 | Leaving process signals, 0
[32mlib.rs:251[0m	79 | Running N2
[32mengine.rs:891[0m	79 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1026[0m	78 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	79 | Leaving process signals, 1
[32mengine.rs:1348[0m	79 | Leaving process signals, 0
[32mlib.rs:251[0m	79 | Running N0
[32mengine.rs:891[0m	79 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	79 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 0
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	79 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	79 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	79 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	79 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 1
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	79 | Leaving process signals, 1
[32mengine.rs:1348[0m	79 | Leaving process signals, 0
[32mlib.rs:228[0m	79 | 
[32mlib.rs:229[0m	79 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	79 | Input to job N4 changed.
[32mengine.rs:2091[0m	79 | Input to job N1 changed.
[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 0
[32mengine.rs:1348[0m	79 | Leaving process signals, 0
[32mengine.rs:2206[0m	79 | root node 'N0'
[32mengine.rs:2206[0m	78 | root node 'N1'
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:891[0m	78 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1019[0m	78 | 
[32mengine.rs:1231[0m	78 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	79 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1251[0m	79 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1251[0m	79 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	79 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	79 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	79 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1340[0m	79 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 1
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 0
[32mengine.rs:995[0m	78 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1020[0m	78 | Process signals, depth 0
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	79 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	79 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	79 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	79 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 1
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	79 | Leaving process signals, 1
[32mengine.rs:1348[0m	79 | Leaving process signals, 0
[32mengine.rs:1775[0m	78 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mlib.rs:228[0m	79 | 
[32mlib.rs:229[0m	79 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2207[0m	79 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2207[0m	79 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:1020[0m	79 | Process signals, depth 0
[32mengine.rs:971[0m	79 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 0
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Output(Running)
[32mengine.rs:1231[0m	79 | 	Updating N3 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	79 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:2213[0m	79 | done adding root signals

[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1020[0m	79 | Process signals, depth 0
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1027[0m	79 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 4 } for N4. Current state: Output(Running)
[32mengine.rs:971[0m	78 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N2
[32mengine.rs:971[0m	79 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1338[0m	79 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	80 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1020[0m	80 | Process signals, depth 3
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	80 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1019[0m	79 | 
[32mengine.rs:1798[0m	80 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1231[0m	80 | 	Updating N4 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1231[0m	78 | 	Updating N4 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:873[0m	79 | removed leaf ephemeral N4
[32mengine.rs:873[0m	80 | removed leaf ephemeral N1
[32mengine.rs:873[0m	80 | removed leaf ephemeral N2
[32mengine.rs:1026[0m	79 | 
[32mengine.rs:1348[0m	80 | Leaving process signals, 3
[32mengine.rs:1182[0m	79 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1020[0m	80 | Process signals, depth 0
[32mengine.rs:1338[0m	80 | New signals after process_signals - adding and processing
[32mengine.rs:1248[0m	80 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1020[0m	80 | Process signals, depth 0
[32mengine.rs:1020[0m	80 | Process signals, depth 0
[32mengine.rs:1248[0m	80 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1251[0m	79 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:2206[0m	79 | root node 'N1'
[32mengine.rs:2207[0m	80 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	80 | root node 'N2'
[32mengine.rs:2207[0m	80 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	80 | done adding root signals

[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1340[0m	80 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	80 | New signals after process_signals - adding and processing
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1338[0m	80 | New signals after process_signals - adding and processing
[32mengine.rs:1338[0m	80 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	80 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	80 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1348[0m	80 | Leaving process signals, 2
[32mengine.rs:1183[0m	80 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1020[0m	80 | Process signals, depth 0
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1340[0m	80 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1020[0m	80 | Process signals, depth 1
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedFailure)
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Output(Running)
[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1020[0m	80 | Process signals, depth 1
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	80 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	80 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1340[0m	80 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1020[0m	80 | Process signals, depth 1
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	80 | Leaving process signals, 1
[32mengine.rs:1348[0m	80 | Leaving process signals, 0
[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1020[0m	80 | Process signals, depth 1
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1198[0m	80 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	80 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	80 | New signals after process_signals - adding and processing
[32mengine.rs:1202[0m	80 | 	Updating N2 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	80 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	80 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	80 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	80 | 
[32mengine.rs:1020[0m	80 | Process signals, depth 1
[32mengine.rs:1026[0m	80 | 
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	80 | Leaving process signals, 1
[32mengine.rs:1348[0m	80 | Leaving process signals, 0
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	80 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	80 | Leaving process signals, 1
[32mengine.rs:1348[0m	80 | Leaving process signals, 0
[32mlib.rs:251[0m	80 | Running N1
[32mengine.rs:1348[0m	80 | Leaving process signals, 1
[32mengine.rs:1182[0m	80 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:903[0m	80 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:1221[0m	80 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mlib.rs:228[0m	80 | 
[32mlib.rs:229[0m	80 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:228[0m	80 | 
[32mengine.rs:2091[0m	81 | Input to job N0 changed.
[32mengine.rs:2091[0m	80 | Input to job N0 changed.
[32mengine.rs:1019[0m	81 | 
[32mengine.rs:1020[0m	81 | Process signals, depth 0
[32mengine.rs:1348[0m	81 | Leaving process signals, 0
[32mengine.rs:2206[0m	81 | root node 'N0'
[32mengine.rs:2207[0m	81 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:1183[0m	80 | reconsidering lead to no update, all current gen
[32mengine.rs:995[0m	80 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1338[0m	80 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N2. Current state: Always(Running)
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	81 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	81 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	81 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	81 | 
[32mengine.rs:1020[0m	81 | Process signals, depth 1
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1198[0m	81 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mlib.rs:229[0m	81 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	81 | Input to job N2 changed.
[32mengine.rs:1348[0m	80 | Leaving process signals, 1
[32mengine.rs:1340[0m	80 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	81 | 
[32mengine.rs:1020[0m	81 | Process signals, depth 1
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	81 | Leaving process signals, 1
[32mengine.rs:1348[0m	81 | Leaving process signals, 0
[32mlib.rs:251[0m	81 | Running N1
[32mengine.rs:1221[0m	81 | -> new Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:873[0m	81 | removed leaf ephemeral N4
[32mengine.rs:2096[0m	81 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	81 | Leaving process signals, 0
[32mengine.rs:1348[0m	80 | Leaving process signals, 0
[32mengine.rs:1027[0m	80 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	81 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	81 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	81 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:873[0m	81 | removed leaf ephemeral N0
[32mengine.rs:2091[0m	81 | Input to job N4 changed.
[32mlib.rs:228[0m	81 | 
[32mlib.rs:251[0m	81 | Running N4
[32mengine.rs:897[0m	81 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	81 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	81 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1298[0m	81 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	81 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	81 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	81 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	81 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	81 | 
[32mengine.rs:1020[0m	81 | Process signals, depth 2
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	81 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1182[0m	81 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	81 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	81 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1338[0m	81 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	81 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	81 | 
[32mengine.rs:1020[0m	81 | Process signals, depth 3
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	81 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1338[0m	81 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	81 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	81 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	81 | 
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	82 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	82 | Leaving process signals, 1
[32mengine.rs:1348[0m	82 | Leaving process signals, 0
[32mlib.rs:251[0m	82 | Running N2
[32mengine.rs:891[0m	82 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:2091[0m	81 | Input to job N3 changed.
[32mengine.rs:2096[0m	81 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mlib.rs:229[0m	81 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2213[0m	81 | done adding root signals

[32mengine.rs:1019[0m	82 | 
[32mengine.rs:1020[0m	82 | Process signals, depth 0
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	82 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	82 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	82 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:1020[0m	82 | Process signals, depth 1
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	82 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	82 | Leaving process signals, 1
[32mengine.rs:1348[0m	82 | Leaving process signals, 0
[32mlib.rs:251[0m	82 | Running N0
[32mengine.rs:891[0m	82 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1348[0m	81 | Leaving process signals, 3
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:2096[0m	82 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:971[0m	82 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:1020[0m	82 | Process signals, depth 0
[32mengine.rs:1348[0m	82 | Leaving process signals, 0
[32mengine.rs:2206[0m	82 | root node 'N0'
[32mengine.rs:1019[0m	81 | 
[32mengine.rs:1340[0m	81 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1267[0m	81 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	82 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	82 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	82 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	82 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:1020[0m	82 | Process signals, depth 2
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:971[0m	81 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:2207[0m	82 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	82 | root node 'N2'
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:897[0m	81 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	82 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1348[0m	82 | Leaving process signals, 2
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:1020[0m	82 | Process signals, depth 1
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	82 | Leaving process signals, 1
[32mengine.rs:1348[0m	82 | Leaving process signals, 0
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:1020[0m	82 | Process signals, depth 0
[32mengine.rs:2207[0m	82 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2206[0m	82 | root node 'N4'
[32mengine.rs:971[0m	82 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:1020[0m	82 | Process signals, depth 0
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	82 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	82 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	82 | New signals after process_signals - adding and processing
[32mengine.rs:1020[0m	82 | Process signals, depth 0
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:1020[0m	82 | Process signals, depth 1
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:1348[0m	82 | Leaving process signals, 1
[32mengine.rs:1348[0m	82 | Leaving process signals, 0
[32mengine.rs:1019[0m	82 | 
[32mengine.rs:2141[0m	82 | output was missing N4
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	82 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:1026[0m	82 | 
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:2207[0m	82 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N4
[32mengine.rs:1348[0m	82 | Leaving process signals, 1
[32mengine.rs:1348[0m	82 | Leaving process signals, 0
[32mengine.rs:2091[0m	82 | Input to job N1 changed.
[32mengine.rs:1020[0m	82 | Process signals, depth 0
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:2142[0m	82 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mlib.rs:228[0m	82 | 
[32mengine.rs:1340[0m	82 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1027[0m	82 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Output(Running)
[32mengine.rs:1202[0m	83 | 	Updating N4 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1235[0m	82 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:2213[0m	82 | done adding root signals

[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 0
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:2091[0m	83 | Input to job N1 changed.
[32mlib.rs:229[0m	83 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 1
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1248[0m	83 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	83 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	83 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	83 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	83 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 1
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	83 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	83 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1281[0m	83 | 	Updating N3 from Ephemeral(NotReady(Invalidated)) to Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	83 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1298[0m	83 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:2096[0m	82 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mlib.rs:228[0m	82 | 
[32mengine.rs:1681[0m	83 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1198[0m	83 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:2096[0m	83 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 0
[32mengine.rs:1348[0m	83 | Leaving process signals, 0
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	83 | Leaving process signals, 1
[32mengine.rs:1348[0m	83 | Leaving process signals, 0
[32mengine.rs:1338[0m	83 | New signals after process_signals - adding and processing
[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 0
[32mengine.rs:1348[0m	83 | Leaving process signals, 0
[32mengine.rs:2206[0m	83 | root node 'N1'
[32mengine.rs:2207[0m	83 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	83 | root node 'N2'
[32mengine.rs:1221[0m	83 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:2206[0m	83 | root node 'N1'
[32mengine.rs:2207[0m	83 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2213[0m	83 | done adding root signals

[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 0
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	83 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1338[0m	83 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	83 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 1
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mlib.rs:228[0m	83 | 
[32mengine.rs:1340[0m	83 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	83 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	83 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 2
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:2207[0m	83 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	83 | done adding root signals

[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 0
[32mengine.rs:1026[0m	83 | 
[32mlib.rs:229[0m	83 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:229[0m	83 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1221[0m	83 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	83 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	83 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 1
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1182[0m	83 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	83 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	83 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	83 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	83 | 
[32mengine.rs:1020[0m	83 | Process signals, depth 2
[32mengine.rs:1026[0m	83 | 
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1338[0m	83 | New signals after process_signals - adding and processing
[32mengine.rs:1020[0m	82 | Process signals, depth 0
[32mlib.rs:251[0m	82 | Running N2
[32mengine.rs:1051[0m	83 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:873[0m	83 | removed leaf ephemeral N3
[32mengine.rs:873[0m	84 | removed leaf ephemeral N4
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	84 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	83 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1675[0m	84 | Considering an already finished job -> no-op
[32mengine.rs:1340[0m	84 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 1
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1775[0m	84 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:2091[0m	84 | Input to job N0 changed.
[32mengine.rs:873[0m	83 | removed leaf ephemeral N0
[32mengine.rs:1348[0m	83 | Leaving process signals, 2
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1681[0m	84 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:897[0m	84 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1348[0m	84 | Leaving process signals, 1
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Output(FinishedSuccess)
[32mengine.rs:2091[0m	83 | Input to job N1 changed.
[32mengine.rs:2091[0m	84 | Input to job N3 changed.
[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 0
[32mengine.rs:1348[0m	84 | Leaving process signals, 0
[32mengine.rs:2206[0m	84 | root node 'N1'
[32mengine.rs:2207[0m	84 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	84 | root node 'N3'
[32mengine.rs:2207[0m	84 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2213[0m	84 | done adding root signals

[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 0
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	84 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	84 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1338[0m	84 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	84 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	84 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 1
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	84 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	84 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	84 | Leaving process signals, 1
[32mengine.rs:1348[0m	84 | Leaving process signals, 0
[32mlib.rs:251[0m	84 | Running N1
[32mengine.rs:891[0m	84 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	84 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 0
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	84 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	84 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	84 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	84 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 1
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	84 | Leaving process signals, 1
[32mengine.rs:1348[0m	84 | Leaving process signals, 0
[32mlib.rs:251[0m	84 | Running N3
[32mengine.rs:891[0m	84 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	84 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 0
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	84 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	84 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1338[0m	84 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	84 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 1
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	84 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	84 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	84 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	84 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	84 | 
[32mengine.rs:1020[0m	84 | Process signals, depth 1
[32mengine.rs:1026[0m	84 | 
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	84 | Leaving process signals, 1
[32mengine.rs:1348[0m	84 | Leaving process signals, 0
[32mengine.rs:1182[0m	84 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:971[0m	84 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N2
[32mengine.rs:1348[0m	84 | Leaving process signals, 0
[32mengine.rs:2032[0m	84 | Job ready for cleanup NodeInfo { job_id: "N1", state: Ephemeral(FinishedSuccessNotReadyForCleanup), history_output: Some("history_N1"), last_considered_in_gen: 0 }
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:2096[0m	84 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	85 | 
[32mengine.rs:1020[0m	85 | Process signals, depth 0
[32mengine.rs:1775[0m	84 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N4
[32mengine.rs:1338[0m	84 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	85 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	85 | 
[32mengine.rs:1020[0m	85 | Process signals, depth 3
[32mengine.rs:1026[0m	85 | 
[32mlib.rs:251[0m	85 | Running N1
[32mengine.rs:2033[0m	85 | 	Updating N1 from Ephemeral(FinishedSuccessNotReadyForCleanup) to Ephemeral(FinishedSuccessReadyForCleanup)
[32mengine.rs:1631[0m	85 | 		 not_done: 0, invalidated: false
[32mengine.rs:2141[0m	84 | output was missing N4
[32mengine.rs:1348[0m	84 | Leaving process signals, 1
[32mengine.rs:1348[0m	85 | Leaving process signals, 0
[32mengine.rs:1338[0m	85 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	84 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Always(FinishedSuccess)
[32mlib.rs:228[0m	85 | 
[32mlib.rs:229[0m	85 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	85 | 
[32mengine.rs:1027[0m	85 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:897[0m	85 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1348[0m	85 | Leaving process signals, 1
[32mengine.rs:1716[0m	85 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:2142[0m	85 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	85 | Input to job N1 changed.
[32mengine.rs:2096[0m	85 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2177[0m	85 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:1019[0m	85 | 
[32mengine.rs:1020[0m	85 | Process signals, depth 0
[32mengine.rs:1348[0m	85 | Leaving process signals, 0
[32mengine.rs:2206[0m	85 | root node 'N1'
[32mengine.rs:2207[0m	85 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	85 | root node 'N2'
[32mengine.rs:2207[0m	85 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	85 | done adding root signals

[32mengine.rs:1019[0m	85 | 
[32mengine.rs:1020[0m	85 | Process signals, depth 0
[32mengine.rs:1026[0m	85 | 
[32mengine.rs:1027[0m	85 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	85 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	85 | 
[32mengine.rs:1027[0m	85 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	85 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:971[0m	85 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1348[0m	85 | Leaving process signals, 0
[32mengine.rs:1733[0m	85 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1348[0m	85 | Leaving process signals, 0
[32mengine.rs:1340[0m	85 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	85 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1340[0m	85 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N4
[32mengine.rs:1019[0m	85 | 
[32mengine.rs:1020[0m	85 | Process signals, depth 1
[32mengine.rs:1026[0m	85 | 
[32mengine.rs:1020[0m	85 | Process signals, depth 0
[32mengine.rs:1026[0m	85 | 
[32mengine.rs:1027[0m	85 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N2. Current state: Output(Running)
[32mengine.rs:1202[0m	85 | 	Updating N2 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	85 | -> new Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:1338[0m	85 | New signals after process_signals - adding and processing
[32mengine.rs:2206[0m	85 | root node 'N0'
[32mlib.rs:228[0m	85 | 
[32mlib.rs:229[0m	85 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1183[0m	85 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	85 | 
[32mengine.rs:1027[0m	85 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	85 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	85 | 
[32mengine.rs:1027[0m	85 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	85 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	85 | 
[32mengine.rs:1027[0m	85 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2207[0m	85 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	85 | root node 'N1'
[32mengine.rs:2091[0m	85 | Input to job N1 changed.
[32mengine.rs:2096[0m	85 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1027[0m	85 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	85 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1348[0m	85 | Leaving process signals, 3
[32mengine.rs:1019[0m	85 | 
[32mengine.rs:1006[0m	85 | -> new Signal { kind: JobCleanedUp, node_idx: 1 } N1
[32mengine.rs:1019[0m	85 | 
[32mengine.rs:1340[0m	85 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1051[0m	85 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	85 | Leaving process signals, 1
[32mengine.rs:1348[0m	85 | Leaving process signals, 0
[32mlib.rs:251[0m	85 | Running N4
[32mengine.rs:2091[0m	85 | Input to job N3 changed.
[32mengine.rs:1267[0m	85 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	85 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	86 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	86 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	86 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1020[0m	85 | Process signals, depth 0
[32mengine.rs:1340[0m	85 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 1
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:897[0m	85 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:2096[0m	85 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 0
[32mengine.rs:1348[0m	86 | Leaving process signals, 0
[32mengine.rs:2206[0m	86 | root node 'N1'
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1348[0m	85 | Leaving process signals, 1
[32mengine.rs:1348[0m	86 | Leaving process signals, 0
[32mengine.rs:873[0m	85 | removed leaf ephemeral N4
[32mengine.rs:873[0m	86 | removed leaf ephemeral N3
[32mengine.rs:873[0m	86 | removed leaf ephemeral N1
[32mengine.rs:873[0m	86 | removed leaf ephemeral N2
[32mengine.rs:1348[0m	85 | Leaving process signals, 2
[32mengine.rs:1348[0m	86 | Leaving process signals, 1
[32mengine.rs:1348[0m	86 | Leaving process signals, 0
[32mlib.rs:251[0m	86 | Running N0
[32mengine.rs:891[0m	86 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobCleanedUp, node_idx: 1 } for N1. Current state: Ephemeral(FinishedSuccessReadyForCleanup)
[32mengine.rs:2207[0m	85 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	86 | root node 'N2'
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:971[0m	86 | -> new Signal { kind: JobFinishedSuccess, node_idx: 3 } N4
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 0
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1338[0m	85 | New signals after process_signals - adding and processing
[32mengine.rs:2207[0m	86 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:1020[0m	86 | Process signals, depth 3
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1320[0m	86 | 	Updating N1 from Ephemeral(FinishedSuccessReadyForCleanup) to Ephemeral(FinishedSuccessCleanedUp)
[32mengine.rs:1348[0m	86 | Leaving process signals, 0
[32mengine.rs:2207[0m	86 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:1051[0m	86 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	86 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 3 } for N4. Current state: Output(Running)
[32mengine.rs:1202[0m	86 | 	Updating N4 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:2206[0m	86 | root node 'N3'
[32mengine.rs:2207[0m	86 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N3
[32mengine.rs:2213[0m	86 | done adding root signals

[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 0
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	86 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1170[0m	86 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	86 | 	 Signal { kind: JobDone, node_idx: 0 } N2
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 1
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N2. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	86 | Leaving process signals, 1
[32mengine.rs:1348[0m	86 | Leaving process signals, 0
[32mengine.rs:1338[0m	85 | New signals after process_signals - adding and processing
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	85 | Process signals, depth 0
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	86 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	86 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	86 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	86 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 1
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1340[0m	86 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	86 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 1
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	86 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	86 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	86 | Leaving process signals, 1
[32mengine.rs:1348[0m	86 | Leaving process signals, 0
[32mlib.rs:251[0m	86 | Running N2
[32mengine.rs:891[0m	86 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	86 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 0
[32mengine.rs:1026[0m	86 | 
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	86 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	86 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	86 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	86 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	86 | 
[32mengine.rs:1020[0m	86 | Process signals, depth 1
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1221[0m	86 | -> new Signal { kind: JobDone, node_idx: 3 } N4
[32mengine.rs:971[0m	86 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	87 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:2213[0m	86 | done adding root signals

[32mlib.rs:228[0m	86 | 
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1020[0m	86 | Process signals, depth 0
[32mengine.rs:1348[0m	87 | Leaving process signals, 0
[32mengine.rs:2206[0m	87 | root node 'N0'
[32mengine.rs:2207[0m	87 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	87 | done adding root signals

[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	87 | Process signals, depth 0
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	87 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	87 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	87 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	87 | Process signals, depth 1
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	87 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	87 | Leaving process signals, 1
[32mengine.rs:1348[0m	87 | Leaving process signals, 0
[32mlib.rs:251[0m	87 | Running N0
[32mengine.rs:891[0m	87 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	87 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	87 | Process signals, depth 0
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	87 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	87 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	87 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	87 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	87 | Process signals, depth 1
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	87 | Leaving process signals, 1
[32mengine.rs:1348[0m	87 | Leaving process signals, 0
[32mengine.rs:1338[0m	86 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1338[0m	87 | New signals after process_signals - adding and processing
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	87 | Process signals, depth 0
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	87 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	87 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	87 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	87 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	87 | Process signals, depth 1
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	87 | Leaving process signals, 1
[32mengine.rs:1348[0m	87 | Leaving process signals, 0
[32mlib.rs:251[0m	87 | Running N1
[32mengine.rs:891[0m	87 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	87 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	87 | Process signals, depth 0
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1227[0m	87 | 	Updating N1 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	87 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	87 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	87 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	87 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	87 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	87 | Process signals, depth 1
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedFailure)
[32mengine.rs:1182[0m	87 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	87 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	87 | 
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	87 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	87 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	87 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	87 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1182[0m	87 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	87 | 	 Signal { kind: JobDone, node_idx: 3 } N4
[32mlib.rs:228[0m	86 | 
[32mlib.rs:229[0m	87 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	87 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:2091[0m	87 | Input to job N0 changed.
[32mengine.rs:2096[0m	87 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1182[0m	87 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N4
[32mengine.rs:1183[0m	88 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	88 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	88 | 	 Signal { kind: ConsiderJob, node_idx: 1 } N4
[32mengine.rs:1019[0m	88 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 2
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 0
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:2091[0m	88 | Input to job N3 changed.
[32mengine.rs:2091[0m	88 | Input to job N2 changed.
[32mengine.rs:2096[0m	88 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	88 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 0
[32mengine.rs:1348[0m	88 | Leaving process signals, 0
[32mengine.rs:2206[0m	88 | root node 'N0'
[32mengine.rs:2207[0m	88 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	88 | root node 'N1'
[32mengine.rs:2207[0m	88 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	88 | root node 'N2'
[32mengine.rs:2207[0m	88 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	88 | done adding root signals

[32mengine.rs:1019[0m	88 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 0
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1183[0m	87 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	88 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	88 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	88 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	88 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	88 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	88 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 2
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1340[0m	87 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	87 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	87 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 1
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N4. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	88 | Leaving process signals, 1
[32mengine.rs:1348[0m	88 | Leaving process signals, 0
[32mlib.rs:251[0m	88 | Running N0
[32mengine.rs:891[0m	88 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1019[0m	88 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 2
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	88 | Leaving process signals, 2
[32mengine.rs:1348[0m	88 | Leaving process signals, 1
[32mengine.rs:1348[0m	88 | Leaving process signals, 0
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	88 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	88 | 		 not_done: 0, invalidated: false
[32mengine.rs:1019[0m	88 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 2
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	88 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	88 | Leaving process signals, 2
[32mengine.rs:1348[0m	88 | Leaving process signals, 1
[32mengine.rs:1348[0m	88 | Leaving process signals, 0
[32mlib.rs:251[0m	88 | Running N3
[32mengine.rs:1716[0m	88 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1775[0m	88 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	88 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	88 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	88 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	88 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	88 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	88 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	88 | 
[32mengine.rs:1020[0m	88 | Process signals, depth 1
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	88 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	88 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1564[0m	88 | 			 no history - edge invalidated
[32mengine.rs:891[0m	88 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1733[0m	88 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	88 | 
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	88 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	88 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	88 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	88 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	88 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	88 | 
[32mlib.rs:228[0m	87 | 
[32mengine.rs:971[0m	88 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1027[0m	88 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	89 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	89 | Leaving process signals, 1
[32mengine.rs:1348[0m	89 | Leaving process signals, 0
[32mlib.rs:251[0m	89 | Running N1
[32mengine.rs:891[0m	89 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	89 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 0
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	89 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	89 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	89 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	89 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 1
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	89 | Leaving process signals, 1
[32mengine.rs:1348[0m	89 | Leaving process signals, 0
[32mlib.rs:251[0m	89 | Running N2
[32mengine.rs:897[0m	89 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	89 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 0
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:1231[0m	89 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	89 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1251[0m	89 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1251[0m	89 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	89 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	89 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	89 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1340[0m	89 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 1
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	89 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	89 | reconsidering lead to no update, all current gen
[32mengine.rs:1182[0m	89 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	89 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1596[0m	88 | 		Edge invalidated N2(2)-> N3(3)
[32mengine.rs:995[0m	88 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 0
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Always(Running)
[32mengine.rs:1227[0m	89 | 	Updating N3 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	89 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	89 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	89 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 1
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedFailure)
[32mengine.rs:1775[0m	88 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1338[0m	89 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	89 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 3
[32mengine.rs:1026[0m	89 | 
[32mlib.rs:229[0m	89 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 0
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	89 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	89 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	89 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	89 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 1
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:873[0m	89 | removed leaf ephemeral N1
[32mengine.rs:873[0m	89 | removed leaf ephemeral N2
[32mengine.rs:1631[0m	89 | 		 not_done: 0, invalidated: true
[32mengine.rs:1874[0m	89 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1881[0m	89 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1338[0m	89 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	89 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 3
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:2091[0m	89 | Input to job N0 changed.
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 0
[32mengine.rs:1348[0m	89 | Leaving process signals, 0
[32mengine.rs:2206[0m	89 | root node 'N0'
[32mengine.rs:2207[0m	89 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	89 | done adding root signals

[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 0
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	89 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	89 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	89 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	89 | 
[32mengine.rs:1020[0m	89 | Process signals, depth 1
[32mengine.rs:1026[0m	89 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	89 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	90 | Leaving process signals, 1
[32mengine.rs:1348[0m	90 | Leaving process signals, 0
[32mlib.rs:251[0m	90 | Running N0
[32mengine.rs:891[0m	90 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	90 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 0
[32mengine.rs:1026[0m	90 | 
[32mlib.rs:251[0m	88 | Running N1
[32mengine.rs:897[0m	90 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1020[0m	88 | Process signals, depth 1
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1798[0m	89 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1338[0m	90 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	90 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 4
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	90 | 	Updating N3 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	90 | Leaving process signals, 4
[32mengine.rs:1348[0m	90 | Leaving process signals, 3
[32mengine.rs:1348[0m	90 | Leaving process signals, 1
[32mengine.rs:1348[0m	90 | Leaving process signals, 0
[32mlib.rs:251[0m	90 | Running N2
[32mengine.rs:897[0m	90 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	90 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 0
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Output(Running)
[32mengine.rs:1202[0m	90 | 	Updating N2 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	90 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	90 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	90 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 1
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Output(FinishedSuccess)
[32mengine.rs:1182[0m	90 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1183[0m	90 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	90 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	90 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 2
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	90 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1338[0m	90 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	90 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 3
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	90 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	90 | Leaving process signals, 2
[32mengine.rs:1348[0m	90 | Leaving process signals, 1
[32mengine.rs:1348[0m	90 | Leaving process signals, 0
[32mengine.rs:1348[0m	89 | Leaving process signals, 1
[32mengine.rs:1348[0m	87 | Leaving process signals, 3
[32mlib.rs:229[0m	87 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	90 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	90 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	90 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	90 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 1
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	90 | Leaving process signals, 1
[32mengine.rs:1348[0m	90 | Leaving process signals, 0
[32mlib.rs:228[0m	90 | 
[32mlib.rs:229[0m	90 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	90 | removed leaf ephemeral N4
[32mengine.rs:873[0m	90 | removed leaf ephemeral N3
[32mengine.rs:873[0m	90 | removed leaf ephemeral N2
[32mengine.rs:873[0m	90 | removed leaf ephemeral N1
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 0
[32mengine.rs:1348[0m	90 | Leaving process signals, 0
[32mengine.rs:2206[0m	90 | root node 'N0'
[32mengine.rs:2207[0m	90 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	90 | done adding root signals

[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 0
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	90 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	90 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	90 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	90 | 
[32mengine.rs:1020[0m	90 | Process signals, depth 1
[32mengine.rs:1026[0m	90 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	91 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	91 | Leaving process signals, 1
[32mengine.rs:1348[0m	91 | Leaving process signals, 0
[32mlib.rs:251[0m	91 | Running N0
[32mengine.rs:891[0m	91 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	91 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 0
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	91 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	91 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	91 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	91 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 1
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	91 | Leaving process signals, 1
[32mengine.rs:1348[0m	91 | Leaving process signals, 0
[32mlib.rs:228[0m	91 | 
[32mlib.rs:229[0m	91 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	91 | removed leaf ephemeral N4
[32mengine.rs:873[0m	91 | removed leaf ephemeral N3
[32mengine.rs:873[0m	91 | removed leaf ephemeral N1
[32mengine.rs:2091[0m	91 | Input to job N0 changed.
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 0
[32mengine.rs:1348[0m	91 | Leaving process signals, 0
[32mengine.rs:2206[0m	91 | root node 'N0'
[32mengine.rs:2207[0m	91 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	91 | done adding root signals

[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 0
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	91 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	91 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	91 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 1
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	91 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	91 | Leaving process signals, 1
[32mengine.rs:1348[0m	91 | Leaving process signals, 0
[32mlib.rs:251[0m	91 | Running N0
[32mengine.rs:891[0m	91 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	91 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 0
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	91 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	91 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	91 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	91 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 1
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	91 | Leaving process signals, 1
[32mengine.rs:1348[0m	91 | Leaving process signals, 0
[32mlib.rs:228[0m	91 | 
[32mlib.rs:229[0m	91 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	91 | removed leaf ephemeral N4
[32mengine.rs:873[0m	91 | removed leaf ephemeral N3
[32mengine.rs:873[0m	91 | removed leaf ephemeral N2
[32mengine.rs:873[0m	91 | removed leaf ephemeral N1
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 0
[32mengine.rs:1348[0m	91 | Leaving process signals, 0
[32mengine.rs:2206[0m	91 | root node 'N0'
[32mengine.rs:2207[0m	91 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	91 | done adding root signals

[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 0
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	91 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	91 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	91 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 1
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	91 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	91 | Leaving process signals, 1
[32mengine.rs:1348[0m	91 | Leaving process signals, 0
[32mlib.rs:251[0m	91 | Running N0
[32mengine.rs:891[0m	91 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	91 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	91 | 
[32mengine.rs:1020[0m	91 | Process signals, depth 0
[32mengine.rs:1026[0m	91 | 
[32mengine.rs:1027[0m	91 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	91 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	91 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1348[0m	90 | Leaving process signals, 0
[32mengine.rs:1348[0m	90 | Leaving process signals, 2
[32mengine.rs:1348[0m	91 | Leaving process signals, 1
[32mengine.rs:1027[0m	86 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:995[0m	90 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	92 | 
[32mengine.rs:1020[0m	92 | Process signals, depth 0
[32mengine.rs:1026[0m	92 | 
[32mengine.rs:1267[0m	90 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mlib.rs:228[0m	86 | 
[32mlib.rs:251[0m	90 | Running N1
[32mengine.rs:897[0m	92 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mlib.rs:228[0m	91 | 
[32mengine.rs:1348[0m	91 | Leaving process signals, 0
[32mengine.rs:873[0m	90 | removed leaf ephemeral N4
[32mengine.rs:1775[0m	91 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1338[0m	92 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	92 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	92 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N3
[32mengine.rs:1019[0m	92 | 
[32mengine.rs:1020[0m	92 | Process signals, depth 1
[32mengine.rs:1026[0m	92 | 
[32mengine.rs:1027[0m	92 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	92 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	92 | 
[32mengine.rs:1027[0m	92 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	92 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	92 | Leaving process signals, 1
[32mengine.rs:1348[0m	92 | Leaving process signals, 0
[32mlib.rs:251[0m	92 | Running N1
[32mengine.rs:897[0m	92 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	92 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	92 | 
[32mengine.rs:1020[0m	92 | Process signals, depth 0
[32mengine.rs:1026[0m	92 | 
[32mlib.rs:229[0m	92 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1338[0m	91 | New signals after process_signals - adding and processing
[32mengine.rs:995[0m	92 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	92 | 
[32mengine.rs:873[0m	92 | removed leaf ephemeral N0
[32mlib.rs:228[0m	92 | 
[32mlib.rs:229[0m	92 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	92 | removed leaf ephemeral N0
[32mengine.rs:873[0m	92 | removed leaf ephemeral N3
[32mengine.rs:1027[0m	89 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1027[0m	90 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	90 | Leaving process signals, 3
[32mengine.rs:1027[0m	92 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1231[0m	92 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	92 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	92 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	92 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	92 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	92 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	92 | 
[32mengine.rs:1020[0m	92 | Process signals, depth 1
[32mengine.rs:1026[0m	92 | 
[32mengine.rs:1027[0m	92 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	92 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	92 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	92 | 
[32mengine.rs:1027[0m	92 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1274[0m	92 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	92 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	92 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	92 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	92 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	92 | 
[32mengine.rs:1020[0m	92 | Process signals, depth 2
[32mengine.rs:1026[0m	92 | 
[32mengine.rs:1294[0m	92 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1027[0m	92 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:2091[0m	92 | Input to job N4 changed.
[32mengine.rs:1340[0m	92 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	92 | 
[32mengine.rs:1020[0m	92 | Process signals, depth 1
[32mengine.rs:1026[0m	92 | 
[32mengine.rs:1019[0m	92 | 
[32mengine.rs:1020[0m	92 | Process signals, depth 0
[32mengine.rs:1348[0m	92 | Leaving process signals, 0
[32mengine.rs:2213[0m	92 | done adding root signals

[32mengine.rs:1019[0m	92 | 
[32mengine.rs:1020[0m	92 | Process signals, depth 0
[32mengine.rs:1348[0m	92 | Leaving process signals, 0
[32mengine.rs:2096[0m	92 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mlib.rs:229[0m	92 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1020[0m	92 | Process signals, depth 0
[32mengine.rs:2091[0m	92 | Input to job N3 changed.
[32mengine.rs:1027[0m	92 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	93 | Leaving process signals, 1
[32mengine.rs:1348[0m	93 | Leaving process signals, 0
[32mengine.rs:1348[0m	92 | Leaving process signals, 2
[32mengine.rs:1027[0m	92 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	93 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	93 | 
[32mlib.rs:228[0m	92 | 
[32mlib.rs:229[0m	93 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	93 | Input to job N0 changed.
[32mengine.rs:1026[0m	93 | 
[32mengine.rs:1027[0m	93 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1231[0m	93 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	93 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	93 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	93 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	93 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1202[0m	92 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	93 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	93 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	93 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	93 | 
[32mengine.rs:1020[0m	93 | Process signals, depth 1
[32mengine.rs:1026[0m	93 | 
[32mengine.rs:1051[0m	92 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	93 | 
[32mlib.rs:228[0m	93 | 
[32mengine.rs:1298[0m	92 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1340[0m	93 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1027[0m	93 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:2177[0m	93 | ephemerial initial N1 -> any downstreams required: true
[32mengine.rs:2091[0m	93 | Input to job N2 changed.
[32mengine.rs:2091[0m	93 | Input to job N2 changed.
[32mengine.rs:2091[0m	93 | Input to job N1 changed.
[32mengine.rs:1051[0m	92 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1027[0m	93 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	93 | Leaving process signals, 1
[32mengine.rs:1348[0m	93 | Leaving process signals, 0
[32mlib.rs:251[0m	93 | Running N3
[32mengine.rs:891[0m	93 | 	Updating N3 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1026[0m	93 | 
[32mengine.rs:1019[0m	93 | 
[32mengine.rs:1348[0m	93 | Leaving process signals, 2
[32mengine.rs:1348[0m	93 | Leaving process signals, 1
[32mengine.rs:1348[0m	93 | Leaving process signals, 0
[32mengine.rs:1019[0m	93 | 
[32mengine.rs:1020[0m	93 | Process signals, depth 0
[32mengine.rs:1348[0m	93 | Leaving process signals, 0
[32mengine.rs:1182[0m	93 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1027[0m	93 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mlib.rs:229[0m	93 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:971[0m	93 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	93 | 
[32mengine.rs:1020[0m	93 | Process signals, depth 0
[32mengine.rs:1026[0m	93 | 
[32mengine.rs:2104[0m	93 | 	Updating N2 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	93 | 
[32mengine.rs:1020[0m	93 | Process signals, depth 0
[32mengine.rs:1348[0m	93 | Leaving process signals, 3
[32mengine.rs:1348[0m	93 | Leaving process signals, 2
[32mengine.rs:1348[0m	93 | Leaving process signals, 1
[32mengine.rs:1348[0m	93 | Leaving process signals, 0
[32mlib.rs:251[0m	93 | Running N4
[32mengine.rs:897[0m	93 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	93 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N4
[32mengine.rs:1019[0m	93 | 
[32mengine.rs:1020[0m	93 | Process signals, depth 0
[32mengine.rs:1026[0m	93 | 
[32mengine.rs:1027[0m	93 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N4. Current state: Output(Running)
[32mengine.rs:1202[0m	93 | 	Updating N4 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	93 | -> new Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1338[0m	93 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	93 | 	 Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1019[0m	93 | 
[32mengine.rs:1020[0m	93 | Process signals, depth 1
[32mengine.rs:1027[0m	93 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:873[0m	93 | removed leaf ephemeral N2
[32mengine.rs:1027[0m	93 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Always(Running)
[32mengine.rs:1198[0m	93 | 	Updating N3 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	93 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	93 | New signals after process_signals - adding and processing
[32mengine.rs:2206[0m	93 | root node 'N0'
[32mengine.rs:1183[0m	93 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	94 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	94 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	94 | 
[32mengine.rs:1020[0m	94 | Process signals, depth 2
[32mengine.rs:1026[0m	94 | 
[32mengine.rs:1267[0m	93 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:873[0m	93 | removed leaf ephemeral N0
[32mlib.rs:228[0m	93 | 
[32mlib.rs:229[0m	94 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1348[0m	93 | Leaving process signals, 0
[32mengine.rs:1340[0m	94 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	94 | 
[32mengine.rs:1107[0m	93 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:873[0m	93 | removed leaf ephemeral N3
[32mengine.rs:873[0m	94 | removed leaf ephemeral N1
[32mengine.rs:1026[0m	93 | 
[32mengine.rs:1027[0m	94 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N4. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	94 | Leaving process signals, 1
[32mengine.rs:1348[0m	94 | Leaving process signals, 0
[32mengine.rs:2177[0m	94 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:1019[0m	93 | 
[32mengine.rs:873[0m	94 | removed leaf ephemeral N0
[32mengine.rs:2206[0m	94 | root node 'N0'
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:1170[0m	94 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	94 | 
[32mengine.rs:1027[0m	94 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	94 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1338[0m	94 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	94 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	94 | 
[32mengine.rs:1020[0m	94 | Process signals, depth 2
[32mengine.rs:1026[0m	94 | 
[32mengine.rs:1020[0m	94 | Process signals, depth 0
[32mengine.rs:1348[0m	94 | Leaving process signals, 0
[32mengine.rs:2206[0m	94 | root node 'N1'
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	94 | root node 'N2'
[32mengine.rs:1020[0m	93 | Process signals, depth 1
[32mengine.rs:1026[0m	94 | 
[32mengine.rs:1294[0m	94 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mlib.rs:228[0m	94 | 
[32mlib.rs:229[0m	94 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	94 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	94 | Leaving process signals, 2
[32mengine.rs:1348[0m	94 | Leaving process signals, 1
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:1020[0m	94 | Process signals, depth 1
[32mengine.rs:1026[0m	94 | 
[32mengine.rs:1027[0m	94 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	94 | Leaving process signals, 1
[32mengine.rs:1348[0m	94 | Leaving process signals, 0
[32mengine.rs:1338[0m	94 | New signals after process_signals - adding and processing
[32mengine.rs:2091[0m	94 | Input to job N1 changed.
[32mengine.rs:2091[0m	94 | Input to job N3 changed.
[32mengine.rs:2096[0m	94 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	94 | Input to job N2 changed.
[32mengine.rs:2096[0m	94 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	94 | Leaving process signals, 0
[32mengine.rs:2206[0m	94 | root node 'N2'
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	94 | done adding root signals

[32mengine.rs:1019[0m	94 | 
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:1027[0m	94 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mlib.rs:228[0m	94 | 
[32mlib.rs:229[0m	94 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2104[0m	94 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:2091[0m	94 | Input to job N4 changed.
[32mengine.rs:2096[0m	94 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	94 | Input to job N1 changed.
[32mengine.rs:1019[0m	94 | 
[32mengine.rs:1020[0m	94 | Process signals, depth 0
[32mengine.rs:1348[0m	94 | Leaving process signals, 0
[32mengine.rs:2206[0m	94 | root node 'N0'
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	94 | root node 'N1'
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	94 | root node 'N2'
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2091[0m	94 | Input to job N0 changed.
[32mengine.rs:1019[0m	94 | 
[32mengine.rs:1020[0m	94 | Process signals, depth 0
[32mengine.rs:1348[0m	94 | Leaving process signals, 0
[32mengine.rs:2206[0m	94 | root node 'N3'
[32mengine.rs:2207[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N3
[32mengine.rs:2206[0m	94 | root node 'N2'
[32mengine.rs:2207[0m	95 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:1182[0m	94 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	95 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1274[0m	95 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	95 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	95 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	95 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	95 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	95 | 
[32mengine.rs:1020[0m	95 | Process signals, depth 2
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	95 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	95 | Leaving process signals, 2
[32mengine.rs:1348[0m	95 | Leaving process signals, 1
[32mengine.rs:1348[0m	95 | Leaving process signals, 0
[32mlib.rs:251[0m	95 | Running N3
[32mengine.rs:903[0m	95 | 	Updating N3 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:995[0m	95 | -> new Signal { kind: JobFinishedFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	95 | 
[32mengine.rs:1020[0m	95 | Process signals, depth 0
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 3 } for N3. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	95 | 	Updating N3 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1248[0m	95 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1251[0m	95 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	95 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	95 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	95 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	95 | 
[32mengine.rs:1020[0m	95 | Process signals, depth 1
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	95 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	95 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	95 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	95 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	95 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	95 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	95 | 
[32mengine.rs:1020[0m	95 | Process signals, depth 2
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	95 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	95 | Leaving process signals, 2
[32mengine.rs:1348[0m	95 | Leaving process signals, 1
[32mengine.rs:1348[0m	95 | Leaving process signals, 0
[32mengine.rs:2141[0m	94 | output was missing N3
[32mengine.rs:2142[0m	95 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	95 | Input to job N2 changed.
[32mengine.rs:2096[0m	95 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	95 | 
[32mengine.rs:1020[0m	95 | Process signals, depth 0
[32mengine.rs:1348[0m	95 | Leaving process signals, 0
[32mengine.rs:2206[0m	95 | root node 'N0'
[32mengine.rs:1340[0m	94 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	94 | 
[32mengine.rs:2213[0m	94 | done adding root signals

[32mengine.rs:1019[0m	95 | 
[32mengine.rs:1020[0m	95 | Process signals, depth 0
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1020[0m	94 | Process signals, depth 0
[32mengine.rs:1027[0m	94 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1348[0m	95 | Leaving process signals, 2
[32mengine.rs:1348[0m	95 | Leaving process signals, 1
[32mengine.rs:1348[0m	95 | Leaving process signals, 0
[32mlib.rs:251[0m	95 | Running N3
[32mengine.rs:897[0m	95 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	95 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N3
[32mengine.rs:1019[0m	95 | 
[32mengine.rs:1020[0m	95 | Process signals, depth 0
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1681[0m	95 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	95 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	95 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	95 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	95 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	95 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	95 | 
[32mengine.rs:1020[0m	95 | Process signals, depth 1
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	95 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	95 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	95 | Leaving process signals, 1
[32mengine.rs:1348[0m	95 | Leaving process signals, 0
[32mlib.rs:251[0m	95 | Running N0
[32mengine.rs:891[0m	96 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	95 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N3. Current state: Output(Running)
[32mengine.rs:1026[0m	95 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	96 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1340[0m	95 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	96 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1340[0m	96 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1020[0m	96 | Process signals, depth 2
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	96 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1182[0m	96 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	96 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	96 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1338[0m	96 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	96 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	96 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1020[0m	96 | Process signals, depth 3
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	96 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	96 | Leaving process signals, 3
[32mengine.rs:1348[0m	96 | Leaving process signals, 2
[32mengine.rs:1348[0m	96 | Leaving process signals, 1
[32mengine.rs:1348[0m	96 | Leaving process signals, 0
[32mlib.rs:251[0m	96 | Running N0
[32mengine.rs:897[0m	96 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1020[0m	95 | Process signals, depth 0
[32mlib.rs:228[0m	95 | 
[32mlib.rs:229[0m	96 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2206[0m	94 | root node 'N1'
[32mengine.rs:2207[0m	96 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:971[0m	96 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1020[0m	96 | Process signals, depth 0
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	96 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	96 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	96 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	96 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1020[0m	96 | Process signals, depth 1
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	96 | Leaving process signals, 1
[32mengine.rs:1348[0m	96 | Leaving process signals, 0
[32mlib.rs:251[0m	96 | Running N2
[32mengine.rs:891[0m	96 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	96 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1631[0m	96 | 		 not_done: 0, invalidated: false
[32mengine.rs:1348[0m	96 | Leaving process signals, 0
[32mlib.rs:251[0m	94 | Running N0
[32mengine.rs:2141[0m	96 | output was missing N4
[32mengine.rs:897[0m	96 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	96 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1020[0m	96 | Process signals, depth 0
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1231[0m	96 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	96 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	96 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	96 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1020[0m	96 | Process signals, depth 1
[32mengine.rs:1026[0m	96 | 
[32mengine.rs:1027[0m	96 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	96 | Leaving process signals, 1
[32mengine.rs:1348[0m	96 | Leaving process signals, 0
[32mlib.rs:251[0m	96 | Running N2
[32mengine.rs:891[0m	96 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	96 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N2
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1716[0m	96 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:2091[0m	94 | Input to job N0 changed.
[32mengine.rs:2142[0m	96 | 	Updating N4 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2206[0m	96 | root node 'N2'
[32mengine.rs:1202[0m	96 | 	Updating N3 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	96 | -> new Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1338[0m	97 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	97 | 	 Signal { kind: JobDone, node_idx: 1 } N3
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 1
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N3. Current state: Output(FinishedSuccess)
[32mengine.rs:1182[0m	97 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1183[0m	97 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	97 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	97 | 	 Signal { kind: ConsiderJob, node_idx: 2 } N4
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 2
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	97 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1338[0m	97 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	97 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N4
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 3
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	97 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	97 | Leaving process signals, 3
[32mengine.rs:1348[0m	97 | Leaving process signals, 2
[32mengine.rs:1348[0m	97 | Leaving process signals, 1
[32mengine.rs:1348[0m	97 | Leaving process signals, 0
[32mlib.rs:251[0m	97 | Running N4
[32mengine.rs:891[0m	97 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	97 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N4
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 0
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	97 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	97 | -> new Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1338[0m	97 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	97 | 	 Signal { kind: JobDone, node_idx: 2 } N4
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 1
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	97 | Leaving process signals, 1
[32mengine.rs:1348[0m	97 | Leaving process signals, 0
[32mlib.rs:228[0m	97 | 
[32mlib.rs:229[0m	97 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2091[0m	97 | Input to job N0 changed.
[32mengine.rs:2091[0m	97 | Input to job N4 changed.
[32mengine.rs:2091[0m	97 | Input to job N2 changed.
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 0
[32mengine.rs:1348[0m	97 | Leaving process signals, 0
[32mengine.rs:2206[0m	97 | root node 'N0'
[32mengine.rs:2207[0m	97 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	97 | root node 'N1'
[32mengine.rs:2207[0m	97 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	97 | root node 'N2'
[32mengine.rs:2207[0m	97 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:995[0m	96 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1020[0m	96 | Process signals, depth 0
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	97 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1019[0m	96 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 0
[32mengine.rs:1348[0m	97 | Leaving process signals, 0
[32mengine.rs:2213[0m	94 | done adding root signals

[32mengine.rs:2213[0m	95 | done adding root signals

[32mengine.rs:2207[0m	95 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	97 | root node 'N1'
[32mengine.rs:2207[0m	97 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	97 | root node 'N2'
[32mengine.rs:2207[0m	97 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	97 | done adding root signals

[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 0
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	97 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	97 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	97 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	97 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	96 | Input to job N3 changed.
[32mengine.rs:2207[0m	96 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2206[0m	97 | root node 'N0'
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 0
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	96 | Process signals, depth 0
[32mengine.rs:1026[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	97 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	97 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	97 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	97 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1020[0m	97 | Process signals, depth 1
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	98 | Leaving process signals, 1
[32mengine.rs:1348[0m	98 | Leaving process signals, 0
[32mengine.rs:1733[0m	96 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mlib.rs:228[0m	98 | 
[32mlib.rs:229[0m	98 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	98 | removed leaf ephemeral N4
[32mengine.rs:2213[0m	97 | done adding root signals

[32mengine.rs:2207[0m	97 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	98 | done adding root signals

[32mengine.rs:1019[0m	97 | 
[32mengine.rs:1027[0m	97 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1020[0m	97 | Process signals, depth 0
[32mengine.rs:2206[0m	96 | root node 'N1'
[32mengine.rs:2207[0m	98 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	98 | done adding root signals

[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1020[0m	98 | Process signals, depth 0
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1798[0m	98 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	98 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1020[0m	98 | Process signals, depth 1
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1221[0m	97 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	98 | New signals after process_signals - adding and processing
[32mengine.rs:1775[0m	97 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	98 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1020[0m	98 | Process signals, depth 0
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	98 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	98 | New signals after process_signals - adding and processing
[32mengine.rs:1338[0m	98 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:2104[0m	97 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1020[0m	98 | Process signals, depth 0
[32mengine.rs:1348[0m	98 | Leaving process signals, 0
[32mengine.rs:2206[0m	98 | root node 'N3'
[32mengine.rs:2207[0m	98 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N3
[32mengine.rs:2213[0m	98 | done adding root signals

[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1020[0m	98 | Process signals, depth 0
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1020[0m	98 | Process signals, depth 1
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	98 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1020[0m	98 | Process signals, depth 1
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1020[0m	98 | Process signals, depth 0
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	98 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	98 | -> new Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1733[0m	98 | -> Not adding ConsiderJob for N0 - already had Signal { kind: JobFinishedSkip, node_idx: 0 }
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1019[0m	98 | 
[32mengine.rs:1798[0m	98 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N3
[32mengine.rs:1338[0m	98 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	98 | Leaving process signals, 1
[32mengine.rs:1348[0m	98 | Leaving process signals, 0
[32mengine.rs:1681[0m	98 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	98 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	98 | Leaving process signals, 1
[32mengine.rs:1348[0m	98 | Leaving process signals, 0
[32mlib.rs:251[0m	98 | Running N1
[32mengine.rs:903[0m	98 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:995[0m	98 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	98 | 
[32mengine.rs:2206[0m	97 | root node 'N3'
[32mengine.rs:1020[0m	98 | Process signals, depth 0
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	99 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1027[0m	98 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1020[0m	98 | Process signals, depth 1
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N3
[32mengine.rs:1340[0m	98 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	99 | 
[32mengine.rs:1020[0m	99 | Process signals, depth 1
[32mengine.rs:2207[0m	98 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1026[0m	98 | 
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	99 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	99 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	99 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N3
[32mengine.rs:1340[0m	99 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	99 | 
[32mengine.rs:1020[0m	99 | Process signals, depth 1
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	99 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	99 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	99 | Leaving process signals, 1
[32mengine.rs:1348[0m	99 | Leaving process signals, 0
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1019[0m	99 | 
[32mengine.rs:1020[0m	99 | Process signals, depth 1
[32mengine.rs:1026[0m	99 | 
[32mlib.rs:228[0m	98 | 
[32mlib.rs:229[0m	99 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1040[0m	98 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1631[0m	99 | 		 not_done: 0, invalidated: false
[32mengine.rs:1874[0m	99 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Validated))
[32mengine.rs:1881[0m	99 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N3. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	99 | 	Updating N3 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:2091[0m	99 | Input to job N1 changed.
[32mengine.rs:1631[0m	99 | 		 not_done: 0, invalidated: false
[32mengine.rs:1231[0m	99 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:2091[0m	98 | Input to job N1 changed.
[32mlib.rs:251[0m	99 | Running N3
[32mengine.rs:897[0m	99 | 	Updating N3 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1020[0m	98 | Process signals, depth 0
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	99 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1248[0m	99 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	99 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	99 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	99 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	99 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	99 | 
[32mengine.rs:1020[0m	99 | Process signals, depth 1
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	99 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	99 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1019[0m	99 | 
[32mengine.rs:1020[0m	99 | Process signals, depth 0
[32mengine.rs:1348[0m	99 | Leaving process signals, 0
[32mengine.rs:2206[0m	99 | root node 'N0'
[32mengine.rs:2207[0m	99 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	99 | root node 'N1'
[32mengine.rs:2207[0m	99 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	99 | root node 'N2'
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	99 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	99 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1248[0m	99 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	99 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	99 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	99 | 
[32mengine.rs:1020[0m	99 | Process signals, depth 1
[32mengine.rs:1026[0m	99 | 
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	99 | Leaving process signals, 1
[32mengine.rs:1348[0m	99 | Leaving process signals, 0
[32mengine.rs:1027[0m	99 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1281[0m	99 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(FinishedUpstreamFailure)
[32mlib.rs:228[0m	99 | 
[32mlib.rs:229[0m	99 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:2096[0m	99 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	100 | Input to job N2 changed.
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 0
[32mengine.rs:1348[0m	100 | Leaving process signals, 0
[32mengine.rs:2206[0m	100 | root node 'N1'
[32mengine.rs:2207[0m	100 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	100 | root node 'N2'
[32mengine.rs:1294[0m	99 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1298[0m	100 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	100 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	100 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	100 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	100 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 2
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	100 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1182[0m	100 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	100 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	100 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	100 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	100 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	100 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	100 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 3
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	100 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	100 | Leaving process signals, 3
[32mengine.rs:1348[0m	100 | Leaving process signals, 2
[32mengine.rs:1348[0m	100 | Leaving process signals, 1
[32mengine.rs:1348[0m	100 | Leaving process signals, 0
[32mengine.rs:2207[0m	100 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	100 | done adding root signals

[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 0
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	100 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	100 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1338[0m	100 | New signals after process_signals - adding and processing
[32mlib.rs:228[0m	100 | 
[32mlib.rs:229[0m	100 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1107[0m	99 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:2091[0m	100 | Input to job N1 changed.
[32mengine.rs:2091[0m	100 | Input to job N4 changed.
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 0
[32mengine.rs:1348[0m	100 | Leaving process signals, 0
[32mengine.rs:2206[0m	100 | root node 'N1'
[32mengine.rs:2207[0m	100 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N1
[32mengine.rs:2206[0m	100 | root node 'N4'
[32mengine.rs:2207[0m	100 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N4
[32mengine.rs:2213[0m	100 | done adding root signals

[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 0
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:971[0m	99 | -> new Signal { kind: JobFinishedSuccess, node_idx: 2 } N3
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 0
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 2 } for N3. Current state: Output(Running)
[32mengine.rs:1202[0m	100 | 	Updating N3 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	100 | -> new Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1338[0m	100 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	100 | 	 Signal { kind: JobDone, node_idx: 2 } N3
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 1
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N3. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	100 | Leaving process signals, 1
[32mengine.rs:1348[0m	100 | Leaving process signals, 0
[32mlib.rs:251[0m	100 | Running N2
[32mengine.rs:897[0m	100 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:1340[0m	100 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	100 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 1
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	100 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	100 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	100 | Leaving process signals, 1
[32mengine.rs:1348[0m	100 | Leaving process signals, 0
[32mlib.rs:251[0m	100 | Running N1
[32mengine.rs:897[0m	100 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	100 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 0
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Output(Running)
[32mengine.rs:1202[0m	100 | 	Updating N1 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	100 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	100 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	100 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	100 | 
[32mengine.rs:1020[0m	100 | Process signals, depth 1
[32mengine.rs:1026[0m	100 | 
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	100 | Leaving process signals, 1
[32mengine.rs:1348[0m	100 | Leaving process signals, 0
[32mlib.rs:251[0m	101 | Running N2
[32mengine.rs:891[0m	101 | 	Updating N2 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	101 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 0
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Always(Running)
[32mengine.rs:1198[0m	101 | 	Updating N2 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	101 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	101 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	101 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 1
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Always(FinishedSuccess)
[32mengine.rs:971[0m	100 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N2
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 0
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N2. Current state: Output(Running)
[32mengine.rs:1202[0m	101 | 	Updating N2 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	101 | -> new Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1338[0m	101 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	101 | 	 Signal { kind: JobDone, node_idx: 1 } N2
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 1
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N2. Current state: Output(FinishedSuccess)
[32mengine.rs:1348[0m	101 | Leaving process signals, 1
[32mengine.rs:1348[0m	101 | Leaving process signals, 0
[32mengine.rs:1040[0m	99 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1027[0m	100 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	101 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	101 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1338[0m	101 | New signals after process_signals - adding and processing
[32mengine.rs:1348[0m	101 | Leaving process signals, 1
[32mengine.rs:1348[0m	101 | Leaving process signals, 0
[32mengine.rs:873[0m	100 | removed leaf ephemeral N0
[32mengine.rs:2091[0m	101 | Input to job N4 changed.
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 0
[32mengine.rs:1348[0m	101 | Leaving process signals, 0
[32mengine.rs:2206[0m	101 | root node 'N4'
[32mengine.rs:2207[0m	101 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N4
[32mengine.rs:2213[0m	101 | done adding root signals

[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 0
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	101 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1338[0m	101 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	101 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 1
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	101 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1340[0m	101 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N1
[32mengine.rs:1340[0m	101 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 1
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	101 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	101 | 	Updating N4 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	101 | Leaving process signals, 1
[32mengine.rs:1348[0m	101 | Leaving process signals, 0
[32mlib.rs:251[0m	101 | Running N1
[32mengine.rs:891[0m	101 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	101 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N1
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 0
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	101 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	101 | -> new Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1338[0m	101 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	101 | 	 Signal { kind: JobDone, node_idx: 0 } N1
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 1
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	101 | Leaving process signals, 1
[32mengine.rs:1348[0m	101 | Leaving process signals, 0
[32mlib.rs:251[0m	101 | Running N4
[32mengine.rs:891[0m	101 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	101 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N4
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 0
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	101 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	101 | -> new Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1338[0m	101 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	101 | 	 Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 1
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	101 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	101 | Leaving process signals, 1
[32mengine.rs:1348[0m	101 | Leaving process signals, 0
[32mlib.rs:228[0m	101 | 
[32mlib.rs:229[0m	101 | GOGOGO ----------------------------------------------------------------
[32mlib.rs:228[0m	101 | 
[32mlib.rs:229[0m	101 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1798[0m	99 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:2207[0m	99 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	99 | done adding root signals

[32mengine.rs:1019[0m	101 | 
[32mengine.rs:1020[0m	101 | Process signals, depth 0
[32mengine.rs:1026[0m	101 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mlib.rs:228[0m	101 | 
[32mlib.rs:229[0m	102 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	101 | removed leaf ephemeral N4
[32mengine.rs:873[0m	102 | removed leaf ephemeral N3
[32mengine.rs:873[0m	101 | removed leaf ephemeral N4
[32mengine.rs:873[0m	102 | removed leaf ephemeral N0
[32mengine.rs:2213[0m	101 | done adding root signals

[32mengine.rs:1348[0m	99 | Leaving process signals, 1
[32mengine.rs:1348[0m	102 | Leaving process signals, 0
[32mlib.rs:251[0m	102 | Running N3
[32mengine.rs:1170[0m	99 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1170[0m	100 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	102 | New signals after process_signals - adding and processing
[32mengine.rs:1348[0m	101 | Leaving process signals, 1
[32mengine.rs:1348[0m	102 | Leaving process signals, 0
[32mengine.rs:1338[0m	101 | New signals after process_signals - adding and processing
[32mengine.rs:2091[0m	102 | Input to job N3 changed.
[32mengine.rs:2096[0m	102 | 	Updating N3 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	102 | Input to job N1 changed.
[32mengine.rs:2096[0m	102 | 	Updating N1 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 0
[32mengine.rs:1348[0m	102 | Leaving process signals, 0
[32mengine.rs:2206[0m	102 | root node 'N1'
[32mengine.rs:2207[0m	102 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	102 | root node 'N2'
[32mengine.rs:2207[0m	102 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	102 | done adding root signals

[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 0
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	102 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	102 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	102 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1733[0m	102 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1338[0m	102 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	102 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	102 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 1
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	102 | 	Updating N1 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	102 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	102 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	102 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	102 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 2
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	102 | Leaving process signals, 2
[32mengine.rs:1348[0m	102 | Leaving process signals, 1
[32mengine.rs:1348[0m	102 | Leaving process signals, 0
[32mlib.rs:251[0m	102 | Running N1
[32mengine.rs:897[0m	102 | 	Updating N1 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	102 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 0
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Output(Running)
[32mengine.rs:1231[0m	102 | 	Updating N1 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	102 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	102 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	102 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	102 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	102 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 1
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedFailure)
[32mengine.rs:1182[0m	102 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	102 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1274[0m	102 | 	Updating N3 from Output(NotReady(Invalidated)) to Output(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	102 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1338[0m	102 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	102 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	102 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 2
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	102 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Output(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	102 | Leaving process signals, 2
[32mengine.rs:1348[0m	102 | Leaving process signals, 1
[32mengine.rs:1348[0m	102 | Leaving process signals, 0
[32mengine.rs:1716[0m	99 | -> new Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1348[0m	101 | Leaving process signals, 1
[32mengine.rs:1348[0m	102 | Leaving process signals, 0
[32mlib.rs:251[0m	102 | Running N4
[32mengine.rs:891[0m	102 | 	Updating N4 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:2091[0m	102 | Input to job N0 changed.
[32mengine.rs:2096[0m	102 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:2091[0m	102 | Input to job N4 changed.
[32mengine.rs:2091[0m	102 | Input to job N2 changed.
[32mengine.rs:2096[0m	102 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 0
[32mengine.rs:1348[0m	102 | Leaving process signals, 0
[32mengine.rs:2206[0m	102 | root node 'N0'
[32mengine.rs:2207[0m	102 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	102 | root node 'N1'
[32mengine.rs:2207[0m	102 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	102 | root node 'N2'
[32mengine.rs:2207[0m	102 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	102 | done adding root signals

[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	102 | Process signals, depth 0
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	102 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	102 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	103 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	103 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	103 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	103 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	103 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	103 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 1
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	103 | 	Updating N0 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	103 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	103 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	103 | Leaving process signals, 1
[32mengine.rs:1348[0m	103 | Leaving process signals, 0
[32mlib.rs:251[0m	103 | Running N0
[32mengine.rs:897[0m	103 | 	Updating N0 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	103 | -> new Signal { kind: JobFinishedFailure, node_idx: 0 } N0
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 0
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 0 } for N0. Current state: Output(Running)
[32mengine.rs:1231[0m	103 | 	Updating N0 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1248[0m	103 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	103 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	103 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 1
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedFailure)
[32mengine.rs:1348[0m	103 | Leaving process signals, 1
[32mengine.rs:1348[0m	103 | Leaving process signals, 0
[32mlib.rs:251[0m	103 | Running N1
[32mengine.rs:891[0m	103 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1733[0m	102 | -> Not adding ConsiderJob for N2 - already had Signal { kind: JobFinishedSkip, node_idx: 2 }
[32mengine.rs:1338[0m	103 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	103 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	103 | 	 Signal { kind: JobFinishedSkip, node_idx: 2 } N2
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 1
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	103 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	103 | 
[32mlib.rs:228[0m	102 | 
[32mlib.rs:229[0m	103 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:903[0m	102 | 	Updating N3 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:1681[0m	102 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:971[0m	102 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N4
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 0
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N4. Current state: Always(Running)
[32mengine.rs:1198[0m	103 | 	Updating N4 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	103 | -> new Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1338[0m	103 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	103 | 	 Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 1
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N4. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	103 | Leaving process signals, 1
[32mengine.rs:1348[0m	103 | Leaving process signals, 0
[32mlib.rs:251[0m	102 | Running N0
[32mengine.rs:1340[0m	102 | 	 Signal { kind: JobFinishedSkip, node_idx: 0 } N0
[32mengine.rs:1019[0m	102 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 0
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:873[0m	103 | removed leaf ephemeral N0
[32mengine.rs:971[0m	103 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N3
[32mengine.rs:1027[0m	102 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	103 | 	Updating N2 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1340[0m	102 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 2
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1340[0m	103 | 	 Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:1340[0m	103 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 1
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 0 } for N0. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	103 | 	Updating N0 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1170[0m	103 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:2091[0m	102 | Input to job N0 changed.
[32mlib.rs:228[0m	103 | 
[32mlib.rs:229[0m	103 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1182[0m	103 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 2 } for N2. Current state: Output(NotReady(Unknown))
[32mengine.rs:1107[0m	103 | 	Updating N2 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:873[0m	103 | removed leaf ephemeral N4
[32mengine.rs:1019[0m	103 | 
[32mengine.rs:1020[0m	103 | Process signals, depth 0
[32mengine.rs:1026[0m	103 | 
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N3. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1206[0m	104 | 	Updating N3 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1221[0m	104 | -> new Signal { kind: JobDone, node_idx: 0 } N3
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	104 | 	 Signal { kind: JobDone, node_idx: 0 } N3
[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 1
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N3. Current state: Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1182[0m	104 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N4
[32mengine.rs:1183[0m	104 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	104 | 	 Signal { kind: ConsiderJob, node_idx: 1 } N4
[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 2
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1170[0m	103 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:2091[0m	103 | Input to job N2 changed.
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	104 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	104 | -> new Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1733[0m	104 | -> Not adding ConsiderJob for N1 - already had Signal { kind: JobFinishedSkip, node_idx: 1 }
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:873[0m	103 | removed leaf ephemeral N2
[32mengine.rs:873[0m	104 | removed leaf ephemeral N0
[32mengine.rs:971[0m	103 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 0
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:2096[0m	104 | 	Updating N2 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 0
[32mengine.rs:1348[0m	104 | Leaving process signals, 0
[32mengine.rs:2206[0m	104 | root node 'N2'
[32mengine.rs:2207[0m	104 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N2
[32mengine.rs:2213[0m	104 | done adding root signals

[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 0
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1198[0m	104 | 	Updating N1 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	104 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	104 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 1
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	104 | Leaving process signals, 1
[32mengine.rs:1348[0m	104 | Leaving process signals, 0
[32mlib.rs:251[0m	104 | Running N2
[32mengine.rs:897[0m	104 | 	Updating N2 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:995[0m	104 | -> new Signal { kind: JobFinishedFailure, node_idx: 2 } N2
[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 0
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 2 } for N2. Current state: Output(Running)
[32mengine.rs:2091[0m	104 | Input to job N4 changed.
[32mengine.rs:1775[0m	104 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1681[0m	104 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	104 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	104 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	104 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	104 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1340[0m	104 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 1
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1027[0m	103 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Validated))
[32mengine.rs:1810[0m	104 | 	Updating N1 from Ephemeral(NotReady(Validated)) to Ephemeral(ReadyButDelayed)
[32mengine.rs:1816[0m	104 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	104 | 	Updating N2 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1183[0m	103 | reconsidering lead to no update, all current gen
[32mengine.rs:2177[0m	104 | ephemerial initial N3 -> any downstreams required: true
[32mengine.rs:2091[0m	104 | Input to job N1 changed.
[32mengine.rs:2104[0m	104 | 	Updating N1 from Ephemeral(NotReady(Unknown)) to Ephemeral(NotReady(Invalidated))
[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 0
[32mengine.rs:1348[0m	104 | Leaving process signals, 0
[32mengine.rs:2206[0m	104 | root node 'N1'
[32mengine.rs:2207[0m	104 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2213[0m	104 | done adding root signals

[32mengine.rs:1019[0m	104 | 
[32mengine.rs:1020[0m	104 | Process signals, depth 0
[32mengine.rs:1026[0m	104 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1798[0m	104 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	104 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	105 | Process signals, depth 1
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1040[0m	104 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(NotReady(Invalidated))
[32mengine.rs:1063[0m	105 | 	Updating N1 from Ephemeral(NotReady(Invalidated)) to Ephemeral(ReadyToRun(Invalidated))
[32mengine.rs:1348[0m	105 | Leaving process signals, 1
[32mengine.rs:1348[0m	105 | Leaving process signals, 0
[32mlib.rs:251[0m	105 | Running N1
[32mengine.rs:903[0m	105 | 	Updating N1 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:995[0m	105 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	105 | Process signals, depth 0
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Ephemeral(Running(Invalidated))
[32mengine.rs:1235[0m	105 | 	Updating N1 from Ephemeral(Running(Invalidated)) to Ephemeral(FinishedFailure)
[32mengine.rs:1248[0m	105 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	105 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	105 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	105 | Process signals, depth 1
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedFailure)
[32mengine.rs:1182[0m	105 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	105 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Ephemeral(NotReady(Unknown))
[32mengine.rs:1281[0m	105 | 	Updating N3 from Ephemeral(NotReady(Unknown)) to Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	105 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1298[0m	105 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	105 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	105 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	105 | Process signals, depth 2
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	105 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Ephemeral(FinishedUpstreamFailure)
[32mengine.rs:1182[0m	105 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	105 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 4 } for N4. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	105 | 	Updating N4 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	105 | -> new Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1338[0m	105 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	105 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobDone, node_idx: 4 } N4
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	105 | Process signals, depth 3
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	105 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobDone, node_idx: 4 } for N4. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	105 | Leaving process signals, 3
[32mengine.rs:1348[0m	105 | Leaving process signals, 2
[32mengine.rs:1348[0m	105 | Leaving process signals, 1
[32mengine.rs:1348[0m	105 | Leaving process signals, 0
[32mengine.rs:2096[0m	103 | 	Updating N0 from Output(NotReady(Unknown)) to Output(NotReady(Invalidated))
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	105 | 	Updating N1 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobReadyToRun, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	105 | 	Updating N2 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N4
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	105 | Process signals, depth 3
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1051[0m	105 | 	Updating N4 from Output(NotReady(Invalidated)) to Output(ReadyToRun)
[32mengine.rs:1348[0m	105 | Leaving process signals, 3
[32mengine.rs:1348[0m	105 | Leaving process signals, 2
[32mengine.rs:1348[0m	105 | Leaving process signals, 1
[32mengine.rs:1348[0m	105 | Leaving process signals, 0
[32mlib.rs:251[0m	105 | Running N4
[32mengine.rs:897[0m	105 | 	Updating N4 from Output(ReadyToRun) to Output(Running)
[32mengine.rs:971[0m	105 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N4
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	105 | Process signals, depth 0
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N4. Current state: Output(Running)
[32mengine.rs:1202[0m	105 | 	Updating N4 from Output(Running) to Output(FinishedSuccess)
[32mengine.rs:1221[0m	105 | -> new Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1338[0m	105 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobDone, node_idx: 1 } N4
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	105 | Process signals, depth 1
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N4. Current state: Output(FinishedSuccess)
[32mengine.rs:1340[0m	104 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1338[0m	103 | New signals after process_signals - adding and processing
[32mlib.rs:228[0m	105 | 
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:891[0m	103 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: ConsiderJob, node_idx: 2 } for N2. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	105 | -> new Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1026[0m	105 | 
[32mengine.rs:1027[0m	105 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Output(NotReady(Unknown))
[32mengine.rs:1631[0m	105 | 		 not_done: 0, invalidated: false
[32mengine.rs:1716[0m	105 | -> new Signal { kind: JobFinishedSkip, node_idx: 3 } N3
[32mengine.rs:1733[0m	105 | -> Not adding ConsiderJob for N3 - already had Signal { kind: JobFinishedSkip, node_idx: 3 }
[32mengine.rs:1338[0m	105 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobFinishedSkip, node_idx: 1 } N1
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobReadyToRun, node_idx: 2 } N2
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobFinishedSkip, node_idx: 3 } N3
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 1
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	106 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobFinishedSkip, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1340[0m	105 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 2
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1340[0m	104 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1340[0m	106 | 	 Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 2
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Output(FinishedSkipped)
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Ephemeral(ReadyButDelayed)
[32mengine.rs:1359[0m	106 | downstream required N4
[32mengine.rs:1850[0m	106 | 	A downstream was required
[32mengine.rs:1852[0m	106 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1338[0m	106 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobReadyToRun, node_idx: 1 } N1
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 3
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobReadyToRun, node_idx: 1 } for N1. Current state: Ephemeral(ReadyButDelayed)
[32mengine.rs:1074[0m	106 | 	Updating N1 from Ephemeral(ReadyButDelayed) to Ephemeral(ReadyToRun(Validated))
[32mengine.rs:1348[0m	106 | Leaving process signals, 3
[32mengine.rs:1348[0m	106 | Leaving process signals, 2
[32mengine.rs:1348[0m	106 | Leaving process signals, 1
[32mengine.rs:1020[0m	105 | Process signals, depth 0
[32mengine.rs:971[0m	105 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 0
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	106 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	106 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	106 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 1
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	106 | Leaving process signals, 1
[32mengine.rs:1348[0m	106 | Leaving process signals, 0
[32mengine.rs:1348[0m	105 | Leaving process signals, 1
[32mengine.rs:1348[0m	106 | Leaving process signals, 0
[32mlib.rs:251[0m	106 | Running N1
[32mengine.rs:891[0m	106 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	106 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 0
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Output(FinishedSkipped)
[32mengine.rs:1231[0m	104 | 	Updating N2 from Output(Running) to Output(FinishedFailure)
[32mengine.rs:1338[0m	104 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	106 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 3
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	106 | -> new Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:1348[0m	106 | Leaving process signals, 0
[32mengine.rs:1348[0m	106 | Leaving process signals, 0
[32mengine.rs:2206[0m	106 | root node 'N0'
[32mengine.rs:2207[0m	106 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2206[0m	106 | root node 'N1'
[32mengine.rs:2207[0m	106 | -> new Signal { kind: ConsiderJob, node_idx: 1 } N1
[32mengine.rs:2206[0m	106 | root node 'N2'
[32mengine.rs:2207[0m	106 | -> new Signal { kind: ConsiderJob, node_idx: 2 } N2
[32mengine.rs:2213[0m	106 | done adding root signals

[32mengine.rs:1019[0m	106 | 
[32mlib.rs:229[0m	105 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1338[0m	106 | New signals after process_signals - adding and processing
[32mlib.rs:251[0m	106 | Running N1
[32mengine.rs:1227[0m	106 | 	Updating N1 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1182[0m	106 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1248[0m	106 | -> new Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1251[0m	106 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1251[0m	106 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1338[0m	106 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobDone, node_idx: 2 } N2
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mengine.rs:1019[0m	106 | 
[32mengine.rs:1020[0m	106 | Process signals, depth 1
[32mengine.rs:1026[0m	106 | 
[32mengine.rs:1248[0m	106 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1183[0m	106 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	107 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	107 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	107 | 
[32mengine.rs:1020[0m	107 | Process signals, depth 3
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Unknown))
[32mengine.rs:1558[0m	107 | 			 had history - edge not invalidated
[32mengine.rs:1340[0m	106 | 	 Signal { kind: JobReadyToRun, node_idx: 3 } N3
[32mengine.rs:903[0m	106 | 	Updating N1 from Ephemeral(ReadyToRun(Validated)) to Ephemeral(Running(Validated))
[32mengine.rs:1027[0m	106 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedFailure)
[32mengine.rs:1251[0m	107 | -> new Signal { kind: JobUpstreamFailure, node_idx: 4 } N4
[32mlib.rs:228[0m	106 | 
[32mengine.rs:1027[0m	104 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N2. Current state: Output(NotReady(Invalidated))
[32mengine.rs:2032[0m	105 | Job ready for cleanup NodeInfo { job_id: "N3", state: Ephemeral(FinishedSuccessNotReadyForCleanup), history_output: Some("history_N3"), last_considered_in_gen: 0 }
[32mengine.rs:1019[0m	105 | 
[32mengine.rs:1020[0m	107 | Process signals, depth 2
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: JobDone, node_idx: 2 } for N2. Current state: Output(FinishedSkipped)
[32mengine.rs:1348[0m	107 | Leaving process signals, 2
[32mengine.rs:1348[0m	107 | Leaving process signals, 1
[32mengine.rs:1348[0m	107 | Leaving process signals, 0
[32mlib.rs:251[0m	107 | Running N1
[32mengine.rs:891[0m	107 | 	Updating N1 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:995[0m	107 | -> new Signal { kind: JobFinishedFailure, node_idx: 1 } N1
[32mengine.rs:1019[0m	107 | 
[32mengine.rs:1020[0m	107 | Process signals, depth 0
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: JobFinishedFailure, node_idx: 1 } for N1. Current state: Always(Running)
[32mengine.rs:1227[0m	107 | 	Updating N1 from Always(Running) to Always(FinishedFailure)
[32mengine.rs:1248[0m	107 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1251[0m	107 | -> new Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1338[0m	107 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	107 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1340[0m	107 | 	 Signal { kind: JobUpstreamFailure, node_idx: 3 } N3
[32mengine.rs:1019[0m	107 | 
[32mengine.rs:1020[0m	107 | Process signals, depth 1
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Always(FinishedFailure)
[32mengine.rs:1182[0m	107 | -> new Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1183[0m	107 | reconsidering lead to no update, all current gen
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: JobUpstreamFailure, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1267[0m	107 | 	Updating N3 from Always(Undetermined) to Always(FinishedUpstreamFailure)
[32mengine.rs:1294[0m	107 | -> new Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:873[0m	106 | removed leaf ephemeral N0
[32mengine.rs:1602[0m	107 | 		Edge not invalidated N1(1)->N4(4)
[32mengine.rs:1019[0m	107 | 
[32mengine.rs:971[0m	107 | -> new Signal { kind: JobFinishedSuccess, node_idx: 1 } N1
[32mengine.rs:1019[0m	107 | 
[32mengine.rs:1020[0m	107 | Process signals, depth 0
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 1 } for N1. Current state: Ephemeral(Running(Validated))
[32mengine.rs:2033[0m	107 | 	Updating N3 from Ephemeral(FinishedSuccessNotReadyForCleanup) to Ephemeral(FinishedSuccessReadyForCleanup)
[32mengine.rs:1107[0m	106 | 	Updating N1 from Output(NotReady(Unknown)) to Output(FinishedSkipped)
[32mengine.rs:1020[0m	106 | Process signals, depth 0
[32mengine.rs:1338[0m	107 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	107 | 	 Signal { kind: ConsiderJob, node_idx: 3 } N3
[32mengine.rs:1340[0m	107 | 	 Signal { kind: JobDone, node_idx: 3 } N3
[32mengine.rs:1019[0m	107 | 
[32mengine.rs:1020[0m	107 | Process signals, depth 2
[32mengine.rs:1026[0m	107 | 
[32mlib.rs:229[0m	107 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:1775[0m	107 | -> new Signal { kind: JobReadyToRun, node_idx: 1 } N2
[32mengine.rs:1206[0m	107 | 	Updating N1 from Ephemeral(Running(Validated)) to Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1348[0m	107 | Leaving process signals, 1
[32mengine.rs:1348[0m	107 | Leaving process signals, 0
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1775[0m	107 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: ConsiderJob, node_idx: 1 } for N1. Current state: Output(NotReady(Unknown))
[32mengine.rs:1338[0m	107 | New signals after process_signals - adding and processing
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: ConsiderJob, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1675[0m	107 | Considering an already finished job -> no-op
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: JobDone, node_idx: 3 } for N3. Current state: Always(FinishedUpstreamFailure)
[32mengine.rs:1348[0m	107 | Leaving process signals, 2
[32mengine.rs:1348[0m	107 | Leaving process signals, 1
[32mengine.rs:1348[0m	107 | Leaving process signals, 0
[32mengine.rs:1631[0m	107 | 		 not_done: 0, invalidated: false
[32mengine.rs:1020[0m	107 | Process signals, depth 4
[32mengine.rs:1026[0m	107 | 
[32mengine.rs:1027[0m	107 | 	Handling Signal { kind: JobReadyToRun, node_idx: 3 } for N3. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	107 | 	Updating N3 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	107 | Leaving process signals, 4
[32mengine.rs:1348[0m	107 | Leaving process signals, 3
[32mengine.rs:1221[0m	107 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1170[0m	107 | -> new Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1006[0m	107 | -> new Signal { kind: JobCleanedUp, node_idx: 0 } N3
[32mengine.rs:1019[0m	107 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 0
[32mengine.rs:1348[0m	108 | Leaving process signals, 0
[32mengine.rs:2213[0m	108 | done adding root signals

[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 0
[32mengine.rs:1348[0m	108 | Leaving process signals, 0
[32mengine.rs:1338[0m	107 | New signals after process_signals - adding and processing
[32mengine.rs:1348[0m	107 | Leaving process signals, 2
[32mengine.rs:1338[0m	108 | New signals after process_signals - adding and processing
[32mengine.rs:1026[0m	108 | 
[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 0
[32mengine.rs:1026[0m	108 | 
[32mengine.rs:1027[0m	108 | 	Handling Signal { kind: JobCleanedUp, node_idx: 0 } for N3. Current state: Ephemeral(FinishedSuccessReadyForCleanup)
[32mengine.rs:1320[0m	108 | 	Updating N3 from Ephemeral(FinishedSuccessReadyForCleanup) to Ephemeral(FinishedSuccessCleanedUp)
[32mengine.rs:1340[0m	107 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:873[0m	107 | removed leaf ephemeral N4
[32mengine.rs:873[0m	108 | removed leaf ephemeral N3
[32mengine.rs:873[0m	108 | removed leaf ephemeral N1
[32mengine.rs:873[0m	108 | removed leaf ephemeral N2
[32mengine.rs:1340[0m	108 | 	 Signal { kind: JobDone, node_idx: 1 } N1
[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 1
[32mengine.rs:1026[0m	108 | 
[32mengine.rs:1027[0m	108 | 	Handling Signal { kind: JobDone, node_idx: 1 } for N1. Current state: Ephemeral(FinishedSuccessNotReadyForCleanup)
[32mengine.rs:1182[0m	108 | -> new Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1183[0m	108 | reconsidering lead to no update, all current gen
[32mengine.rs:1338[0m	108 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	108 | 	 Signal { kind: ConsiderJob, node_idx: 4 } N4
[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 2
[32mengine.rs:1026[0m	108 | 
[32mengine.rs:1027[0m	108 | 	Handling Signal { kind: ConsiderJob, node_idx: 4 } for N4. Current state: Output(NotReady(Invalidated))
[32mengine.rs:1348[0m	108 | Leaving process signals, 2
[32mengine.rs:1348[0m	108 | Leaving process signals, 1
[32mengine.rs:1348[0m	108 | Leaving process signals, 0
[32mlib.rs:251[0m	108 | Running N2
[32mengine.rs:903[0m	108 | 	Updating N2 from Ephemeral(ReadyToRun(Invalidated)) to Ephemeral(Running(Invalidated))
[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 0
[32mengine.rs:1348[0m	108 | Leaving process signals, 0
[32mengine.rs:2206[0m	108 | root node 'N0'
[32mengine.rs:2207[0m	108 | -> new Signal { kind: ConsiderJob, node_idx: 0 } N0
[32mengine.rs:2213[0m	108 | done adding root signals

[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 0
[32mengine.rs:1026[0m	108 | 
[32mengine.rs:1027[0m	108 | 	Handling Signal { kind: ConsiderJob, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1681[0m	108 | -> new Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1338[0m	108 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	108 | 	 Signal { kind: JobReadyToRun, node_idx: 0 } N0
[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 1
[32mengine.rs:1026[0m	108 | 
[32mengine.rs:1027[0m	108 | 	Handling Signal { kind: JobReadyToRun, node_idx: 0 } for N0. Current state: Always(Undetermined)
[32mengine.rs:1040[0m	108 | 	Updating N0 from Always(Undetermined) to Always(ReadyToRun)
[32mengine.rs:1348[0m	108 | Leaving process signals, 1
[32mengine.rs:1348[0m	108 | Leaving process signals, 0
[32mlib.rs:251[0m	108 | Running N0
[32mengine.rs:891[0m	108 | 	Updating N0 from Always(ReadyToRun) to Always(Running)
[32mengine.rs:971[0m	108 | -> new Signal { kind: JobFinishedSuccess, node_idx: 0 } N0
[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 0
[32mengine.rs:1026[0m	108 | 
[32mengine.rs:1027[0m	108 | 	Handling Signal { kind: JobFinishedSuccess, node_idx: 0 } for N0. Current state: Always(Running)
[32mengine.rs:1198[0m	108 | 	Updating N0 from Always(Running) to Always(FinishedSuccess)
[32mengine.rs:1221[0m	108 | -> new Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1338[0m	108 | New signals after process_signals - adding and processing
[32mengine.rs:1340[0m	108 | 	 Signal { kind: JobDone, node_idx: 0 } N0
[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 1
[32mengine.rs:1026[0m	108 | 
[32mengine.rs:1027[0m	108 | 	Handling Signal { kind: JobDone, node_idx: 0 } for N0. Current state: Always(FinishedSuccess)
[32mengine.rs:1348[0m	108 | Leaving process signals, 1
[32mengine.rs:1348[0m	108 | Leaving process signals, 0
[32mlib.rs:228[0m	108 | 
[32mlib.rs:229[0m	108 | GOGOGO ----------------------------------------------------------------
[32mengine.rs:873[0m	108 | removed leaf ephemeral N1
[32mengine.rs:873[0m	108 | removed leaf ephemeral N4
[32mengine.rs:2091[0m	108 | Input to job N0 changed.
[32mengine.rs:1019[0m	108 | 
[32mengine.rs:1020[0m	108 | Process signals, depth 0
[32mengine.rs:1348[0m	108 | Leaving process signals, 0
[32mengine.rs:2206[0m	108 | root node 'N0'
